# Add date formatting options.
directive @dateformat(formatString: String, locale: String, fromNow: Boolean, difference: String) on FIELD_DEFINITION

# Link to node by foreign-key relation.
directive @link(by: String! = "id", from: String, on: String) on FIELD_DEFINITION

# Link to File node by relative path.
directive @fileByRelativePath(from: String) on FIELD_DEFINITION

# Proxy resolver from another field.
directive @proxy(from: String!, fromNode: Boolean! = false) on FIELD_DEFINITION

# Infer field types from field values.
directive @infer on OBJECT

# Do not infer field types from field values.
directive @dontInfer on OBJECT

# Define the mime-types handled by this type.
directive @mimeTypes(
  # The mime-types handled by this type.
  types: [String!]! = []
) on OBJECT

# Define parent-child relations between types. This is used to add `child*` and `children*` convenience fields like `childImageSharp`.
directive @childOf(
  # A list of mime-types this type is a child of. Usually these are the mime-types handled by a transformer plugin.
  mimeTypes: [String!]! = []

  # A list of types this type is a child of. Usually these are the types handled by a transformer plugin.
  types: [String!]! = []
) on OBJECT

# DEPRECATED: Use interface inheritance instead, i.e. "interface Foo implements Node".
#
# Adds root query fields for an interface. All implementing types must also implement the Node interface.
directive @nodeInterface on INTERFACE

type File implements Node {
  sourceInstanceName: String!
  absolutePath: String!
  relativePath: String!
  extension: String!
  size: Int!
  prettySize: String!
  modifiedTime(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date!
  accessTime(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date!
  changeTime(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date!
  birthTime(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date!
  root: String!
  dir: String!
  base: String!
  ext: String!
  name: String!
  relativeDirectory: String!
  dev: Int!
  mode: Int!
  nlink: Int!
  uid: Int!
  gid: Int!
  rdev: Int!
  ino: Float!
  atimeMs: Float!
  mtimeMs: Float!
  ctimeMs: Float!
  atime(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date!
  mtime(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date!
  ctime(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date!
  birthtime: Date @deprecated(reason: "Use `birthTime` instead")
  birthtimeMs: Float @deprecated(reason: "Use `birthTime` instead")
  blksize: Int
  blocks: Int
  url: String

  # Returns all children nodes filtered by type ImageSharp
  childrenImageSharp: [ImageSharp]

  # Returns the first child node of type ImageSharp or null if there are no children of given type on this node
  childImageSharp: ImageSharp
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
}

# Node Interface
interface Node {
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
}

type Internal {
  content: String
  contentDigest: String!
  description: String
  fieldOwners: [String]
  ignoreType: Boolean
  mediaType: String
  owner: String!
  type: String!
}

# A date string, such as 2007-12-03, compliant with the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
scalar Date

type Directory implements Node {
  sourceInstanceName: String!
  absolutePath: String!
  relativePath: String!
  extension: String!
  size: Int!
  prettySize: String!
  modifiedTime(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date!
  accessTime(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date!
  changeTime(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date!
  birthTime(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date!
  root: String!
  dir: String!
  base: String!
  ext: String!
  name: String!
  relativeDirectory: String!
  dev: Int!
  mode: Int!
  nlink: Int!
  uid: Int!
  gid: Int!
  rdev: Int!
  ino: Float!
  atimeMs: Float!
  mtimeMs: Float!
  ctimeMs: Float!
  atime(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date!
  mtime(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date!
  ctime(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date!
  birthtime: Date @deprecated(reason: "Use `birthTime` instead")
  birthtimeMs: Float @deprecated(reason: "Use `birthTime` instead")
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
}

type Site implements Node {
  buildTime(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date
  siteMetadata: SiteSiteMetadata
  port: Int
  host: String
  polyfill: Boolean
  pathPrefix: String
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
}

type SiteSiteMetadata {
  title: String
  description: String
}

type SiteFunction implements Node {
  functionRoute: String!
  pluginName: String!
  originalAbsoluteFilePath: String!
  originalRelativeFilePath: String!
  relativeCompiledFilePath: String!
  absoluteCompiledFilePath: String!
  matchPath: String
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
}

type SitePage implements Node {
  path: String!
  component: String!
  internalComponentName: String!
  componentChunkName: String!
  matchPath: String
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
  isCreatedByStatefulCreatePages: Boolean
  context: SitePageContext
  pluginCreator: SitePlugin
  pluginCreatorId: String
}

type SitePageContext {
  id: String
  offset: Int
  postsPerPage: Int
}

interface WpNode {
  # The globally unique ID for the object
  id: ID!
}

interface WpContentNode implements Node {
  # Connection between the ContentNode type and the ContentType type
  contentType: WpContentNodeToContentTypeConnectionEdge

  # The ID of the node in the database.
  databaseId: Int!

  # Post publishing date.
  date(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date

  # The publishing date set in GMT.
  dateGmt(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date

  # The desired slug of the post
  desiredSlug: String

  # The RSS enclosure for the object
  enclosure: String

  # The global unique identifier for this post. This currently matches the value stored in WP_Post-&gt;guid and the guid column in the &quot;post_objects&quot; database table.
  guid: String
  id: ID!

  # Whether the node is a Content Node
  isContentNode: Boolean!

  # Whether the node is a Term
  isTermNode: Boolean!

  # The user that most recently edited the node
  lastEditedBy: WpContentNodeToEditLastConnectionEdge

  # The permalink of the post
  link: String

  # The local modified time for a post. If a post was recently updated the modified field will change to match the corresponding time.
  modified(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date

  # The GMT modified time for a post. If a post was recently updated the modified field will change to match the corresponding time in GMT.
  modifiedGmt(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date

  # The uri slug for the post. This is equivalent to the WP_Post-&gt;post_name field and the post_name column in the database for the &quot;post_objects&quot; table.
  slug: String

  # The current status of the object
  status: String

  # The template assigned to a node of content
  template: WpContentTemplate

  # The unique resource identifier path
  uri: String
  nodeType: String
  parent: Node
  children: [Node!]!
  internal: Internal!
}

interface WpUniformResourceIdentifiable {
  # The unique resource identifier path
  id: ID!

  # Whether the node is a Content Node
  isContentNode: Boolean!

  # Whether the node is a Term
  isTermNode: Boolean!

  # The unique resource identifier path
  uri: String
}

# Connection between the ContentNode type and the ContentType type
type WpContentNodeToContentTypeConnectionEdge {
  # The node of the connection, without the edges
  node: WpContentType
}

# An Post Type object
type WpContentType implements Node & WpNode & WpUniformResourceIdentifiable {
  # The url path of the first page of the archive page for this content type.
  archivePath: String

  # Whether this content type should can be exported.
  canExport: Boolean

  # Connection between the ContentType type and the Taxonomy type
  connectedTaxonomies: WpContentTypeToTaxonomyConnection

  # Connection between the ContentType type and the ContentNode type
  contentNodes: WpContentTypeToContentNodeConnection

  # Whether content of this type should be deleted when the author of it is deleted from the system.
  deleteWithUser: Boolean

  # Description of the content type.
  description: String

  # Whether to exclude nodes of this content type from front end search results.
  excludeFromSearch: Boolean

  # The plural name of the content type within the GraphQL Schema.
  graphqlPluralName: String

  # The singular name of the content type within the GraphQL Schema.
  graphqlSingleName: String

  # Whether this content type should have archives. Content archives are generated by type and by date.
  hasArchive: Boolean

  # Whether the content type is hierarchical, for example pages.
  hierarchical: Boolean
  id: ID!

  # Whether the node is a Content Node
  isContentNode: Boolean!

  # Whether this page is set to the static front page.
  isFrontPage: Boolean!

  # Whether this page is set to the blog posts page.
  isPostsPage: Boolean!

  # Whether the node is a Term
  isTermNode: Boolean!

  # Display name of the content type.
  label: String

  # Details about the content type labels.
  labels: WpPostTypeLabelDetails

  # The name of the icon file to display as a menu icon.
  menuIcon: String

  # The position of this post type in the menu. Only applies if show_in_menu is true.
  menuPosition: Int

  # The internal name of the post type. This should not be used for display purposes.
  name: String

  # Whether a content type is intended for use publicly either via the admin interface or by front-end users. While the default settings of exclude_from_search, publicly_queryable, show_ui, and show_in_nav_menus are inherited from public, each does not rely on this relationship and controls a very specific intention.
  public: Boolean

  # Whether queries can be performed on the front end for the content type as part of parse_request().
  publiclyQueryable: Boolean

  # Name of content type to display in REST API &quot;wp/v2&quot; namespace.
  restBase: String

  # The REST Controller class assigned to handling this content type.
  restControllerClass: String

  # Makes this content type available via the admin bar.
  showInAdminBar: Boolean

  # Whether to add the content type to the GraphQL Schema.
  showInGraphql: Boolean

  # Where to show the content type in the admin menu. To work, $show_ui must be true. If true, the post type is shown in its own top level menu. If false, no menu is shown. If a string of an existing top level menu (eg. &quot;tools.php&quot; or &quot;edit.php?post_type=page&quot;), the post type will be placed as a sub-menu of that.
  showInMenu: Boolean

  # Makes this content type available for selection in navigation menus.
  showInNavMenus: Boolean

  # Whether the content type is associated with a route under the the REST API &quot;wp/v2&quot; namespace.
  showInRest: Boolean

  # Whether to generate and allow a UI for managing this content type in the admin.
  showUi: Boolean

  # The unique resource identifier path
  uri: String
  nodeType: String
  parent: Node
  children: [Node!]!
  internal: Internal!
}

# Connection between the ContentType type and the Taxonomy type
type WpContentTypeToTaxonomyConnection {
  # The nodes of the connection, without the edges
  nodes: [WpTaxonomy]
}

# A taxonomy object
type WpTaxonomy implements Node & WpNode {
  # The url path of the first page of the archive page for this content type.
  archivePath: String

  # List of Content Types associated with the Taxonomy
  connectedContentTypes: WpTaxonomyToContentTypeConnection

  # Description of the taxonomy. This field is equivalent to WP_Taxonomy-&gt;description
  description: String

  # The plural name of the post type within the GraphQL Schema.
  graphqlPluralName: String

  # The singular name of the post type within the GraphQL Schema.
  graphqlSingleName: String

  # Whether the taxonomy is hierarchical
  hierarchical: Boolean
  id: ID!

  # Name of the taxonomy shown in the menu. Usually plural.
  label: String

  # The display name of the taxonomy. This field is equivalent to WP_Taxonomy-&gt;label
  name: String

  # Whether the taxonomy is publicly queryable
  public: Boolean

  # Name of content type to diplay in REST API &quot;wp/v2&quot; namespace.
  restBase: String

  # The REST Controller class assigned to handling this content type.
  restControllerClass: String

  # Whether to show the taxonomy as part of a tag cloud widget. This field is equivalent to WP_Taxonomy-&gt;show_tagcloud
  showCloud: Boolean

  # Whether to display a column for the taxonomy on its post type listing screens.
  showInAdminColumn: Boolean

  # Whether to add the post type to the GraphQL Schema.
  showInGraphql: Boolean

  # Whether to show the taxonomy in the admin menu
  showInMenu: Boolean

  # Whether the taxonomy is available for selection in navigation menus.
  showInNavMenus: Boolean

  # Whether to show the taxonomy in the quick/bulk edit panel.
  showInQuickEdit: Boolean

  # Whether to add the post type route in the REST API &quot;wp/v2&quot; namespace.
  showInRest: Boolean

  # Whether to generate and allow a UI for managing terms in this taxonomy in the admin
  showUi: Boolean
  nodeType: String
  parent: Node
  children: [Node!]!
  internal: Internal!
}

# Connection between the Taxonomy type and the ContentType type
type WpTaxonomyToContentTypeConnection {
  # The nodes of the connection, without the edges
  nodes: [WpContentType]
}

# Connection between the ContentType type and the ContentNode type
type WpContentTypeToContentNodeConnection {
  # The nodes of the connection, without the edges
  nodes: [WpContentNode]
}

# Details for labels of the PostType
type WpPostTypeLabelDetails {
  # Default is ‘Add New’ for both hierarchical and non-hierarchical types.
  addNew: String

  # Label for adding a new singular item.
  addNewItem: String

  # Label to signify all items in a submenu link.
  allItems: String

  # Label for archives in nav menus
  archives: String

  # Label for the attributes meta box.
  attributes: String

  # Label for editing a singular item.
  editItem: String

  # Label for the Featured Image meta box title.
  featuredImage: String

  # Label for the table views hidden heading.
  filterItemsList: String

  # Label for the media frame button.
  insertIntoItem: String

  # Label for the table hidden heading.
  itemsList: String

  # Label for the table pagination hidden heading.
  itemsListNavigation: String

  # Label for the menu name.
  menuName: String

  # General name for the post type, usually plural.
  name: String

  # Label for the new item page title.
  newItem: String

  # Label used when no items are found.
  notFound: String

  # Label used when no items are in the trash.
  notFoundInTrash: String

  # Label used to prefix parents of hierarchical items.
  parentItemColon: String

  # Label for removing the featured image.
  removeFeaturedImage: String

  # Label for searching plural items.
  searchItems: String

  # Label for setting the featured image.
  setFeaturedImage: String

  # Name for one object of this post type.
  singularName: String

  # Label for the media frame filter.
  uploadedToThisItem: String

  # Label in the media frame for using a featured image.
  useFeaturedImage: String

  # Label for viewing a singular item.
  viewItem: String

  # Label for viewing post type archives.
  viewItems: String
}

# Connection between the ContentNode type and the User type
type WpContentNodeToEditLockConnectionEdge {
  # The timestamp for when the node was last edited
  lockTimestamp: String

  # The node of the connection, without the edges
  node: WpUser
}

# A User object
type WpUser implements Node & WpNode & WpUniformResourceIdentifiable & WpCommenter & WpDatabaseIdentifier {
  # Avatar object for user. The avatar object can be retrieved in different sizes by specifying the size argument.
  avatar: WpAvatar

  # User metadata option name. Usually it will be &quot;wp_capabilities&quot;.
  capKey: String

  # A list of capabilities (permissions) granted to the user
  capabilities: [String]

  # Connection between the User type and the Comment type
  comments: WpUserToCommentConnection

  # Identifies the primary key from the database.
  databaseId: Int!

  # Description of the user.
  description: String

  # Email address of the user. This is equivalent to the WP_User-&gt;user_email property.
  email: String

  # A complete list of capabilities including capabilities inherited from a role. This is equivalent to the array keys of WP_User-&gt;allcaps.
  extraCapabilities: [String]

  # First name of the user. This is equivalent to the WP_User-&gt;user_first_name property.
  firstName: String
  id: ID!

  # Whether the node is a Content Node
  isContentNode: Boolean!

  # Whether the node is a Term
  isTermNode: Boolean!

  # Last name of the user. This is equivalent to the WP_User-&gt;user_last_name property.
  lastName: String

  # The preferred language locale set for the user. Value derived from get_user_locale().
  locale: String

  # Display name of the user. This is equivalent to the WP_User-&gt;dispaly_name property.
  name: String

  # The nicename for the user. This field is equivalent to WP_User-&gt;user_nicename
  nicename: String

  # Nickname of the user.
  nickname: String

  # Connection between the User type and the page type
  pages: WpUserToPageConnection

  # Connection between the User type and the post type
  posts: WpUserToPostConnection

  # The date the user registered or was created. The field follows a full ISO8601 date string format.
  registeredDate: String

  # Connection between the User type and the UserRole type
  roles: WpUserToUserRoleConnection

  # The slug for the user. This field is equivalent to WP_User-&gt;user_nicename
  slug: String

  # The unique resource identifier path
  uri: String

  # A website url that is associated with the user.
  url: String

  # Username for the user. This field is equivalent to WP_User-&gt;user_login.
  username: String
  nodeType: String
  parent: Node
  children: [Node!]!
  internal: Internal!
}

interface WpCommenter {
  # Identifies the primary key from the database.
  databaseId: Int!

  # The email address of the author of a comment.
  email: String

  # The globally unique identifier for the comment author.
  id: ID!

  # The name of the author of a comment.
  name: String

  # The url of the author of a comment.
  url: String
}

interface WpDatabaseIdentifier {
  # The unique identifier stored in the database
  databaseId: Int!
}

# Avatars are profile images for users. WordPress by default uses the Gravatar service to host and fetch avatars from.
type WpAvatar {
  # URL for the default image or a default type. Accepts &#039;404&#039; (return a 404 instead of a default image), &#039;retro&#039; (8bit), &#039;monsterid&#039; (monster), &#039;wavatar&#039; (cartoon face), &#039;indenticon&#039; (the &#039;quilt&#039;), &#039;mystery&#039;, &#039;mm&#039;, or &#039;mysteryman&#039; (The Oyster Man), &#039;blank&#039; (transparent GIF), or &#039;gravatar_default&#039; (the Gravatar logo).
  default: String

  # HTML attributes to insert in the IMG element. Is not sanitized.
  extraAttr: String

  # Whether to always show the default image, never the Gravatar.
  forceDefault: Boolean

  # Whether the avatar was successfully found.
  foundAvatar: Boolean

  # Height of the avatar image.
  height: Int

  # What rating to display avatars up to. Accepts &#039;G&#039;, &#039;PG&#039;, &#039;R&#039;, &#039;X&#039;, and are judged in that order.
  rating: String

  # Type of url scheme to use. Typically HTTP vs. HTTPS.
  scheme: String

  # The size of the avatar in pixels. A value of 96 will match a 96px x 96px gravatar image.
  size: Int

  # URL for the gravatar image source.
  url: String

  # Width of the avatar image.
  width: Int
}

# Connection between the User type and the Comment type
type WpUserToCommentConnection {
  # The nodes of the connection, without the edges
  nodes: [WpComment]
}

# A Comment object
type WpComment implements Node & WpNode & WpDatabaseIdentifier {
  # User agent used to post the comment. This field is equivalent to WP_Comment-&gt;comment_agent and the value matching the &quot;comment_agent&quot; column in SQL.
  agent: String

  # The approval status of the comment. This field is equivalent to WP_Comment-&gt;comment_approved and the value matching the &quot;comment_approved&quot; column in SQL.
  approved: Boolean

  # The author of the comment
  author: WpCommentToCommenterConnectionEdge

  # IP address for the author. This field is equivalent to WP_Comment-&gt;comment_author_IP and the value matching the &quot;comment_author_IP&quot; column in SQL.
  authorIp: String

  # Connection between the Comment type and the ContentNode type
  commentedOn: WpCommentToContentNodeConnectionEdge

  # Content of the comment. This field is equivalent to WP_Comment-&gt;comment_content and the value matching the &quot;comment_content&quot; column in SQL.
  content: String

  # The unique identifier stored in the database
  databaseId: Int!

  # Date the comment was posted in local time. This field is equivalent to WP_Comment-&gt;date and the value matching the &quot;date&quot; column in SQL.
  date(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date

  # Date the comment was posted in GMT. This field is equivalent to WP_Comment-&gt;date_gmt and the value matching the &quot;date_gmt&quot; column in SQL.
  dateGmt(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date
  id: ID!

  # Karma value for the comment. This field is equivalent to WP_Comment-&gt;comment_karma and the value matching the &quot;comment_karma&quot; column in SQL.
  karma: Int

  # Connection between the Comment type and the Comment type
  wpParent: WpCommentToParentCommentConnectionEdge

  # The database id of the parent comment node or null if it is the root comment
  parentDatabaseId: Int

  # The globally unique identifier of the parent comment node.
  parentId: ID

  # Connection between the Comment type and the Comment type
  replies: WpCommentToCommentConnection

  # Type of comment. This field is equivalent to WP_Comment-&gt;comment_type and the value matching the &quot;comment_type&quot; column in SQL.
  type: String
  nodeType: String
  parent: Node
  children: [Node!]!
  internal: Internal!
}

# Connection between the Comment type and the Commenter type
type WpCommentToCommenterConnectionEdge {
  # The node of the connection, without the edges
  node: WpCommenter
}

# Connection between the Comment type and the ContentNode type
type WpCommentToContentNodeConnectionEdge {
  # The node of the connection, without the edges
  node: WpContentNode
}

# Connection between the Comment type and the Comment type
type WpCommentToParentCommentConnectionEdge {
  # The node of the connection, without the edges
  node: WpComment
}

# Connection between the Comment type and the Comment type
type WpCommentToCommentConnection {
  # The nodes of the connection, without the edges
  nodes: [WpComment]
}

# The mediaItem type
type WpMediaItem implements Node & WpNode & WpContentNode & WpUniformResourceIdentifiable & WpDatabaseIdentifier & WpNodeWithTemplate & WpNodeWithTitle & WpNodeWithAuthor & WpNodeWithComments & WpHierarchicalContentNode {
  # Alternative text to display when resource is not displayed
  altText: String

  # Returns ancestors of the node. Default ordered as lowest (closest to the child) to highest (closest to the root).
  ancestors: WpHierarchicalContentNodeToContentNodeAncestorsConnection

  # Connection between the NodeWithAuthor type and the User type
  author: WpNodeWithAuthorToUserConnectionEdge

  # The database identifier of the author of the node
  authorDatabaseId: Int

  # The globally unique identifier of the author of the node
  authorId: ID

  # The caption for the resource
  caption: String

  # Connection between the HierarchicalContentNode type and the ContentNode type
  wpChildren: WpHierarchicalContentNodeToContentNodeChildrenConnection

  # The number of comments. Even though WPGraphQL denotes this field as an integer, in WordPress this field should be saved as a numeric string for compatibility.
  commentCount: Int

  # Whether the comments are open or closed for this particular post.
  commentStatus: String

  # Connection between the mediaItem type and the Comment type
  comments: WpMediaItemToCommentConnection

  # Connection between the ContentNode type and the ContentType type
  contentType: WpContentNodeToContentTypeConnectionEdge

  # The unique identifier stored in the database
  databaseId: Int!

  # Post publishing date.
  date(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date

  # The publishing date set in GMT.
  dateGmt(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date

  # Description of the image (stored as post_content)
  description: String

  # The desired slug of the post
  desiredSlug: String

  # The RSS enclosure for the object
  enclosure: String

  # The filesize in bytes of the resource
  fileSize: Int

  # The global unique identifier for this post. This currently matches the value stored in WP_Post-&gt;guid and the guid column in the &quot;post_objects&quot; database table.
  guid: String
  id: ID!

  # Whether the node is a Content Node
  isContentNode: Boolean!

  # Whether the node is a Term
  isTermNode: Boolean!

  # The user that most recently edited the node
  lastEditedBy: WpContentNodeToEditLastConnectionEdge

  # The permalink of the post
  link: String

  # Details about the mediaItem
  mediaDetails: WpMediaDetails

  # Url of the mediaItem
  mediaItemUrl: String

  # Type of resource
  mediaType: String

  # The mime type of the mediaItem
  mimeType: String

  # The local modified time for a post. If a post was recently updated the modified field will change to match the corresponding time.
  modified(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date

  # The GMT modified time for a post. If a post was recently updated the modified field will change to match the corresponding time in GMT.
  modifiedGmt(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date

  # The parent of the node. The parent object can be of various types
  wpParent: WpHierarchicalContentNodeToParentContentNodeConnectionEdge

  # Database id of the parent node
  parentDatabaseId: Int

  # The globally unique identifier of the parent node.
  parentId: ID

  # The sizes attribute value for an image.
  sizes: String

  # The uri slug for the post. This is equivalent to the WP_Post-&gt;post_name field and the post_name column in the database for the &quot;post_objects&quot; table.
  slug: String

  # Url of the mediaItem
  sourceUrl: String

  # The srcset attribute specifies the URL of the image to use in different situations. It is a comma separated string of urls and their widths.
  srcSet: String

  # The current status of the object
  status: String

  # The template assigned to the node
  template: WpContentTemplate

  # The title of the post. This is currently just the raw title. An amendment to support rendered title needs to be made.
  title: String

  # The unique resource identifier path
  uri: String
  nodeType: String
  remoteFile: File @deprecated(reason: "MediaItem.remoteFile was renamed to localFile")
  localFile: File
  parent: Node
  children: [Node!]!
  internal: Internal!
}

interface WpNodeWithTemplate {
  # The template assigned to the node
  template: WpContentTemplate
}

interface WpNodeWithTitle {
  # The title of the post. This is currently just the raw title. An amendment to support rendered title needs to be made.
  title: String
}

interface WpNodeWithAuthor {
  # Connection between the NodeWithAuthor type and the User type
  author: WpNodeWithAuthorToUserConnectionEdge

  # The database identifier of the author of the node
  authorDatabaseId: Int

  # The globally unique identifier of the author of the node
  authorId: ID
}

interface WpNodeWithComments {
  # The number of comments. Even though WPGraphQL denotes this field as an integer, in WordPress this field should be saved as a numeric string for compatibility.
  commentCount: Int

  # Whether the comments are open or closed for this particular post.
  commentStatus: String
}

interface WpHierarchicalContentNode {
  # Returns ancestors of the node. Default ordered as lowest (closest to the child) to highest (closest to the root).
  ancestors: WpHierarchicalContentNodeToContentNodeAncestorsConnection

  # Connection between the HierarchicalContentNode type and the ContentNode type
  wpChildren: WpHierarchicalContentNodeToContentNodeChildrenConnection

  # The parent of the node. The parent object can be of various types
  wpParent: WpHierarchicalContentNodeToParentContentNodeConnectionEdge

  # Database id of the parent node
  parentDatabaseId: Int

  # The globally unique identifier of the parent node.
  parentId: ID
}

interface WpContentTemplate {
  # The name of the template
  templateName: String
}

# Connection between the NodeWithAuthor type and the User type
type WpNodeWithAuthorToUserConnectionEdge {
  # The node of the connection, without the edges
  node: WpUser
}

# Connection between the HierarchicalContentNode type and the ContentNode type
type WpHierarchicalContentNodeToContentNodeAncestorsConnection {
  # The nodes of the connection, without the edges
  nodes: [WpContentNode]
}

# Connection between the HierarchicalContentNode type and the ContentNode type
type WpHierarchicalContentNodeToContentNodeChildrenConnection {
  # The nodes of the connection, without the edges
  nodes: [WpContentNode]
}

# Connection between the HierarchicalContentNode type and the ContentNode type
type WpHierarchicalContentNodeToParentContentNodeConnectionEdge {
  # The node of the connection, without the edges
  node: WpContentNode
}

# Connection between the mediaItem type and the Comment type
type WpMediaItemToCommentConnection {
  # The nodes of the connection, without the edges
  nodes: [WpComment]
}

# Connection between the ContentNode type and the User type
type WpContentNodeToEditLastConnectionEdge {
  # The node of the connection, without the edges
  node: WpUser
}

# File details for a Media Item
type WpMediaDetails {
  # The filename of the mediaItem
  file: String

  # The height of the mediaItem
  height: Int

  # Meta information associated with the mediaItem
  meta: WpMediaItemMeta

  # The available sizes of the mediaItem
  sizes: [WpMediaSize]

  # The width of the mediaItem
  width: Int
}

# Meta connected to a MediaItem
type WpMediaItemMeta {
  # Aperture measurement of the media item.
  aperture: Float

  # Information about the camera used to create the media item.
  camera: String

  # The text string description associated with the media item.
  caption: String

  # Copyright information associated with the media item.
  copyright: String

  # The date/time when the media was created.
  createdTimestamp: Int

  # The original creator of the media item.
  credit: String

  # The focal length value of the media item.
  focalLength: Float

  # The ISO (International Organization for Standardization) value of the media item.
  iso: Int

  # List of keywords used to describe or identfy the media item.
  keywords: [String]

  # The vertical or horizontal aspect of the media item.
  orientation: String

  # The shutter speed information of the media item.
  shutterSpeed: Float

  # A useful title for the media item.
  title: String
}

# Details of an available size for a media item
type WpMediaSize {
  # The filename of the referenced size
  file: String

  # The filesize of the resource
  fileSize: Int

  # The height of the referenced size
  height: String

  # The mime type of the referenced size
  mimeType: String

  # The referenced size name
  name: String

  # The url of the referenced size
  sourceUrl: String

  # The width of the referenced size
  width: String
}

# Connection between the User type and the page type
type WpUserToPageConnection {
  # The nodes of the connection, without the edges
  nodes: [WpPage]
}

# The page type
type WpPage implements Node & WpNode & WpContentNode & WpUniformResourceIdentifiable & WpDatabaseIdentifier & WpNodeWithTemplate & WpNodeWithTitle & WpNodeWithContentEditor & WpNodeWithAuthor & WpNodeWithFeaturedImage & WpNodeWithComments & WpNodeWithRevisions & WpNodeWithPageAttributes & WpHierarchicalContentNode & WpMenuItemLinkable {
  # Returns ancestors of the node. Default ordered as lowest (closest to the child) to highest (closest to the root).
  ancestors: WpHierarchicalContentNodeToContentNodeAncestorsConnection

  # Connection between the NodeWithAuthor type and the User type
  author: WpNodeWithAuthorToUserConnectionEdge

  # The database identifier of the author of the node
  authorDatabaseId: Int

  # The globally unique identifier of the author of the node
  authorId: ID

  # Connection between the HierarchicalContentNode type and the ContentNode type
  wpChildren: WpHierarchicalContentNodeToContentNodeChildrenConnection

  # The number of comments. Even though WPGraphQL denotes this field as an integer, in WordPress this field should be saved as a numeric string for compatibility.
  commentCount: Int

  # Whether the comments are open or closed for this particular post.
  commentStatus: String

  # Connection between the page type and the Comment type
  comments: WpPageToCommentConnection

  # The content of the post.
  content: String

  # Connection between the ContentNode type and the ContentType type
  contentType: WpContentNodeToContentTypeConnectionEdge

  # The unique resource identifier path
  databaseId: Int!

  # Post publishing date.
  date(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date

  # The publishing date set in GMT.
  dateGmt(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date

  # The desired slug of the post
  desiredSlug: String

  # The RSS enclosure for the object
  enclosure: String

  # Connection between the NodeWithFeaturedImage type and the MediaItem type
  featuredImage: WpNodeWithFeaturedImageToMediaItemConnectionEdge

  # The database identifier for the featured image node assigned to the content node
  featuredImageDatabaseId: Int

  # Globally unique ID of the featured image assigned to the node
  featuredImageId: ID

  # The global unique identifier for this post. This currently matches the value stored in WP_Post-&gt;guid and the guid column in the &quot;post_objects&quot; database table.
  guid: String
  id: ID!

  # Whether the node is a Content Node
  isContentNode: Boolean!

  # Whether this page is set to the static front page.
  isFrontPage: Boolean!

  # Whether this page is set to the blog posts page.
  isPostsPage: Boolean!

  # Whether this page is set to the privacy page.
  isPrivacyPage: Boolean!

  # True if the node is a revision of another node
  isRevision: Boolean

  # Whether the node is a Term
  isTermNode: Boolean!

  # The user that most recently edited the node
  lastEditedBy: WpContentNodeToEditLastConnectionEdge

  # The permalink of the post
  link: String

  # A field used for ordering posts. This is typically used with nav menu items or for special ordering of hierarchical content types.
  menuOrder: Int

  # The local modified time for a post. If a post was recently updated the modified field will change to match the corresponding time.
  modified(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date

  # The GMT modified time for a post. If a post was recently updated the modified field will change to match the corresponding time in GMT.
  modifiedGmt(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date

  # The parent of the node. The parent object can be of various types
  wpParent: WpHierarchicalContentNodeToParentContentNodeConnectionEdge

  # Database id of the parent node
  parentDatabaseId: Int

  # The globally unique identifier of the parent node.
  parentId: ID

  # The uri slug for the post. This is equivalent to the WP_Post-&gt;post_name field and the post_name column in the database for the &quot;post_objects&quot; table.
  slug: String

  # The current status of the object
  status: String

  # The template assigned to a node of content
  template: WpContentTemplate

  # The title of the post. This is currently just the raw title. An amendment to support rendered title needs to be made.
  title: String

  # The unique resource identifier path
  uri: String
  nodeType: String
  parent: Node
  children: [Node!]!
  internal: Internal!
}

interface WpNodeWithContentEditor {
  # The content of the post.
  content: String
}

interface WpNodeWithFeaturedImage {
  # Connection between the ContentNode type and the ContentType type
  contentType: WpContentNodeToContentTypeConnectionEdge

  # The unique identifier stored in the database
  databaseId: Int!

  # Post publishing date.
  date: Date

  # The publishing date set in GMT.
  dateGmt: Date

  # The desired slug of the post
  desiredSlug: String

  # The RSS enclosure for the object
  enclosure: String

  # Connection between the NodeWithFeaturedImage type and the MediaItem type
  featuredImage: WpNodeWithFeaturedImageToMediaItemConnectionEdge

  # The database identifier for the featured image node assigned to the content node
  featuredImageDatabaseId: Int

  # Globally unique ID of the featured image assigned to the node
  featuredImageId: ID

  # The global unique identifier for this post. This currently matches the value stored in WP_Post-&gt;guid and the guid column in the &quot;post_objects&quot; database table.
  guid: String

  # The unique resource identifier path
  id: ID!

  # Whether the node is a Content Node
  isContentNode: Boolean!

  # Whether the node is a Term
  isTermNode: Boolean!

  # The user that most recently edited the node
  lastEditedBy: WpContentNodeToEditLastConnectionEdge

  # The permalink of the post
  link: String

  # The local modified time for a post. If a post was recently updated the modified field will change to match the corresponding time.
  modified: Date

  # The GMT modified time for a post. If a post was recently updated the modified field will change to match the corresponding time in GMT.
  modifiedGmt: Date

  # The uri slug for the post. This is equivalent to the WP_Post-&gt;post_name field and the post_name column in the database for the &quot;post_objects&quot; table.
  slug: String

  # The current status of the object
  status: String

  # The template assigned to a node of content
  template: WpContentTemplate

  # The unique resource identifier path
  uri: String
}

interface WpNodeWithRevisions {
  # True if the node is a revision of another node
  isRevision: Boolean
}

interface WpNodeWithPageAttributes {
  # A field used for ordering posts. This is typically used with nav menu items or for special ordering of hierarchical content types.
  menuOrder: Int
}

interface WpMenuItemLinkable {
  # The unique resource identifier path
  databaseId: Int!

  # The unique resource identifier path
  id: ID!

  # The unique resource identifier path
  uri: String
}

# Connection between the NodeWithFeaturedImage type and the MediaItem type
type WpNodeWithFeaturedImageToMediaItemConnectionEdge {
  # The node of the connection, without the edges
  node: WpMediaItem
}

# Connection between the NodeWithRevisions type and the ContentNode type
type WpNodeWithRevisionsToContentNodeConnectionEdge {
  # The node of the connection, without the edges
  node: WpContentNode
}

# Connection between the page type and the Comment type
type WpPageToCommentConnection {
  # The nodes of the connection, without the edges
  nodes: [WpComment]
}

# Connection between the User type and the post type
type WpUserToPostConnection {
  # The nodes of the connection, without the edges
  nodes: [WpPost]
}

# The post type
type WpPost implements Node & WpNode & WpContentNode & WpUniformResourceIdentifiable & WpDatabaseIdentifier & WpNodeWithTemplate & WpNodeWithTitle & WpNodeWithContentEditor & WpNodeWithAuthor & WpNodeWithFeaturedImage & WpNodeWithExcerpt & WpNodeWithComments & WpNodeWithTrackbacks & WpNodeWithRevisions & WpMenuItemLinkable {
  # Connection between the NodeWithAuthor type and the User type
  author: WpNodeWithAuthorToUserConnectionEdge

  # The database identifier of the author of the node
  authorDatabaseId: Int

  # The globally unique identifier of the author of the node
  authorId: ID

  # Connection between the post type and the category type
  categories: WpPostToCategoryConnection

  # The number of comments. Even though WPGraphQL denotes this field as an integer, in WordPress this field should be saved as a numeric string for compatibility.
  commentCount: Int

  # Whether the comments are open or closed for this particular post.
  commentStatus: String

  # Connection between the post type and the Comment type
  comments: WpPostToCommentConnection

  # The content of the post.
  content: String

  # Connection between the ContentNode type and the ContentType type
  contentType: WpContentNodeToContentTypeConnectionEdge

  # The unique resource identifier path
  databaseId: Int!

  # Post publishing date.
  date(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date

  # The publishing date set in GMT.
  dateGmt(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date

  # The desired slug of the post
  desiredSlug: String

  # The RSS enclosure for the object
  enclosure: String

  # The excerpt of the post.
  excerpt: String

  # Connection between the NodeWithFeaturedImage type and the MediaItem type
  featuredImage: WpNodeWithFeaturedImageToMediaItemConnectionEdge

  # The database identifier for the featured image node assigned to the content node
  featuredImageDatabaseId: Int

  # Globally unique ID of the featured image assigned to the node
  featuredImageId: ID

  # The global unique identifier for this post. This currently matches the value stored in WP_Post-&gt;guid and the guid column in the &quot;post_objects&quot; database table.
  guid: String
  id: ID!

  # Whether the node is a Content Node
  isContentNode: Boolean!

  # True if the node is a revision of another node
  isRevision: Boolean

  # Whether this page is sticky
  isSticky: Boolean!

  # Whether the node is a Term
  isTermNode: Boolean!

  # The user that most recently edited the node
  lastEditedBy: WpContentNodeToEditLastConnectionEdge

  # The permalink of the post
  link: String

  # The local modified time for a post. If a post was recently updated the modified field will change to match the corresponding time.
  modified(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date

  # The GMT modified time for a post. If a post was recently updated the modified field will change to match the corresponding time in GMT.
  modifiedGmt(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date

  # Whether the pings are open or closed for this particular post.
  pingStatus: String

  # URLs that have been pinged.
  pinged: [String]

  # Connection between the post type and the postFormat type
  postFormats: WpPostToPostFormatConnection

  # The uri slug for the post. This is equivalent to the WP_Post-&gt;post_name field and the post_name column in the database for the &quot;post_objects&quot; table.
  slug: String

  # The current status of the object
  status: String

  # Connection between the post type and the tag type
  tags: WpPostToTagConnection

  # The template assigned to a node of content
  template: WpContentTemplate

  # Connection between the post type and the TermNode type
  terms: WpPostToTermNodeConnection

  # The title of the post. This is currently just the raw title. An amendment to support rendered title needs to be made.
  title: String

  # URLs queued to be pinged.
  toPing: [String]

  # The unique resource identifier path
  uri: String
  nodeType: String
  parent: Node
  children: [Node!]!
  internal: Internal!
}

interface WpNodeWithExcerpt {
  # The excerpt of the post.
  excerpt: String
}

interface WpNodeWithTrackbacks {
  # Whether the pings are open or closed for this particular post.
  pingStatus: String

  # URLs that have been pinged.
  pinged: [String]

  # URLs queued to be pinged.
  toPing: [String]
}

# Connection between the post type and the category type
type WpPostToCategoryConnection {
  # The nodes of the connection, without the edges
  nodes: [WpCategory]
}

# The category type
type WpCategory implements Node & WpNode & WpTermNode & WpUniformResourceIdentifiable & WpDatabaseIdentifier & WpHierarchicalTermNode & WpMenuItemLinkable {
  # The ancestors of the node. Default ordered as lowest (closest to the child) to highest (closest to the root).
  ancestors: WpCategoryToAncestorsCategoryConnection

  # Connection between the category type and the category type
  wpChildren: WpCategoryToCategoryConnection

  # Connection between the category type and the ContentNode type
  contentNodes: WpCategoryToContentNodeConnection

  # The number of objects connected to the object
  count: Int

  # The unique resource identifier path
  databaseId: Int!

  # The description of the object
  description: String
  id: ID!

  # Whether the node is a Content Node
  isContentNode: Boolean!

  # Whether the node is a Term
  isTermNode: Boolean!

  # The link to the term
  link: String

  # The human friendly name of the object.
  name: String

  # Connection between the category type and the category type
  wpParent: WpCategoryToParentCategoryConnectionEdge

  # Database id of the parent node
  parentDatabaseId: Int

  # The globally unique identifier of the parent node.
  parentId: ID

  # Connection between the category type and the post type
  posts: WpCategoryToPostConnection

  # An alphanumeric identifier for the object unique to its type.
  slug: String

  # Connection between the category type and the Taxonomy type
  taxonomy: WpCategoryToTaxonomyConnectionEdge

  # The ID of the term group that this term object belongs to
  termGroupId: Int

  # The taxonomy ID that the object is associated with
  termTaxonomyId: Int

  # The unique resource identifier path
  uri: String
  nodeType: String
  parent: Node
  children: [Node!]!
  internal: Internal!
}

interface WpHierarchicalTermNode {
  # Database id of the parent node
  parentDatabaseId: Int

  # The globally unique identifier of the parent node.
  parentId: ID
}

# Connection between the category type and the category type
type WpCategoryToAncestorsCategoryConnection {
  # The nodes of the connection, without the edges
  nodes: [WpCategory]
}

# Connection between the category type and the category type
type WpCategoryToCategoryConnection {
  # The nodes of the connection, without the edges
  nodes: [WpCategory]
}

# Connection between the category type and the ContentNode type
type WpCategoryToContentNodeConnection {
  # The nodes of the connection, without the edges
  nodes: [WpContentNode]
}

# Connection between the category type and the category type
type WpCategoryToParentCategoryConnectionEdge {
  # The node of the connection, without the edges
  node: WpCategory
}

# Connection between the category type and the post type
type WpCategoryToPostConnection {
  # The nodes of the connection, without the edges
  nodes: [WpPost]
}

# Connection between the category type and the Taxonomy type
type WpCategoryToTaxonomyConnectionEdge {
  # The node of the connection, without the edges
  node: WpTaxonomy
}

# Connection between the post type and the Comment type
type WpPostToCommentConnection {
  # The nodes of the connection, without the edges
  nodes: [WpComment]
}

# Connection between the post type and the postFormat type
type WpPostToPostFormatConnection {
  # The nodes of the connection, without the edges
  nodes: [WpPostFormat]
}

# The postFormat type
type WpPostFormat implements Node & WpNode & WpTermNode & WpUniformResourceIdentifiable & WpDatabaseIdentifier & WpMenuItemLinkable {
  # Connection between the postFormat type and the ContentNode type
  contentNodes: WpPostFormatToContentNodeConnection

  # The number of objects connected to the object
  count: Int

  # The unique resource identifier path
  databaseId: Int!

  # The description of the object
  description: String
  id: ID!

  # Whether the node is a Content Node
  isContentNode: Boolean!

  # Whether the node is a Term
  isTermNode: Boolean!

  # The link to the term
  link: String

  # The human friendly name of the object.
  name: String

  # Connection between the postFormat type and the post type
  posts: WpPostFormatToPostConnection

  # An alphanumeric identifier for the object unique to its type.
  slug: String

  # Connection between the postFormat type and the Taxonomy type
  taxonomy: WpPostFormatToTaxonomyConnectionEdge

  # The ID of the term group that this term object belongs to
  termGroupId: Int

  # The taxonomy ID that the object is associated with
  termTaxonomyId: Int

  # The unique resource identifier path
  uri: String
  nodeType: String
  parent: Node
  children: [Node!]!
  internal: Internal!
}

# Connection between the postFormat type and the ContentNode type
type WpPostFormatToContentNodeConnection {
  # The nodes of the connection, without the edges
  nodes: [WpContentNode]
}

# Connection between the postFormat type and the post type
type WpPostFormatToPostConnection {
  # The nodes of the connection, without the edges
  nodes: [WpPost]
}

# Connection between the postFormat type and the Taxonomy type
type WpPostFormatToTaxonomyConnectionEdge {
  # The node of the connection, without the edges
  node: WpTaxonomy
}

# Connection between the post type and the tag type
type WpPostToTagConnection {
  # The nodes of the connection, without the edges
  nodes: [WpTag]
}

# The tag type
type WpTag implements Node & WpNode & WpTermNode & WpUniformResourceIdentifiable & WpDatabaseIdentifier & WpMenuItemLinkable {
  # Connection between the tag type and the ContentNode type
  contentNodes: WpTagToContentNodeConnection

  # The number of objects connected to the object
  count: Int

  # The unique resource identifier path
  databaseId: Int!

  # The description of the object
  description: String
  id: ID!

  # Whether the node is a Content Node
  isContentNode: Boolean!

  # Whether the node is a Term
  isTermNode: Boolean!

  # The link to the term
  link: String

  # The human friendly name of the object.
  name: String

  # Connection between the tag type and the post type
  posts: WpTagToPostConnection

  # An alphanumeric identifier for the object unique to its type.
  slug: String

  # Connection between the tag type and the Taxonomy type
  taxonomy: WpTagToTaxonomyConnectionEdge

  # The ID of the term group that this term object belongs to
  termGroupId: Int

  # The taxonomy ID that the object is associated with
  termTaxonomyId: Int

  # The unique resource identifier path
  uri: String
  nodeType: String
  parent: Node
  children: [Node!]!
  internal: Internal!
}

# Connection between the tag type and the ContentNode type
type WpTagToContentNodeConnection {
  # The nodes of the connection, without the edges
  nodes: [WpContentNode]
}

# Connection between the tag type and the post type
type WpTagToPostConnection {
  # The nodes of the connection, without the edges
  nodes: [WpPost]
}

# Connection between the tag type and the Taxonomy type
type WpTagToTaxonomyConnectionEdge {
  # The node of the connection, without the edges
  node: WpTaxonomy
}

# Connection between the post type and the TermNode type
type WpPostToTermNodeConnection {
  # The nodes of the connection, without the edges
  nodes: [WpTermNode]
}

# Connection between the User type and the UserRole type
type WpUserToUserRoleConnection {
  # The nodes of the connection, without the edges
  nodes: [WpUserRole]
}

# A user role object
type WpUserRole implements Node & WpNode {
  # The capabilities that belong to this role
  capabilities: [String]

  # The display name of the role
  displayName: String
  id: ID!

  # The registered name of the role
  name: String
  nodeType: String
  parent: Node
  children: [Node!]!
  internal: Internal!
}

# All of the registered settings
type WpSettings {
  # Settings of the the string Settings Group
  discussionSettingsDefaultCommentStatus: String

  # Settings of the the string Settings Group
  discussionSettingsDefaultPingStatus: String

  # Settings of the the string Settings Group
  generalSettingsDateFormat: String

  # Settings of the the string Settings Group
  generalSettingsDescription: String

  # Settings of the the string Settings Group
  generalSettingsEmail: String

  # Settings of the the string Settings Group
  generalSettingsLanguage: String

  # Settings of the the integer Settings Group
  generalSettingsStartOfWeek: Int

  # Settings of the the string Settings Group
  generalSettingsTimeFormat: String

  # Settings of the the string Settings Group
  generalSettingsTimezone: String

  # Settings of the the string Settings Group
  generalSettingsTitle: String

  # Settings of the the string Settings Group
  generalSettingsUrl: String

  # Settings of the the integer Settings Group
  readingSettingsPostsPerPage: Int

  # Settings of the the integer Settings Group
  writingSettingsDefaultCategory: Int

  # Settings of the the string Settings Group
  writingSettingsDefaultPostFormat: String

  # Settings of the the boolean Settings Group
  writingSettingsUseSmilies: Boolean
}

# The discussion setting type
type WpDiscussionSettings {
  # 新しい投稿へのコメントを許可する。
  defaultCommentStatus: String

  # 新しい記事に対し他のブログからの通知 (ピンバック・トラックバック) を受け付ける。
  defaultPingStatus: String
}

# The general setting type
type WpGeneralSettings {
  # 日付文字列の書式。
  dateFormat: String

  # サイトのキャッチフレーズ。
  description: String

  # このアドレスは新規ユーザーの通知などサイト管理のために使われます。
  email: String

  # WordPress のロケールコード。
  language: String

  # 週の始まりの曜日番号。
  startOfWeek: Int

  # 時刻文字列の書式。
  timeFormat: String

  # 現在地と同じタイムゾーンの都市。
  timezone: String

  # サイト名。
  title: String

  # サイト URL。
  url: String
}

# Menus are the containers for navigation items. Menus can be assigned to menu locations, which are typically registered by the active theme.
type WpMenu implements Node & WpNode & WpDatabaseIdentifier {
  # The number of items in the menu
  count: Int

  # The unique identifier stored in the database
  databaseId: Int!
  id: ID!

  # The locations a menu is assigned to
  locations: [WpMenuLocationEnum]

  # Connection between the Menu type and the MenuItem type
  menuItems: WpMenuToMenuItemConnection

  # Display name of the menu. Equivalent to WP_Term-&gt;name.
  name: String

  # The url friendly name of the menu. Equivalent to WP_Term-&gt;slug
  slug: String
  nodeType: String
  parent: Node
  children: [Node!]!
  internal: Internal!
}

# Registered menu locations
enum WpMenuLocationEnum {
  FOOTER
  PRIMARY
}

# Connection between the Menu type and the MenuItem type
type WpMenuToMenuItemConnection {
  # The nodes of the connection, without the edges
  nodes: [WpMenuItem]
}

# Navigation menu items are the individual items assigned to a menu. These are rendered as the links in a navigation menu.
type WpMenuItem implements Node & WpNode & WpDatabaseIdentifier {
  # Connection between the MenuItem type and the MenuItem type
  childItems: WpMenuItemToMenuItemConnection

  # Connection from MenuItem to it&#039;s connected node
  connectedNode: WpMenuItemToMenuItemLinkableConnectionEdge

  # Class attribute for the menu item link
  cssClasses: [String]

  # The unique identifier stored in the database
  databaseId: Int!

  # Description of the menu item.
  description: String
  id: ID!

  # Label or title of the menu item.
  label: String

  # Link relationship (XFN) of the menu item.
  linkRelationship: String

  # The locations the menu item&#039;s Menu is assigned to
  locations: [WpMenuLocationEnum]

  # The Menu a MenuItem is part of
  menu: WpMenuItemToMenuConnectionEdge

  # Menu item order
  order: Int

  # The database id of the parent menu item or null if it is the root
  parentDatabaseId: Int

  # The globally unique identifier of the parent nav menu item object.
  parentId: ID

  # Path for the resource. Relative path for internal resources. Absolute path for external resources.
  path: String

  # Target attribute for the menu item link.
  target: String

  # Title attribute for the menu item link
  title: String

  # URL or destination of the menu item.
  url: String
  nodeType: String
  parent: Node
  children: [Node!]!
  internal: Internal!
}

# Connection between the MenuItem type and the MenuItem type
type WpMenuItemToMenuItemConnection {
  # The nodes of the connection, without the edges
  nodes: [WpMenuItem]
}

# Connection between the MenuItem type and the MenuItemLinkable type
type WpMenuItemToMenuItemLinkableConnectionEdge {
  # The node of the connection, without the edges
  node: WpMenuItemLinkable
}

# Connection between the MenuItem type and the Menu type
type WpMenuItemToMenuConnectionEdge {
  # The node of the connection, without the edges
  node: WpMenu
}

# The reading setting type
type WpReadingSettings {
  # 表示する最大投稿数。
  postsPerPage: Int
}

# Information needed by gatsby-source-wordpress.
type WpWPGatsby {
  # Returns wether or not pretty permalinks are enabled.
  arePrettyPermalinksEnabled: Boolean
}

# The writing setting type
type WpWritingSettings {
  # デフォルトの投稿カテゴリー。
  defaultCategory: Int

  # デフォルトの投稿フォーマット。
  defaultPostFormat: String

  # :-) や :-P などの顔文字を絵文字に変換します。
  useSmilies: Boolean
}

# A Comment Author object
type WpCommentAuthor implements Node & WpNode & WpCommenter {
  # Identifies the primary key from the database.
  databaseId: Int!

  # The email for the comment author
  email: String
  id: ID!

  # The name for the comment author.
  name: String

  # The url the comment author.
  url: String
  nodeType: String
  parent: Node
  children: [Node!]!
  internal: Internal!
}

# The template assigned to the node
type WpDefaultTemplate implements WpContentTemplate {
  # The name of the template
  templateName: String
}

# Non-node WPGraphQL root fields.
type Wp implements Node {
  # Entry point to get all settings for the site
  allSettings: WpSettings

  # Fields of the &#039;DiscussionSettings&#039; settings group
  discussionSettings: WpDiscussionSettings

  # Fields of the &#039;GeneralSettings&#039; settings group
  generalSettings: WpGeneralSettings

  # Fields of the &#039;ReadingSettings&#039; settings group
  readingSettings: WpReadingSettings

  # Information needed by gatsby-source-wordpress.
  wpGatsby: WpWPGatsby

  # Fields of the &#039;WritingSettings&#039; settings group
  writingSettings: WpWritingSettings
  nodeType: String
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
}

enum ImageFormat {
  NO_CHANGE
  AUTO
  JPG
  PNG
  WEBP
  AVIF
}

enum ImageFit {
  COVER
  CONTAIN
  FILL
  INSIDE
  OUTSIDE
}

enum ImageLayout {
  FIXED
  FULL_WIDTH
  CONSTRAINED
}

enum ImageCropFocus {
  CENTER
  NORTH
  NORTHEAST
  EAST
  SOUTHEAST
  SOUTH
  SOUTHWEST
  WEST
  NORTHWEST
  ENTROPY
  ATTENTION
}

input DuotoneGradient {
  highlight: String!
  shadow: String!
  opacity: Int
}

enum PotraceTurnPolicy {
  TURNPOLICY_BLACK
  TURNPOLICY_WHITE
  TURNPOLICY_LEFT
  TURNPOLICY_RIGHT
  TURNPOLICY_MINORITY
  TURNPOLICY_MAJORITY
}

input Potrace {
  turnPolicy: PotraceTurnPolicy
  turdSize: Float
  alphaMax: Float
  optCurve: Boolean
  optTolerance: Float
  threshold: Int
  blackOnWhite: Boolean
  color: String
  background: String
}

type ImageSharp implements Node {
  fixed(width: Int, height: Int, base64Width: Int, jpegProgressive: Boolean = true, pngCompressionSpeed: Int = 4, grayscale: Boolean = false, duotone: DuotoneGradient, traceSVG: Potrace, quality: Int, jpegQuality: Int, pngQuality: Int, webpQuality: Int, toFormat: ImageFormat = AUTO, toFormatBase64: ImageFormat = AUTO, cropFocus: ImageCropFocus = ATTENTION, fit: ImageFit = COVER, background: String = "rgba(0,0,0,1)", rotate: Int = 0, trim: Float = 0): ImageSharpFixed
  fluid(
    maxWidth: Int
    maxHeight: Int
    base64Width: Int
    grayscale: Boolean = false
    jpegProgressive: Boolean = true
    pngCompressionSpeed: Int = 4
    duotone: DuotoneGradient
    traceSVG: Potrace
    quality: Int
    jpegQuality: Int
    pngQuality: Int
    webpQuality: Int
    toFormat: ImageFormat = AUTO
    toFormatBase64: ImageFormat = AUTO
    cropFocus: ImageCropFocus = ATTENTION
    fit: ImageFit = COVER
    background: String = "rgba(0,0,0,1)"
    rotate: Int = 0
    trim: Float = 0
    sizes: String = ""

    # A list of image widths to be generated. Example: [ 200, 340, 520, 890 ]
    srcSetBreakpoints: [Int] = []
  ): ImageSharpFluid
  gatsbyImageData(
    # The layout for the image.
    # FIXED: A static image sized, that does not resize according to the screen width
    # FULL_WIDTH: The image resizes to fit its container. Pass a "sizes" option if it isn't going to be the full width of the screen.
    # CONSTRAINED: Resizes to fit its container, up to a maximum width, at which point it will remain fixed in size.
    layout: ImageLayout = CONSTRAINED

    # The display width of the generated image for layout = FIXED, and the maximum display width of the largest image for layout = CONSTRAINED.
    # Ignored if layout = FLUID.
    width: Int

    # The display height of the generated image for layout = FIXED, and the maximum display height of the largest image for layout = CONSTRAINED.
    # The image will be cropped if the aspect ratio does not match the source image. If omitted, it is calculated from the supplied width,
    # matching the aspect ratio of the source image.
    height: Int

    # If set along with width or height, this will set the value of the other dimension to match the provided aspect ratio, cropping the image if needed.
    # If neither width or height is provided, height will be set based on the intrinsic width of the source image.
    aspectRatio: Float

    # Format of generated placeholder image, displayed while the main image loads.
    # BLURRED: a blurred, low resolution image, encoded as a base64 data URI (default)
    # DOMINANT_COLOR: a solid color, calculated from the dominant color of the image.
    # TRACED_SVG: a low-resolution traced SVG of the image.
    # NONE: no placeholder. Set "background" to use a fixed background color.
    placeholder: ImagePlaceholder

    # Options for the low-resolution placeholder image. Set placeholder to "BLURRED" to use this
    blurredOptions: BlurredOptions

    # Options for traced placeholder SVGs. You also should set placeholder to "TRACED_SVG".
    tracedSVGOptions: Potrace

    # The image formats to generate. Valid values are "AUTO" (meaning the same format as the source image), "JPG", "PNG", "WEBP" and "AVIF".
    # The default value is [AUTO, WEBP], and you should rarely need to change this. Take care if you specify JPG or PNG when you do
    # not know the formats of the source images, as this could lead to unwanted results such as converting JPEGs to PNGs. Specifying
    # both PNG and JPG is not supported and will be ignored.
    formats: [ImageFormat]

    # A list of image pixel densities to generate. It will never generate images larger than the source, and will always include a 1x image.
    # Default is [ 1, 2 ] for FIXED images, meaning 1x and 2x and [0.25, 0.5, 1, 2] for CONSTRAINED. In this case, an image with a constrained layout
    # and width = 400 would generate images at 100, 200, 400 and 800px wide. Ignored for FULL_WIDTH images, which use breakpoints instead
    outputPixelDensities: [Float]

    # Specifies the image widths to generate. For FIXED and CONSTRAINED images it is better to allow these to be determined automatically,
    # based on the image size. For FULL_WIDTH images this can be used to override the default, which is [750, 1080, 1366, 1920].
    # It will never generate any images larger than the source.
    breakpoints: [Int]

    # The "sizes" property, passed to the img tag. This describes the display size of the image.
    # This does not affect the generated images, but is used by the browser to decide which images to download.
    # You should usually leave this blank, and a suitable value will be calculated. The exception is if a FULL_WIDTH image
    # does not actually span the full width of the screen, in which case you should pass the correct size here.
    sizes: String

    # The default quality. This is overridden by any format-specific options
    quality: Int

    # Options to pass to sharp when generating JPG images.
    jpgOptions: JPGOptions

    # Options to pass to sharp when generating PNG images.
    pngOptions: PNGOptions

    # Options to pass to sharp when generating WebP images.
    webpOptions: WebPOptions

    # Options to pass to sharp when generating AVIF images.
    avifOptions: AVIFOptions

    # Options to pass to sharp to control cropping and other image manipulations.
    transformOptions: TransformOptions

    # Background color applied to the wrapper. Also passed to sharp to use as a background when "letterboxing" an image to another aspect ratio.
    backgroundColor: String
  ): JSON!
  original: ImageSharpOriginal
  resize(width: Int, height: Int, quality: Int, jpegQuality: Int, pngQuality: Int, webpQuality: Int, jpegProgressive: Boolean = true, pngCompressionLevel: Int = 9, pngCompressionSpeed: Int = 4, grayscale: Boolean = false, duotone: DuotoneGradient, base64: Boolean = false, traceSVG: Potrace, toFormat: ImageFormat = AUTO, cropFocus: ImageCropFocus = ATTENTION, fit: ImageFit = COVER, background: String = "rgba(0,0,0,1)", rotate: Int = 0, trim: Float = 0): ImageSharpResize
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
}

type ImageSharpFixed {
  base64: String
  tracedSVG: String
  aspectRatio: Float
  width: Float!
  height: Float!
  src: String!
  srcSet: String!
  srcWebp: String
  srcSetWebp: String
  originalName: String
}

type ImageSharpFluid {
  base64: String
  tracedSVG: String
  aspectRatio: Float!
  src: String!
  srcSet: String!
  srcWebp: String
  srcSetWebp: String
  sizes: String!
  originalImg: String
  originalName: String
  presentationWidth: Int!
  presentationHeight: Int!
}

# The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
scalar JSON @specifiedBy(url: "http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf")

enum ImagePlaceholder {
  DOMINANT_COLOR
  TRACED_SVG
  BLURRED
  NONE
}

input BlurredOptions {
  # Width of the generated low-res preview. Default is 20px
  width: Int

  # Force the output format for the low-res preview. Default is to use the same format as the input. You should rarely need to change this
  toFormat: ImageFormat
}

input JPGOptions {
  quality: Int
  progressive: Boolean = true
}

input PNGOptions {
  quality: Int
  compressionSpeed: Int = 4
}

input WebPOptions {
  quality: Int
}

input AVIFOptions {
  quality: Int
  lossless: Boolean
  speed: Int
}

input TransformOptions {
  grayscale: Boolean = false
  duotone: DuotoneGradient
  rotate: Int = 0
  trim: Float = 0
  cropFocus: ImageCropFocus = ATTENTION
  fit: ImageFit = COVER
}

type ImageSharpOriginal {
  width: Float
  height: Float
  src: String
}

type ImageSharpResize {
  src: String
  tracedSVG: String
  width: Int
  height: Int
  aspectRatio: Float
  originalName: String
}

type SitePlugin implements Node {
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
  resolve: String
  name: String
  version: String
  pluginOptions: SitePluginPluginOptions
  nodeAPIs: [String]
  browserAPIs: [String]
  ssrAPIs: [String]
  pluginFilepath: String
  packageJson: SitePluginPackageJson
}

type SitePluginPluginOptions {
  url: String
  verbose: Boolean
  base64Width: Int
  stripMetadata: Boolean
  defaultQuality: Int
  failOnError: Boolean
  name: String
  short_name: String
  start_url: String
  background_color: String
  theme_color: String
  display: String
  icon: String
  legacy: Boolean
  theme_color_in_head: Boolean
  cache_busting_mode: String
  crossOrigin: String
  include_favicon: Boolean
  cacheDigest: String
  emitSchema: SitePluginPluginOptionsEmitSchema
  emitPluginDocuments: SitePluginPluginOptionsEmitPluginDocuments
  path: String
  pathCheck: Boolean
  allExtensions: Boolean
  isTSX: Boolean
  jsxPragma: String
}

type SitePluginPluginOptionsEmitSchema {
  src___generated___gatsby_schema_graphql: Boolean
  src___generated___gatsby_introspection_json: Boolean
}

type SitePluginPluginOptionsEmitPluginDocuments {
  src___generated___gatsby_plugin_documents_graphql: Boolean
}

type SitePluginPackageJson {
  name: String
  description: String
  version: String
  main: String
  license: String
  dependencies: [SitePluginPackageJsonDependencies]
  devDependencies: [SitePluginPackageJsonDevDependencies]
  peerDependencies: [SitePluginPackageJsonPeerDependencies]
  keywords: [String]
}

type SitePluginPackageJsonDependencies {
  name: String
  version: String
}

type SitePluginPackageJsonDevDependencies {
  name: String
  version: String
}

type SitePluginPackageJsonPeerDependencies {
  name: String
  version: String
}

type SiteBuildMetadata implements Node {
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
  buildTime(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to "milliseconds" but you can also pass in as the measurement "years", "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date
}

interface WpTermNode implements Node {
  # The number of objects connected to the object
  count: Int

  # Identifies the primary key from the database.
  databaseId: Int!

  # The description of the object
  description: String
  id: ID!

  # Whether the node is a Content Node
  isContentNode: Boolean!

  # Whether the node is a Term
  isTermNode: Boolean!

  # The link to the term
  link: String

  # The human friendly name of the object.
  name: String

  # An alphanumeric identifier for the object unique to its type.
  slug: String

  # The ID of the term group that this term object belongs to
  termGroupId: Int

  # The taxonomy ID that the object is associated with
  termTaxonomyId: Int

  # The unique resource identifier path
  uri: String
  nodeType: String
  parent: Node
  children: [Node!]!
  internal: Internal!
}

type Query {
  file(sourceInstanceName: StringQueryOperatorInput, absolutePath: StringQueryOperatorInput, relativePath: StringQueryOperatorInput, extension: StringQueryOperatorInput, size: IntQueryOperatorInput, prettySize: StringQueryOperatorInput, modifiedTime: DateQueryOperatorInput, accessTime: DateQueryOperatorInput, changeTime: DateQueryOperatorInput, birthTime: DateQueryOperatorInput, root: StringQueryOperatorInput, dir: StringQueryOperatorInput, base: StringQueryOperatorInput, ext: StringQueryOperatorInput, name: StringQueryOperatorInput, relativeDirectory: StringQueryOperatorInput, dev: IntQueryOperatorInput, mode: IntQueryOperatorInput, nlink: IntQueryOperatorInput, uid: IntQueryOperatorInput, gid: IntQueryOperatorInput, rdev: IntQueryOperatorInput, ino: FloatQueryOperatorInput, atimeMs: FloatQueryOperatorInput, mtimeMs: FloatQueryOperatorInput, ctimeMs: FloatQueryOperatorInput, atime: DateQueryOperatorInput, mtime: DateQueryOperatorInput, ctime: DateQueryOperatorInput, birthtime: DateQueryOperatorInput, birthtimeMs: FloatQueryOperatorInput, blksize: IntQueryOperatorInput, blocks: IntQueryOperatorInput, url: StringQueryOperatorInput, childrenImageSharp: ImageSharpFilterListInput, childImageSharp: ImageSharpFilterInput, id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput): File
  allFile(filter: FileFilterInput, sort: FileSortInput, skip: Int, limit: Int): FileConnection!
  directory(sourceInstanceName: StringQueryOperatorInput, absolutePath: StringQueryOperatorInput, relativePath: StringQueryOperatorInput, extension: StringQueryOperatorInput, size: IntQueryOperatorInput, prettySize: StringQueryOperatorInput, modifiedTime: DateQueryOperatorInput, accessTime: DateQueryOperatorInput, changeTime: DateQueryOperatorInput, birthTime: DateQueryOperatorInput, root: StringQueryOperatorInput, dir: StringQueryOperatorInput, base: StringQueryOperatorInput, ext: StringQueryOperatorInput, name: StringQueryOperatorInput, relativeDirectory: StringQueryOperatorInput, dev: IntQueryOperatorInput, mode: IntQueryOperatorInput, nlink: IntQueryOperatorInput, uid: IntQueryOperatorInput, gid: IntQueryOperatorInput, rdev: IntQueryOperatorInput, ino: FloatQueryOperatorInput, atimeMs: FloatQueryOperatorInput, mtimeMs: FloatQueryOperatorInput, ctimeMs: FloatQueryOperatorInput, atime: DateQueryOperatorInput, mtime: DateQueryOperatorInput, ctime: DateQueryOperatorInput, birthtime: DateQueryOperatorInput, birthtimeMs: FloatQueryOperatorInput, id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput): Directory
  allDirectory(filter: DirectoryFilterInput, sort: DirectorySortInput, skip: Int, limit: Int): DirectoryConnection!
  site(buildTime: DateQueryOperatorInput, siteMetadata: SiteSiteMetadataFilterInput, port: IntQueryOperatorInput, host: StringQueryOperatorInput, polyfill: BooleanQueryOperatorInput, pathPrefix: StringQueryOperatorInput, id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput): Site
  allSite(filter: SiteFilterInput, sort: SiteSortInput, skip: Int, limit: Int): SiteConnection!
  siteFunction(functionRoute: StringQueryOperatorInput, pluginName: StringQueryOperatorInput, originalAbsoluteFilePath: StringQueryOperatorInput, originalRelativeFilePath: StringQueryOperatorInput, relativeCompiledFilePath: StringQueryOperatorInput, absoluteCompiledFilePath: StringQueryOperatorInput, matchPath: StringQueryOperatorInput, id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput): SiteFunction
  allSiteFunction(filter: SiteFunctionFilterInput, sort: SiteFunctionSortInput, skip: Int, limit: Int): SiteFunctionConnection!
  sitePage(path: StringQueryOperatorInput, component: StringQueryOperatorInput, internalComponentName: StringQueryOperatorInput, componentChunkName: StringQueryOperatorInput, matchPath: StringQueryOperatorInput, id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput, isCreatedByStatefulCreatePages: BooleanQueryOperatorInput, context: SitePageContextFilterInput, pluginCreator: SitePluginFilterInput, pluginCreatorId: StringQueryOperatorInput): SitePage
  allSitePage(filter: SitePageFilterInput, sort: SitePageSortInput, skip: Int, limit: Int): SitePageConnection!
  wpContentNode(contentType: WpContentNodeToContentTypeConnectionEdgeFilterInput, databaseId: IntQueryOperatorInput, date: DateQueryOperatorInput, dateGmt: DateQueryOperatorInput, desiredSlug: StringQueryOperatorInput, enclosure: StringQueryOperatorInput, guid: StringQueryOperatorInput, id: StringQueryOperatorInput, isContentNode: BooleanQueryOperatorInput, isTermNode: BooleanQueryOperatorInput, lastEditedBy: WpContentNodeToEditLastConnectionEdgeFilterInput, link: StringQueryOperatorInput, modified: DateQueryOperatorInput, modifiedGmt: DateQueryOperatorInput, slug: StringQueryOperatorInput, status: StringQueryOperatorInput, template: WpContentTemplateFilterInput, uri: StringQueryOperatorInput, nodeType: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput): WpContentNode
  allWpContentNode(filter: WpContentNodeFilterInput, sort: WpContentNodeSortInput, skip: Int, limit: Int): WpContentNodeConnection!
  wpContentType(archivePath: StringQueryOperatorInput, canExport: BooleanQueryOperatorInput, connectedTaxonomies: WpContentTypeToTaxonomyConnectionFilterInput, contentNodes: WpContentTypeToContentNodeConnectionFilterInput, deleteWithUser: BooleanQueryOperatorInput, description: StringQueryOperatorInput, excludeFromSearch: BooleanQueryOperatorInput, graphqlPluralName: StringQueryOperatorInput, graphqlSingleName: StringQueryOperatorInput, hasArchive: BooleanQueryOperatorInput, hierarchical: BooleanQueryOperatorInput, id: StringQueryOperatorInput, isContentNode: BooleanQueryOperatorInput, isFrontPage: BooleanQueryOperatorInput, isPostsPage: BooleanQueryOperatorInput, isTermNode: BooleanQueryOperatorInput, label: StringQueryOperatorInput, labels: WpPostTypeLabelDetailsFilterInput, menuIcon: StringQueryOperatorInput, menuPosition: IntQueryOperatorInput, name: StringQueryOperatorInput, public: BooleanQueryOperatorInput, publiclyQueryable: BooleanQueryOperatorInput, restBase: StringQueryOperatorInput, restControllerClass: StringQueryOperatorInput, showInAdminBar: BooleanQueryOperatorInput, showInGraphql: BooleanQueryOperatorInput, showInMenu: BooleanQueryOperatorInput, showInNavMenus: BooleanQueryOperatorInput, showInRest: BooleanQueryOperatorInput, showUi: BooleanQueryOperatorInput, uri: StringQueryOperatorInput, nodeType: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput): WpContentType
  allWpContentType(filter: WpContentTypeFilterInput, sort: WpContentTypeSortInput, skip: Int, limit: Int): WpContentTypeConnection!
  wpTaxonomy(archivePath: StringQueryOperatorInput, connectedContentTypes: WpTaxonomyToContentTypeConnectionFilterInput, description: StringQueryOperatorInput, graphqlPluralName: StringQueryOperatorInput, graphqlSingleName: StringQueryOperatorInput, hierarchical: BooleanQueryOperatorInput, id: StringQueryOperatorInput, label: StringQueryOperatorInput, name: StringQueryOperatorInput, public: BooleanQueryOperatorInput, restBase: StringQueryOperatorInput, restControllerClass: StringQueryOperatorInput, showCloud: BooleanQueryOperatorInput, showInAdminColumn: BooleanQueryOperatorInput, showInGraphql: BooleanQueryOperatorInput, showInMenu: BooleanQueryOperatorInput, showInNavMenus: BooleanQueryOperatorInput, showInQuickEdit: BooleanQueryOperatorInput, showInRest: BooleanQueryOperatorInput, showUi: BooleanQueryOperatorInput, nodeType: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput): WpTaxonomy
  allWpTaxonomy(filter: WpTaxonomyFilterInput, sort: WpTaxonomySortInput, skip: Int, limit: Int): WpTaxonomyConnection!
  wpUser(avatar: WpAvatarFilterInput, capKey: StringQueryOperatorInput, capabilities: StringQueryOperatorInput, comments: WpUserToCommentConnectionFilterInput, databaseId: IntQueryOperatorInput, description: StringQueryOperatorInput, email: StringQueryOperatorInput, extraCapabilities: StringQueryOperatorInput, firstName: StringQueryOperatorInput, id: StringQueryOperatorInput, isContentNode: BooleanQueryOperatorInput, isTermNode: BooleanQueryOperatorInput, lastName: StringQueryOperatorInput, locale: StringQueryOperatorInput, name: StringQueryOperatorInput, nicename: StringQueryOperatorInput, nickname: StringQueryOperatorInput, pages: WpUserToPageConnectionFilterInput, posts: WpUserToPostConnectionFilterInput, registeredDate: StringQueryOperatorInput, roles: WpUserToUserRoleConnectionFilterInput, slug: StringQueryOperatorInput, uri: StringQueryOperatorInput, url: StringQueryOperatorInput, username: StringQueryOperatorInput, nodeType: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput): WpUser
  allWpUser(filter: WpUserFilterInput, sort: WpUserSortInput, skip: Int, limit: Int): WpUserConnection!
  wpComment(agent: StringQueryOperatorInput, approved: BooleanQueryOperatorInput, author: WpCommentToCommenterConnectionEdgeFilterInput, authorIp: StringQueryOperatorInput, commentedOn: WpCommentToContentNodeConnectionEdgeFilterInput, content: StringQueryOperatorInput, databaseId: IntQueryOperatorInput, date: DateQueryOperatorInput, dateGmt: DateQueryOperatorInput, id: StringQueryOperatorInput, karma: IntQueryOperatorInput, wpParent: WpCommentToParentCommentConnectionEdgeFilterInput, parentDatabaseId: IntQueryOperatorInput, parentId: IDQueryOperatorInput, replies: WpCommentToCommentConnectionFilterInput, type: StringQueryOperatorInput, nodeType: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput): WpComment
  allWpComment(filter: WpCommentFilterInput, sort: WpCommentSortInput, skip: Int, limit: Int): WpCommentConnection!
  wpMediaItem(altText: StringQueryOperatorInput, ancestors: WpHierarchicalContentNodeToContentNodeAncestorsConnectionFilterInput, author: WpNodeWithAuthorToUserConnectionEdgeFilterInput, authorDatabaseId: IntQueryOperatorInput, authorId: IDQueryOperatorInput, caption: StringQueryOperatorInput, wpChildren: WpHierarchicalContentNodeToContentNodeChildrenConnectionFilterInput, commentCount: IntQueryOperatorInput, commentStatus: StringQueryOperatorInput, comments: WpMediaItemToCommentConnectionFilterInput, contentType: WpContentNodeToContentTypeConnectionEdgeFilterInput, databaseId: IntQueryOperatorInput, date: DateQueryOperatorInput, dateGmt: DateQueryOperatorInput, description: StringQueryOperatorInput, desiredSlug: StringQueryOperatorInput, enclosure: StringQueryOperatorInput, fileSize: IntQueryOperatorInput, guid: StringQueryOperatorInput, id: StringQueryOperatorInput, isContentNode: BooleanQueryOperatorInput, isTermNode: BooleanQueryOperatorInput, lastEditedBy: WpContentNodeToEditLastConnectionEdgeFilterInput, link: StringQueryOperatorInput, mediaDetails: WpMediaDetailsFilterInput, mediaItemUrl: StringQueryOperatorInput, mediaType: StringQueryOperatorInput, mimeType: StringQueryOperatorInput, modified: DateQueryOperatorInput, modifiedGmt: DateQueryOperatorInput, wpParent: WpHierarchicalContentNodeToParentContentNodeConnectionEdgeFilterInput, parentDatabaseId: IntQueryOperatorInput, parentId: IDQueryOperatorInput, sizes: StringQueryOperatorInput, slug: StringQueryOperatorInput, sourceUrl: StringQueryOperatorInput, srcSet: StringQueryOperatorInput, status: StringQueryOperatorInput, template: WpContentTemplateFilterInput, title: StringQueryOperatorInput, uri: StringQueryOperatorInput, nodeType: StringQueryOperatorInput, remoteFile: FileFilterInput, localFile: FileFilterInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput): WpMediaItem
  allWpMediaItem(filter: WpMediaItemFilterInput, sort: WpMediaItemSortInput, skip: Int, limit: Int): WpMediaItemConnection!
  wpPage(ancestors: WpHierarchicalContentNodeToContentNodeAncestorsConnectionFilterInput, author: WpNodeWithAuthorToUserConnectionEdgeFilterInput, authorDatabaseId: IntQueryOperatorInput, authorId: IDQueryOperatorInput, wpChildren: WpHierarchicalContentNodeToContentNodeChildrenConnectionFilterInput, commentCount: IntQueryOperatorInput, commentStatus: StringQueryOperatorInput, comments: WpPageToCommentConnectionFilterInput, content: StringQueryOperatorInput, contentType: WpContentNodeToContentTypeConnectionEdgeFilterInput, databaseId: IntQueryOperatorInput, date: DateQueryOperatorInput, dateGmt: DateQueryOperatorInput, desiredSlug: StringQueryOperatorInput, enclosure: StringQueryOperatorInput, featuredImage: WpNodeWithFeaturedImageToMediaItemConnectionEdgeFilterInput, featuredImageDatabaseId: IntQueryOperatorInput, featuredImageId: IDQueryOperatorInput, guid: StringQueryOperatorInput, id: StringQueryOperatorInput, isContentNode: BooleanQueryOperatorInput, isFrontPage: BooleanQueryOperatorInput, isPostsPage: BooleanQueryOperatorInput, isPrivacyPage: BooleanQueryOperatorInput, isRevision: BooleanQueryOperatorInput, isTermNode: BooleanQueryOperatorInput, lastEditedBy: WpContentNodeToEditLastConnectionEdgeFilterInput, link: StringQueryOperatorInput, menuOrder: IntQueryOperatorInput, modified: DateQueryOperatorInput, modifiedGmt: DateQueryOperatorInput, wpParent: WpHierarchicalContentNodeToParentContentNodeConnectionEdgeFilterInput, parentDatabaseId: IntQueryOperatorInput, parentId: IDQueryOperatorInput, slug: StringQueryOperatorInput, status: StringQueryOperatorInput, template: WpContentTemplateFilterInput, title: StringQueryOperatorInput, uri: StringQueryOperatorInput, nodeType: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput): WpPage
  allWpPage(filter: WpPageFilterInput, sort: WpPageSortInput, skip: Int, limit: Int): WpPageConnection!
  wpPost(author: WpNodeWithAuthorToUserConnectionEdgeFilterInput, authorDatabaseId: IntQueryOperatorInput, authorId: IDQueryOperatorInput, categories: WpPostToCategoryConnectionFilterInput, commentCount: IntQueryOperatorInput, commentStatus: StringQueryOperatorInput, comments: WpPostToCommentConnectionFilterInput, content: StringQueryOperatorInput, contentType: WpContentNodeToContentTypeConnectionEdgeFilterInput, databaseId: IntQueryOperatorInput, date: DateQueryOperatorInput, dateGmt: DateQueryOperatorInput, desiredSlug: StringQueryOperatorInput, enclosure: StringQueryOperatorInput, excerpt: StringQueryOperatorInput, featuredImage: WpNodeWithFeaturedImageToMediaItemConnectionEdgeFilterInput, featuredImageDatabaseId: IntQueryOperatorInput, featuredImageId: IDQueryOperatorInput, guid: StringQueryOperatorInput, id: StringQueryOperatorInput, isContentNode: BooleanQueryOperatorInput, isRevision: BooleanQueryOperatorInput, isSticky: BooleanQueryOperatorInput, isTermNode: BooleanQueryOperatorInput, lastEditedBy: WpContentNodeToEditLastConnectionEdgeFilterInput, link: StringQueryOperatorInput, modified: DateQueryOperatorInput, modifiedGmt: DateQueryOperatorInput, pingStatus: StringQueryOperatorInput, pinged: StringQueryOperatorInput, postFormats: WpPostToPostFormatConnectionFilterInput, slug: StringQueryOperatorInput, status: StringQueryOperatorInput, tags: WpPostToTagConnectionFilterInput, template: WpContentTemplateFilterInput, terms: WpPostToTermNodeConnectionFilterInput, title: StringQueryOperatorInput, toPing: StringQueryOperatorInput, uri: StringQueryOperatorInput, nodeType: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput): WpPost
  allWpPost(filter: WpPostFilterInput, sort: WpPostSortInput, skip: Int, limit: Int): WpPostConnection!
  wpTermNode(count: IntQueryOperatorInput, databaseId: IntQueryOperatorInput, description: StringQueryOperatorInput, id: StringQueryOperatorInput, isContentNode: BooleanQueryOperatorInput, isTermNode: BooleanQueryOperatorInput, link: StringQueryOperatorInput, name: StringQueryOperatorInput, slug: StringQueryOperatorInput, termGroupId: IntQueryOperatorInput, termTaxonomyId: IntQueryOperatorInput, uri: StringQueryOperatorInput, nodeType: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput): WpTermNode
  allWpTermNode(filter: WpTermNodeFilterInput, sort: WpTermNodeSortInput, skip: Int, limit: Int): WpTermNodeConnection!
  wpCategory(ancestors: WpCategoryToAncestorsCategoryConnectionFilterInput, wpChildren: WpCategoryToCategoryConnectionFilterInput, contentNodes: WpCategoryToContentNodeConnectionFilterInput, count: IntQueryOperatorInput, databaseId: IntQueryOperatorInput, description: StringQueryOperatorInput, id: StringQueryOperatorInput, isContentNode: BooleanQueryOperatorInput, isTermNode: BooleanQueryOperatorInput, link: StringQueryOperatorInput, name: StringQueryOperatorInput, wpParent: WpCategoryToParentCategoryConnectionEdgeFilterInput, parentDatabaseId: IntQueryOperatorInput, parentId: IDQueryOperatorInput, posts: WpCategoryToPostConnectionFilterInput, slug: StringQueryOperatorInput, taxonomy: WpCategoryToTaxonomyConnectionEdgeFilterInput, termGroupId: IntQueryOperatorInput, termTaxonomyId: IntQueryOperatorInput, uri: StringQueryOperatorInput, nodeType: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput): WpCategory
  allWpCategory(filter: WpCategoryFilterInput, sort: WpCategorySortInput, skip: Int, limit: Int): WpCategoryConnection!
  wpPostFormat(contentNodes: WpPostFormatToContentNodeConnectionFilterInput, count: IntQueryOperatorInput, databaseId: IntQueryOperatorInput, description: StringQueryOperatorInput, id: StringQueryOperatorInput, isContentNode: BooleanQueryOperatorInput, isTermNode: BooleanQueryOperatorInput, link: StringQueryOperatorInput, name: StringQueryOperatorInput, posts: WpPostFormatToPostConnectionFilterInput, slug: StringQueryOperatorInput, taxonomy: WpPostFormatToTaxonomyConnectionEdgeFilterInput, termGroupId: IntQueryOperatorInput, termTaxonomyId: IntQueryOperatorInput, uri: StringQueryOperatorInput, nodeType: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput): WpPostFormat
  allWpPostFormat(filter: WpPostFormatFilterInput, sort: WpPostFormatSortInput, skip: Int, limit: Int): WpPostFormatConnection!
  wpTag(contentNodes: WpTagToContentNodeConnectionFilterInput, count: IntQueryOperatorInput, databaseId: IntQueryOperatorInput, description: StringQueryOperatorInput, id: StringQueryOperatorInput, isContentNode: BooleanQueryOperatorInput, isTermNode: BooleanQueryOperatorInput, link: StringQueryOperatorInput, name: StringQueryOperatorInput, posts: WpTagToPostConnectionFilterInput, slug: StringQueryOperatorInput, taxonomy: WpTagToTaxonomyConnectionEdgeFilterInput, termGroupId: IntQueryOperatorInput, termTaxonomyId: IntQueryOperatorInput, uri: StringQueryOperatorInput, nodeType: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput): WpTag
  allWpTag(filter: WpTagFilterInput, sort: WpTagSortInput, skip: Int, limit: Int): WpTagConnection!
  wpUserRole(capabilities: StringQueryOperatorInput, displayName: StringQueryOperatorInput, id: StringQueryOperatorInput, name: StringQueryOperatorInput, nodeType: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput): WpUserRole
  allWpUserRole(filter: WpUserRoleFilterInput, sort: WpUserRoleSortInput, skip: Int, limit: Int): WpUserRoleConnection!
  wpMenu(count: IntQueryOperatorInput, databaseId: IntQueryOperatorInput, id: StringQueryOperatorInput, locations: WpMenuLocationEnumQueryOperatorInput, menuItems: WpMenuToMenuItemConnectionFilterInput, name: StringQueryOperatorInput, slug: StringQueryOperatorInput, nodeType: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput): WpMenu
  allWpMenu(filter: WpMenuFilterInput, sort: WpMenuSortInput, skip: Int, limit: Int): WpMenuConnection!
  wpMenuItem(childItems: WpMenuItemToMenuItemConnectionFilterInput, connectedNode: WpMenuItemToMenuItemLinkableConnectionEdgeFilterInput, cssClasses: StringQueryOperatorInput, databaseId: IntQueryOperatorInput, description: StringQueryOperatorInput, id: StringQueryOperatorInput, label: StringQueryOperatorInput, linkRelationship: StringQueryOperatorInput, locations: WpMenuLocationEnumQueryOperatorInput, menu: WpMenuItemToMenuConnectionEdgeFilterInput, order: IntQueryOperatorInput, parentDatabaseId: IntQueryOperatorInput, parentId: IDQueryOperatorInput, path: StringQueryOperatorInput, target: StringQueryOperatorInput, title: StringQueryOperatorInput, url: StringQueryOperatorInput, nodeType: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput): WpMenuItem
  allWpMenuItem(filter: WpMenuItemFilterInput, sort: WpMenuItemSortInput, skip: Int, limit: Int): WpMenuItemConnection!
  wpCommentAuthor(databaseId: IntQueryOperatorInput, email: StringQueryOperatorInput, id: StringQueryOperatorInput, name: StringQueryOperatorInput, url: StringQueryOperatorInput, nodeType: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput): WpCommentAuthor
  allWpCommentAuthor(filter: WpCommentAuthorFilterInput, sort: WpCommentAuthorSortInput, skip: Int, limit: Int): WpCommentAuthorConnection!
  wp(allSettings: WpSettingsFilterInput, discussionSettings: WpDiscussionSettingsFilterInput, generalSettings: WpGeneralSettingsFilterInput, readingSettings: WpReadingSettingsFilterInput, wpGatsby: WpWPGatsbyFilterInput, writingSettings: WpWritingSettingsFilterInput, nodeType: StringQueryOperatorInput, id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput): Wp
  allWp(filter: WpFilterInput, sort: WpSortInput, skip: Int, limit: Int): WpConnection!
  imageSharp(fixed: ImageSharpFixedFilterInput, fluid: ImageSharpFluidFilterInput, gatsbyImageData: JSONQueryOperatorInput, original: ImageSharpOriginalFilterInput, resize: ImageSharpResizeFilterInput, id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput): ImageSharp
  allImageSharp(filter: ImageSharpFilterInput, sort: ImageSharpSortInput, skip: Int, limit: Int): ImageSharpConnection!
  sitePlugin(id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput, resolve: StringQueryOperatorInput, name: StringQueryOperatorInput, version: StringQueryOperatorInput, pluginOptions: SitePluginPluginOptionsFilterInput, nodeAPIs: StringQueryOperatorInput, browserAPIs: StringQueryOperatorInput, ssrAPIs: StringQueryOperatorInput, pluginFilepath: StringQueryOperatorInput, packageJson: SitePluginPackageJsonFilterInput): SitePlugin
  allSitePlugin(filter: SitePluginFilterInput, sort: SitePluginSortInput, skip: Int, limit: Int): SitePluginConnection!
  siteBuildMetadata(id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput, buildTime: DateQueryOperatorInput): SiteBuildMetadata
  allSiteBuildMetadata(filter: SiteBuildMetadataFilterInput, sort: SiteBuildMetadataSortInput, skip: Int, limit: Int): SiteBuildMetadataConnection!
}

input StringQueryOperatorInput {
  eq: String
  ne: String
  in: [String]
  nin: [String]
  regex: String
  glob: String
}

input IntQueryOperatorInput {
  eq: Int
  ne: Int
  gt: Int
  gte: Int
  lt: Int
  lte: Int
  in: [Int]
  nin: [Int]
}

input DateQueryOperatorInput {
  eq: Date
  ne: Date
  gt: Date
  gte: Date
  lt: Date
  lte: Date
  in: [Date]
  nin: [Date]
}

input FloatQueryOperatorInput {
  eq: Float
  ne: Float
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  in: [Float]
  nin: [Float]
}

input ImageSharpFilterListInput {
  elemMatch: ImageSharpFilterInput
}

input ImageSharpFilterInput {
  fixed: ImageSharpFixedFilterInput
  fluid: ImageSharpFluidFilterInput
  gatsbyImageData: JSONQueryOperatorInput
  original: ImageSharpOriginalFilterInput
  resize: ImageSharpResizeFilterInput
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
}

input ImageSharpFixedFilterInput {
  base64: StringQueryOperatorInput
  tracedSVG: StringQueryOperatorInput
  aspectRatio: FloatQueryOperatorInput
  width: FloatQueryOperatorInput
  height: FloatQueryOperatorInput
  src: StringQueryOperatorInput
  srcSet: StringQueryOperatorInput
  srcWebp: StringQueryOperatorInput
  srcSetWebp: StringQueryOperatorInput
  originalName: StringQueryOperatorInput
}

input ImageSharpFluidFilterInput {
  base64: StringQueryOperatorInput
  tracedSVG: StringQueryOperatorInput
  aspectRatio: FloatQueryOperatorInput
  src: StringQueryOperatorInput
  srcSet: StringQueryOperatorInput
  srcWebp: StringQueryOperatorInput
  srcSetWebp: StringQueryOperatorInput
  sizes: StringQueryOperatorInput
  originalImg: StringQueryOperatorInput
  originalName: StringQueryOperatorInput
  presentationWidth: IntQueryOperatorInput
  presentationHeight: IntQueryOperatorInput
}

input JSONQueryOperatorInput {
  eq: JSON
  ne: JSON
  in: [JSON]
  nin: [JSON]
  regex: JSON
  glob: JSON
}

input ImageSharpOriginalFilterInput {
  width: FloatQueryOperatorInput
  height: FloatQueryOperatorInput
  src: StringQueryOperatorInput
}

input ImageSharpResizeFilterInput {
  src: StringQueryOperatorInput
  tracedSVG: StringQueryOperatorInput
  width: IntQueryOperatorInput
  height: IntQueryOperatorInput
  aspectRatio: FloatQueryOperatorInput
  originalName: StringQueryOperatorInput
}

input NodeFilterInput {
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
}

input NodeFilterListInput {
  elemMatch: NodeFilterInput
}

input InternalFilterInput {
  content: StringQueryOperatorInput
  contentDigest: StringQueryOperatorInput
  description: StringQueryOperatorInput
  fieldOwners: StringQueryOperatorInput
  ignoreType: BooleanQueryOperatorInput
  mediaType: StringQueryOperatorInput
  owner: StringQueryOperatorInput
  type: StringQueryOperatorInput
}

input BooleanQueryOperatorInput {
  eq: Boolean
  ne: Boolean
  in: [Boolean]
  nin: [Boolean]
}

type FileConnection {
  totalCount: Int!
  edges: [FileEdge!]!
  nodes: [File!]!
  pageInfo: PageInfo!
  distinct(field: FileFieldsEnum!): [String!]!
  max(field: FileFieldsEnum!): Float
  min(field: FileFieldsEnum!): Float
  sum(field: FileFieldsEnum!): Float
  group(skip: Int, limit: Int, field: FileFieldsEnum!): [FileGroupConnection!]!
}

type FileEdge {
  next: File
  node: File!
  previous: File
}

type PageInfo {
  currentPage: Int!
  hasPreviousPage: Boolean!
  hasNextPage: Boolean!
  itemCount: Int!
  pageCount: Int!
  perPage: Int
  totalCount: Int!
}

enum FileFieldsEnum {
  sourceInstanceName
  absolutePath
  relativePath
  extension
  size
  prettySize
  modifiedTime
  accessTime
  changeTime
  birthTime
  root
  dir
  base
  ext
  name
  relativeDirectory
  dev
  mode
  nlink
  uid
  gid
  rdev
  ino
  atimeMs
  mtimeMs
  ctimeMs
  atime
  mtime
  ctime
  birthtime
  birthtimeMs
  blksize
  blocks
  url
  childrenImageSharp
  childrenImageSharp___fixed___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fixed___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fixed___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fixed___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fixed___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fixed___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fixed___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fixed___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fixed___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fixed___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fluid___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fluid___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fluid___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fluid___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fluid___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fluid___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fluid___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fluid___sizes @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fluid___originalImg @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fluid___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fluid___presentationWidth @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fluid___presentationHeight @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___gatsbyImageData @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___original___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___original___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___original___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___resize___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___resize___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___resize___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___resize___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___resize___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___resize___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___parent___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___parent___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___parent___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___parent___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___parent___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___parent___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___parent___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___parent___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___parent___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___parent___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___parent___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___parent___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___children___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___children___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___children___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___children___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___children___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___children___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___children___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___children___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___children___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___children___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___children___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___children___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fixed___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fixed___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fixed___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fixed___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fixed___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fixed___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fixed___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fixed___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fixed___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fixed___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___sizes @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___originalImg @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___presentationWidth @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___presentationHeight @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___gatsbyImageData @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___original___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___original___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___original___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___resize___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___resize___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___resize___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___resize___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___resize___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___resize___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___parent___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___parent___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___parent___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___parent___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___parent___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___parent___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___parent___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___parent___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___parent___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___parent___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___parent___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___parent___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  id
  parent___id
  parent___parent___id
  parent___parent___parent___id
  parent___parent___parent___children
  parent___parent___children
  parent___parent___children___id
  parent___parent___children___children
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___children
  parent___children___id
  parent___children___parent___id
  parent___children___parent___children
  parent___children___children
  parent___children___children___id
  parent___children___children___children
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  children
  children___id
  children___parent___id
  children___parent___parent___id
  children___parent___parent___children
  children___parent___children
  children___parent___children___id
  children___parent___children___children
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___children
  children___children___id
  children___children___parent___id
  children___children___parent___children
  children___children___children
  children___children___children___id
  children___children___children___children
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
}

type FileGroupConnection {
  totalCount: Int!
  edges: [FileEdge!]!
  nodes: [File!]!
  pageInfo: PageInfo!
  field: String!
  fieldValue: String
}

input FileFilterInput {
  sourceInstanceName: StringQueryOperatorInput
  absolutePath: StringQueryOperatorInput
  relativePath: StringQueryOperatorInput
  extension: StringQueryOperatorInput
  size: IntQueryOperatorInput
  prettySize: StringQueryOperatorInput
  modifiedTime: DateQueryOperatorInput
  accessTime: DateQueryOperatorInput
  changeTime: DateQueryOperatorInput
  birthTime: DateQueryOperatorInput
  root: StringQueryOperatorInput
  dir: StringQueryOperatorInput
  base: StringQueryOperatorInput
  ext: StringQueryOperatorInput
  name: StringQueryOperatorInput
  relativeDirectory: StringQueryOperatorInput
  dev: IntQueryOperatorInput
  mode: IntQueryOperatorInput
  nlink: IntQueryOperatorInput
  uid: IntQueryOperatorInput
  gid: IntQueryOperatorInput
  rdev: IntQueryOperatorInput
  ino: FloatQueryOperatorInput
  atimeMs: FloatQueryOperatorInput
  mtimeMs: FloatQueryOperatorInput
  ctimeMs: FloatQueryOperatorInput
  atime: DateQueryOperatorInput
  mtime: DateQueryOperatorInput
  ctime: DateQueryOperatorInput
  birthtime: DateQueryOperatorInput
  birthtimeMs: FloatQueryOperatorInput
  blksize: IntQueryOperatorInput
  blocks: IntQueryOperatorInput
  url: StringQueryOperatorInput
  childrenImageSharp: ImageSharpFilterListInput
  childImageSharp: ImageSharpFilterInput
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
}

input FileSortInput {
  fields: [FileFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

enum SortOrderEnum {
  ASC
  DESC
}

type DirectoryConnection {
  totalCount: Int!
  edges: [DirectoryEdge!]!
  nodes: [Directory!]!
  pageInfo: PageInfo!
  distinct(field: DirectoryFieldsEnum!): [String!]!
  max(field: DirectoryFieldsEnum!): Float
  min(field: DirectoryFieldsEnum!): Float
  sum(field: DirectoryFieldsEnum!): Float
  group(skip: Int, limit: Int, field: DirectoryFieldsEnum!): [DirectoryGroupConnection!]!
}

type DirectoryEdge {
  next: Directory
  node: Directory!
  previous: Directory
}

enum DirectoryFieldsEnum {
  sourceInstanceName
  absolutePath
  relativePath
  extension
  size
  prettySize
  modifiedTime
  accessTime
  changeTime
  birthTime
  root
  dir
  base
  ext
  name
  relativeDirectory
  dev
  mode
  nlink
  uid
  gid
  rdev
  ino
  atimeMs
  mtimeMs
  ctimeMs
  atime
  mtime
  ctime
  birthtime
  birthtimeMs
  id
  parent___id
  parent___parent___id
  parent___parent___parent___id
  parent___parent___parent___children
  parent___parent___children
  parent___parent___children___id
  parent___parent___children___children
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___children
  parent___children___id
  parent___children___parent___id
  parent___children___parent___children
  parent___children___children
  parent___children___children___id
  parent___children___children___children
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  children
  children___id
  children___parent___id
  children___parent___parent___id
  children___parent___parent___children
  children___parent___children
  children___parent___children___id
  children___parent___children___children
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___children
  children___children___id
  children___children___parent___id
  children___children___parent___children
  children___children___children
  children___children___children___id
  children___children___children___children
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
}

type DirectoryGroupConnection {
  totalCount: Int!
  edges: [DirectoryEdge!]!
  nodes: [Directory!]!
  pageInfo: PageInfo!
  field: String!
  fieldValue: String
}

input DirectoryFilterInput {
  sourceInstanceName: StringQueryOperatorInput
  absolutePath: StringQueryOperatorInput
  relativePath: StringQueryOperatorInput
  extension: StringQueryOperatorInput
  size: IntQueryOperatorInput
  prettySize: StringQueryOperatorInput
  modifiedTime: DateQueryOperatorInput
  accessTime: DateQueryOperatorInput
  changeTime: DateQueryOperatorInput
  birthTime: DateQueryOperatorInput
  root: StringQueryOperatorInput
  dir: StringQueryOperatorInput
  base: StringQueryOperatorInput
  ext: StringQueryOperatorInput
  name: StringQueryOperatorInput
  relativeDirectory: StringQueryOperatorInput
  dev: IntQueryOperatorInput
  mode: IntQueryOperatorInput
  nlink: IntQueryOperatorInput
  uid: IntQueryOperatorInput
  gid: IntQueryOperatorInput
  rdev: IntQueryOperatorInput
  ino: FloatQueryOperatorInput
  atimeMs: FloatQueryOperatorInput
  mtimeMs: FloatQueryOperatorInput
  ctimeMs: FloatQueryOperatorInput
  atime: DateQueryOperatorInput
  mtime: DateQueryOperatorInput
  ctime: DateQueryOperatorInput
  birthtime: DateQueryOperatorInput
  birthtimeMs: FloatQueryOperatorInput
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
}

input DirectorySortInput {
  fields: [DirectoryFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input SiteSiteMetadataFilterInput {
  title: StringQueryOperatorInput
  description: StringQueryOperatorInput
}

type SiteConnection {
  totalCount: Int!
  edges: [SiteEdge!]!
  nodes: [Site!]!
  pageInfo: PageInfo!
  distinct(field: SiteFieldsEnum!): [String!]!
  max(field: SiteFieldsEnum!): Float
  min(field: SiteFieldsEnum!): Float
  sum(field: SiteFieldsEnum!): Float
  group(skip: Int, limit: Int, field: SiteFieldsEnum!): [SiteGroupConnection!]!
}

type SiteEdge {
  next: Site
  node: Site!
  previous: Site
}

enum SiteFieldsEnum {
  buildTime
  siteMetadata___title
  siteMetadata___description
  port
  host
  polyfill
  pathPrefix
  id
  parent___id
  parent___parent___id
  parent___parent___parent___id
  parent___parent___parent___children
  parent___parent___children
  parent___parent___children___id
  parent___parent___children___children
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___children
  parent___children___id
  parent___children___parent___id
  parent___children___parent___children
  parent___children___children
  parent___children___children___id
  parent___children___children___children
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  children
  children___id
  children___parent___id
  children___parent___parent___id
  children___parent___parent___children
  children___parent___children
  children___parent___children___id
  children___parent___children___children
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___children
  children___children___id
  children___children___parent___id
  children___children___parent___children
  children___children___children
  children___children___children___id
  children___children___children___children
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
}

type SiteGroupConnection {
  totalCount: Int!
  edges: [SiteEdge!]!
  nodes: [Site!]!
  pageInfo: PageInfo!
  field: String!
  fieldValue: String
}

input SiteFilterInput {
  buildTime: DateQueryOperatorInput
  siteMetadata: SiteSiteMetadataFilterInput
  port: IntQueryOperatorInput
  host: StringQueryOperatorInput
  polyfill: BooleanQueryOperatorInput
  pathPrefix: StringQueryOperatorInput
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
}

input SiteSortInput {
  fields: [SiteFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

type SiteFunctionConnection {
  totalCount: Int!
  edges: [SiteFunctionEdge!]!
  nodes: [SiteFunction!]!
  pageInfo: PageInfo!
  distinct(field: SiteFunctionFieldsEnum!): [String!]!
  max(field: SiteFunctionFieldsEnum!): Float
  min(field: SiteFunctionFieldsEnum!): Float
  sum(field: SiteFunctionFieldsEnum!): Float
  group(skip: Int, limit: Int, field: SiteFunctionFieldsEnum!): [SiteFunctionGroupConnection!]!
}

type SiteFunctionEdge {
  next: SiteFunction
  node: SiteFunction!
  previous: SiteFunction
}

enum SiteFunctionFieldsEnum {
  functionRoute
  pluginName
  originalAbsoluteFilePath
  originalRelativeFilePath
  relativeCompiledFilePath
  absoluteCompiledFilePath
  matchPath
  id
  parent___id
  parent___parent___id
  parent___parent___parent___id
  parent___parent___parent___children
  parent___parent___children
  parent___parent___children___id
  parent___parent___children___children
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___children
  parent___children___id
  parent___children___parent___id
  parent___children___parent___children
  parent___children___children
  parent___children___children___id
  parent___children___children___children
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  children
  children___id
  children___parent___id
  children___parent___parent___id
  children___parent___parent___children
  children___parent___children
  children___parent___children___id
  children___parent___children___children
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___children
  children___children___id
  children___children___parent___id
  children___children___parent___children
  children___children___children
  children___children___children___id
  children___children___children___children
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
}

type SiteFunctionGroupConnection {
  totalCount: Int!
  edges: [SiteFunctionEdge!]!
  nodes: [SiteFunction!]!
  pageInfo: PageInfo!
  field: String!
  fieldValue: String
}

input SiteFunctionFilterInput {
  functionRoute: StringQueryOperatorInput
  pluginName: StringQueryOperatorInput
  originalAbsoluteFilePath: StringQueryOperatorInput
  originalRelativeFilePath: StringQueryOperatorInput
  relativeCompiledFilePath: StringQueryOperatorInput
  absoluteCompiledFilePath: StringQueryOperatorInput
  matchPath: StringQueryOperatorInput
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
}

input SiteFunctionSortInput {
  fields: [SiteFunctionFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input SitePageContextFilterInput {
  id: StringQueryOperatorInput
  offset: IntQueryOperatorInput
  postsPerPage: IntQueryOperatorInput
}

input SitePluginFilterInput {
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
  resolve: StringQueryOperatorInput
  name: StringQueryOperatorInput
  version: StringQueryOperatorInput
  pluginOptions: SitePluginPluginOptionsFilterInput
  nodeAPIs: StringQueryOperatorInput
  browserAPIs: StringQueryOperatorInput
  ssrAPIs: StringQueryOperatorInput
  pluginFilepath: StringQueryOperatorInput
  packageJson: SitePluginPackageJsonFilterInput
}

input SitePluginPluginOptionsFilterInput {
  url: StringQueryOperatorInput
  verbose: BooleanQueryOperatorInput
  base64Width: IntQueryOperatorInput
  stripMetadata: BooleanQueryOperatorInput
  defaultQuality: IntQueryOperatorInput
  failOnError: BooleanQueryOperatorInput
  name: StringQueryOperatorInput
  short_name: StringQueryOperatorInput
  start_url: StringQueryOperatorInput
  background_color: StringQueryOperatorInput
  theme_color: StringQueryOperatorInput
  display: StringQueryOperatorInput
  icon: StringQueryOperatorInput
  legacy: BooleanQueryOperatorInput
  theme_color_in_head: BooleanQueryOperatorInput
  cache_busting_mode: StringQueryOperatorInput
  crossOrigin: StringQueryOperatorInput
  include_favicon: BooleanQueryOperatorInput
  cacheDigest: StringQueryOperatorInput
  emitSchema: SitePluginPluginOptionsEmitSchemaFilterInput
  emitPluginDocuments: SitePluginPluginOptionsEmitPluginDocumentsFilterInput
  path: StringQueryOperatorInput
  pathCheck: BooleanQueryOperatorInput
  allExtensions: BooleanQueryOperatorInput
  isTSX: BooleanQueryOperatorInput
  jsxPragma: StringQueryOperatorInput
}

input SitePluginPluginOptionsEmitSchemaFilterInput {
  src___generated___gatsby_schema_graphql: BooleanQueryOperatorInput
  src___generated___gatsby_introspection_json: BooleanQueryOperatorInput
}

input SitePluginPluginOptionsEmitPluginDocumentsFilterInput {
  src___generated___gatsby_plugin_documents_graphql: BooleanQueryOperatorInput
}

input SitePluginPackageJsonFilterInput {
  name: StringQueryOperatorInput
  description: StringQueryOperatorInput
  version: StringQueryOperatorInput
  main: StringQueryOperatorInput
  license: StringQueryOperatorInput
  dependencies: SitePluginPackageJsonDependenciesFilterListInput
  devDependencies: SitePluginPackageJsonDevDependenciesFilterListInput
  peerDependencies: SitePluginPackageJsonPeerDependenciesFilterListInput
  keywords: StringQueryOperatorInput
}

input SitePluginPackageJsonDependenciesFilterListInput {
  elemMatch: SitePluginPackageJsonDependenciesFilterInput
}

input SitePluginPackageJsonDependenciesFilterInput {
  name: StringQueryOperatorInput
  version: StringQueryOperatorInput
}

input SitePluginPackageJsonDevDependenciesFilterListInput {
  elemMatch: SitePluginPackageJsonDevDependenciesFilterInput
}

input SitePluginPackageJsonDevDependenciesFilterInput {
  name: StringQueryOperatorInput
  version: StringQueryOperatorInput
}

input SitePluginPackageJsonPeerDependenciesFilterListInput {
  elemMatch: SitePluginPackageJsonPeerDependenciesFilterInput
}

input SitePluginPackageJsonPeerDependenciesFilterInput {
  name: StringQueryOperatorInput
  version: StringQueryOperatorInput
}

type SitePageConnection {
  totalCount: Int!
  edges: [SitePageEdge!]!
  nodes: [SitePage!]!
  pageInfo: PageInfo!
  distinct(field: SitePageFieldsEnum!): [String!]!
  max(field: SitePageFieldsEnum!): Float
  min(field: SitePageFieldsEnum!): Float
  sum(field: SitePageFieldsEnum!): Float
  group(skip: Int, limit: Int, field: SitePageFieldsEnum!): [SitePageGroupConnection!]!
}

type SitePageEdge {
  next: SitePage
  node: SitePage!
  previous: SitePage
}

enum SitePageFieldsEnum {
  path
  component
  internalComponentName
  componentChunkName
  matchPath
  id
  parent___id
  parent___parent___id
  parent___parent___parent___id
  parent___parent___parent___children
  parent___parent___children
  parent___parent___children___id
  parent___parent___children___children
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___children
  parent___children___id
  parent___children___parent___id
  parent___children___parent___children
  parent___children___children
  parent___children___children___id
  parent___children___children___children
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  children
  children___id
  children___parent___id
  children___parent___parent___id
  children___parent___parent___children
  children___parent___children
  children___parent___children___id
  children___parent___children___children
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___children
  children___children___id
  children___children___parent___id
  children___children___parent___children
  children___children___children
  children___children___children___id
  children___children___children___children
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  isCreatedByStatefulCreatePages
  context___id
  context___offset
  context___postsPerPage
  pluginCreator___id
  pluginCreator___parent___id
  pluginCreator___parent___parent___id
  pluginCreator___parent___parent___children
  pluginCreator___parent___children
  pluginCreator___parent___children___id
  pluginCreator___parent___children___children
  pluginCreator___parent___internal___content
  pluginCreator___parent___internal___contentDigest
  pluginCreator___parent___internal___description
  pluginCreator___parent___internal___fieldOwners
  pluginCreator___parent___internal___ignoreType
  pluginCreator___parent___internal___mediaType
  pluginCreator___parent___internal___owner
  pluginCreator___parent___internal___type
  pluginCreator___children
  pluginCreator___children___id
  pluginCreator___children___parent___id
  pluginCreator___children___parent___children
  pluginCreator___children___children
  pluginCreator___children___children___id
  pluginCreator___children___children___children
  pluginCreator___children___internal___content
  pluginCreator___children___internal___contentDigest
  pluginCreator___children___internal___description
  pluginCreator___children___internal___fieldOwners
  pluginCreator___children___internal___ignoreType
  pluginCreator___children___internal___mediaType
  pluginCreator___children___internal___owner
  pluginCreator___children___internal___type
  pluginCreator___internal___content
  pluginCreator___internal___contentDigest
  pluginCreator___internal___description
  pluginCreator___internal___fieldOwners
  pluginCreator___internal___ignoreType
  pluginCreator___internal___mediaType
  pluginCreator___internal___owner
  pluginCreator___internal___type
  pluginCreator___resolve
  pluginCreator___name
  pluginCreator___version
  pluginCreator___pluginOptions___url
  pluginCreator___pluginOptions___verbose
  pluginCreator___pluginOptions___base64Width
  pluginCreator___pluginOptions___stripMetadata
  pluginCreator___pluginOptions___defaultQuality
  pluginCreator___pluginOptions___failOnError
  pluginCreator___pluginOptions___name
  pluginCreator___pluginOptions___short_name
  pluginCreator___pluginOptions___start_url
  pluginCreator___pluginOptions___background_color
  pluginCreator___pluginOptions___theme_color
  pluginCreator___pluginOptions___display
  pluginCreator___pluginOptions___icon
  pluginCreator___pluginOptions___legacy
  pluginCreator___pluginOptions___theme_color_in_head
  pluginCreator___pluginOptions___cache_busting_mode
  pluginCreator___pluginOptions___crossOrigin
  pluginCreator___pluginOptions___include_favicon
  pluginCreator___pluginOptions___cacheDigest
  pluginCreator___pluginOptions___emitSchema___src___generated___gatsby_schema_graphql
  pluginCreator___pluginOptions___emitSchema___src___generated___gatsby_introspection_json
  pluginCreator___pluginOptions___emitPluginDocuments___src___generated___gatsby_plugin_documents_graphql
  pluginCreator___pluginOptions___path
  pluginCreator___pluginOptions___pathCheck
  pluginCreator___pluginOptions___allExtensions
  pluginCreator___pluginOptions___isTSX
  pluginCreator___pluginOptions___jsxPragma
  pluginCreator___nodeAPIs
  pluginCreator___browserAPIs
  pluginCreator___ssrAPIs
  pluginCreator___pluginFilepath
  pluginCreator___packageJson___name
  pluginCreator___packageJson___description
  pluginCreator___packageJson___version
  pluginCreator___packageJson___main
  pluginCreator___packageJson___license
  pluginCreator___packageJson___dependencies
  pluginCreator___packageJson___dependencies___name
  pluginCreator___packageJson___dependencies___version
  pluginCreator___packageJson___devDependencies
  pluginCreator___packageJson___devDependencies___name
  pluginCreator___packageJson___devDependencies___version
  pluginCreator___packageJson___peerDependencies
  pluginCreator___packageJson___peerDependencies___name
  pluginCreator___packageJson___peerDependencies___version
  pluginCreator___packageJson___keywords
  pluginCreatorId
}

type SitePageGroupConnection {
  totalCount: Int!
  edges: [SitePageEdge!]!
  nodes: [SitePage!]!
  pageInfo: PageInfo!
  field: String!
  fieldValue: String
}

input SitePageFilterInput {
  path: StringQueryOperatorInput
  component: StringQueryOperatorInput
  internalComponentName: StringQueryOperatorInput
  componentChunkName: StringQueryOperatorInput
  matchPath: StringQueryOperatorInput
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
  isCreatedByStatefulCreatePages: BooleanQueryOperatorInput
  context: SitePageContextFilterInput
  pluginCreator: SitePluginFilterInput
  pluginCreatorId: StringQueryOperatorInput
}

input SitePageSortInput {
  fields: [SitePageFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input WpContentNodeToContentTypeConnectionEdgeFilterInput {
  node: WpContentTypeFilterInput
}

input WpContentTypeFilterInput {
  archivePath: StringQueryOperatorInput
  canExport: BooleanQueryOperatorInput
  connectedTaxonomies: WpContentTypeToTaxonomyConnectionFilterInput
  contentNodes: WpContentTypeToContentNodeConnectionFilterInput
  deleteWithUser: BooleanQueryOperatorInput
  description: StringQueryOperatorInput
  excludeFromSearch: BooleanQueryOperatorInput
  graphqlPluralName: StringQueryOperatorInput
  graphqlSingleName: StringQueryOperatorInput
  hasArchive: BooleanQueryOperatorInput
  hierarchical: BooleanQueryOperatorInput
  id: StringQueryOperatorInput
  isContentNode: BooleanQueryOperatorInput
  isFrontPage: BooleanQueryOperatorInput
  isPostsPage: BooleanQueryOperatorInput
  isTermNode: BooleanQueryOperatorInput
  label: StringQueryOperatorInput
  labels: WpPostTypeLabelDetailsFilterInput
  menuIcon: StringQueryOperatorInput
  menuPosition: IntQueryOperatorInput
  name: StringQueryOperatorInput
  public: BooleanQueryOperatorInput
  publiclyQueryable: BooleanQueryOperatorInput
  restBase: StringQueryOperatorInput
  restControllerClass: StringQueryOperatorInput
  showInAdminBar: BooleanQueryOperatorInput
  showInGraphql: BooleanQueryOperatorInput
  showInMenu: BooleanQueryOperatorInput
  showInNavMenus: BooleanQueryOperatorInput
  showInRest: BooleanQueryOperatorInput
  showUi: BooleanQueryOperatorInput
  uri: StringQueryOperatorInput
  nodeType: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
}

input WpContentTypeToTaxonomyConnectionFilterInput {
  nodes: WpTaxonomyFilterListInput
}

input WpTaxonomyFilterListInput {
  elemMatch: WpTaxonomyFilterInput
}

input WpTaxonomyFilterInput {
  archivePath: StringQueryOperatorInput
  connectedContentTypes: WpTaxonomyToContentTypeConnectionFilterInput
  description: StringQueryOperatorInput
  graphqlPluralName: StringQueryOperatorInput
  graphqlSingleName: StringQueryOperatorInput
  hierarchical: BooleanQueryOperatorInput
  id: StringQueryOperatorInput
  label: StringQueryOperatorInput
  name: StringQueryOperatorInput
  public: BooleanQueryOperatorInput
  restBase: StringQueryOperatorInput
  restControllerClass: StringQueryOperatorInput
  showCloud: BooleanQueryOperatorInput
  showInAdminColumn: BooleanQueryOperatorInput
  showInGraphql: BooleanQueryOperatorInput
  showInMenu: BooleanQueryOperatorInput
  showInNavMenus: BooleanQueryOperatorInput
  showInQuickEdit: BooleanQueryOperatorInput
  showInRest: BooleanQueryOperatorInput
  showUi: BooleanQueryOperatorInput
  nodeType: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
}

input WpTaxonomyToContentTypeConnectionFilterInput {
  nodes: WpContentTypeFilterListInput
}

input WpContentTypeFilterListInput {
  elemMatch: WpContentTypeFilterInput
}

input WpContentTypeToContentNodeConnectionFilterInput {
  nodes: WpContentNodeFilterListInput
}

input WpContentNodeFilterListInput {
  elemMatch: WpContentNodeFilterInput
}

input WpContentNodeFilterInput {
  contentType: WpContentNodeToContentTypeConnectionEdgeFilterInput
  databaseId: IntQueryOperatorInput
  date: DateQueryOperatorInput
  dateGmt: DateQueryOperatorInput
  desiredSlug: StringQueryOperatorInput
  enclosure: StringQueryOperatorInput
  guid: StringQueryOperatorInput
  id: StringQueryOperatorInput
  isContentNode: BooleanQueryOperatorInput
  isTermNode: BooleanQueryOperatorInput
  lastEditedBy: WpContentNodeToEditLastConnectionEdgeFilterInput
  link: StringQueryOperatorInput
  modified: DateQueryOperatorInput
  modifiedGmt: DateQueryOperatorInput
  slug: StringQueryOperatorInput
  status: StringQueryOperatorInput
  template: WpContentTemplateFilterInput
  uri: StringQueryOperatorInput
  nodeType: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
}

input WpContentNodeToEditLastConnectionEdgeFilterInput {
  node: WpUserFilterInput
}

input WpUserFilterInput {
  avatar: WpAvatarFilterInput
  capKey: StringQueryOperatorInput
  capabilities: StringQueryOperatorInput
  comments: WpUserToCommentConnectionFilterInput
  databaseId: IntQueryOperatorInput
  description: StringQueryOperatorInput
  email: StringQueryOperatorInput
  extraCapabilities: StringQueryOperatorInput
  firstName: StringQueryOperatorInput
  id: StringQueryOperatorInput
  isContentNode: BooleanQueryOperatorInput
  isTermNode: BooleanQueryOperatorInput
  lastName: StringQueryOperatorInput
  locale: StringQueryOperatorInput
  name: StringQueryOperatorInput
  nicename: StringQueryOperatorInput
  nickname: StringQueryOperatorInput
  pages: WpUserToPageConnectionFilterInput
  posts: WpUserToPostConnectionFilterInput
  registeredDate: StringQueryOperatorInput
  roles: WpUserToUserRoleConnectionFilterInput
  slug: StringQueryOperatorInput
  uri: StringQueryOperatorInput
  url: StringQueryOperatorInput
  username: StringQueryOperatorInput
  nodeType: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
}

input WpAvatarFilterInput {
  default: StringQueryOperatorInput
  extraAttr: StringQueryOperatorInput
  forceDefault: BooleanQueryOperatorInput
  foundAvatar: BooleanQueryOperatorInput
  height: IntQueryOperatorInput
  rating: StringQueryOperatorInput
  scheme: StringQueryOperatorInput
  size: IntQueryOperatorInput
  url: StringQueryOperatorInput
  width: IntQueryOperatorInput
}

input WpUserToCommentConnectionFilterInput {
  nodes: WpCommentFilterListInput
}

input WpCommentFilterListInput {
  elemMatch: WpCommentFilterInput
}

input WpCommentFilterInput {
  agent: StringQueryOperatorInput
  approved: BooleanQueryOperatorInput
  author: WpCommentToCommenterConnectionEdgeFilterInput
  authorIp: StringQueryOperatorInput
  commentedOn: WpCommentToContentNodeConnectionEdgeFilterInput
  content: StringQueryOperatorInput
  databaseId: IntQueryOperatorInput
  date: DateQueryOperatorInput
  dateGmt: DateQueryOperatorInput
  id: StringQueryOperatorInput
  karma: IntQueryOperatorInput
  wpParent: WpCommentToParentCommentConnectionEdgeFilterInput
  parentDatabaseId: IntQueryOperatorInput
  parentId: IDQueryOperatorInput
  replies: WpCommentToCommentConnectionFilterInput
  type: StringQueryOperatorInput
  nodeType: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
}

input WpCommentToCommenterConnectionEdgeFilterInput {
  node: WpCommenterFilterInput
}

input WpCommenterFilterInput {
  databaseId: IntQueryOperatorInput
  email: StringQueryOperatorInput
  id: IDQueryOperatorInput
  name: StringQueryOperatorInput
  url: StringQueryOperatorInput
}

input IDQueryOperatorInput {
  eq: ID
  ne: ID
  in: [ID]
  nin: [ID]
}

input WpCommentToContentNodeConnectionEdgeFilterInput {
  node: WpContentNodeFilterInput
}

input WpCommentToParentCommentConnectionEdgeFilterInput {
  node: WpCommentFilterInput
}

input WpCommentToCommentConnectionFilterInput {
  nodes: WpCommentFilterListInput
}

input WpUserToPageConnectionFilterInput {
  nodes: WpPageFilterListInput
}

input WpPageFilterListInput {
  elemMatch: WpPageFilterInput
}

input WpPageFilterInput {
  ancestors: WpHierarchicalContentNodeToContentNodeAncestorsConnectionFilterInput
  author: WpNodeWithAuthorToUserConnectionEdgeFilterInput
  authorDatabaseId: IntQueryOperatorInput
  authorId: IDQueryOperatorInput
  wpChildren: WpHierarchicalContentNodeToContentNodeChildrenConnectionFilterInput
  commentCount: IntQueryOperatorInput
  commentStatus: StringQueryOperatorInput
  comments: WpPageToCommentConnectionFilterInput
  content: StringQueryOperatorInput
  contentType: WpContentNodeToContentTypeConnectionEdgeFilterInput
  databaseId: IntQueryOperatorInput
  date: DateQueryOperatorInput
  dateGmt: DateQueryOperatorInput
  desiredSlug: StringQueryOperatorInput
  enclosure: StringQueryOperatorInput
  featuredImage: WpNodeWithFeaturedImageToMediaItemConnectionEdgeFilterInput
  featuredImageDatabaseId: IntQueryOperatorInput
  featuredImageId: IDQueryOperatorInput
  guid: StringQueryOperatorInput
  id: StringQueryOperatorInput
  isContentNode: BooleanQueryOperatorInput
  isFrontPage: BooleanQueryOperatorInput
  isPostsPage: BooleanQueryOperatorInput
  isPrivacyPage: BooleanQueryOperatorInput
  isRevision: BooleanQueryOperatorInput
  isTermNode: BooleanQueryOperatorInput
  lastEditedBy: WpContentNodeToEditLastConnectionEdgeFilterInput
  link: StringQueryOperatorInput
  menuOrder: IntQueryOperatorInput
  modified: DateQueryOperatorInput
  modifiedGmt: DateQueryOperatorInput
  wpParent: WpHierarchicalContentNodeToParentContentNodeConnectionEdgeFilterInput
  parentDatabaseId: IntQueryOperatorInput
  parentId: IDQueryOperatorInput
  slug: StringQueryOperatorInput
  status: StringQueryOperatorInput
  template: WpContentTemplateFilterInput
  title: StringQueryOperatorInput
  uri: StringQueryOperatorInput
  nodeType: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
}

input WpHierarchicalContentNodeToContentNodeAncestorsConnectionFilterInput {
  nodes: WpContentNodeFilterListInput
}

input WpNodeWithAuthorToUserConnectionEdgeFilterInput {
  node: WpUserFilterInput
}

input WpHierarchicalContentNodeToContentNodeChildrenConnectionFilterInput {
  nodes: WpContentNodeFilterListInput
}

input WpPageToCommentConnectionFilterInput {
  nodes: WpCommentFilterListInput
}

input WpNodeWithFeaturedImageToMediaItemConnectionEdgeFilterInput {
  node: WpMediaItemFilterInput
}

input WpMediaItemFilterInput {
  altText: StringQueryOperatorInput
  ancestors: WpHierarchicalContentNodeToContentNodeAncestorsConnectionFilterInput
  author: WpNodeWithAuthorToUserConnectionEdgeFilterInput
  authorDatabaseId: IntQueryOperatorInput
  authorId: IDQueryOperatorInput
  caption: StringQueryOperatorInput
  wpChildren: WpHierarchicalContentNodeToContentNodeChildrenConnectionFilterInput
  commentCount: IntQueryOperatorInput
  commentStatus: StringQueryOperatorInput
  comments: WpMediaItemToCommentConnectionFilterInput
  contentType: WpContentNodeToContentTypeConnectionEdgeFilterInput
  databaseId: IntQueryOperatorInput
  date: DateQueryOperatorInput
  dateGmt: DateQueryOperatorInput
  description: StringQueryOperatorInput
  desiredSlug: StringQueryOperatorInput
  enclosure: StringQueryOperatorInput
  fileSize: IntQueryOperatorInput
  guid: StringQueryOperatorInput
  id: StringQueryOperatorInput
  isContentNode: BooleanQueryOperatorInput
  isTermNode: BooleanQueryOperatorInput
  lastEditedBy: WpContentNodeToEditLastConnectionEdgeFilterInput
  link: StringQueryOperatorInput
  mediaDetails: WpMediaDetailsFilterInput
  mediaItemUrl: StringQueryOperatorInput
  mediaType: StringQueryOperatorInput
  mimeType: StringQueryOperatorInput
  modified: DateQueryOperatorInput
  modifiedGmt: DateQueryOperatorInput
  wpParent: WpHierarchicalContentNodeToParentContentNodeConnectionEdgeFilterInput
  parentDatabaseId: IntQueryOperatorInput
  parentId: IDQueryOperatorInput
  sizes: StringQueryOperatorInput
  slug: StringQueryOperatorInput
  sourceUrl: StringQueryOperatorInput
  srcSet: StringQueryOperatorInput
  status: StringQueryOperatorInput
  template: WpContentTemplateFilterInput
  title: StringQueryOperatorInput
  uri: StringQueryOperatorInput
  nodeType: StringQueryOperatorInput
  remoteFile: FileFilterInput
  localFile: FileFilterInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
}

input WpMediaItemToCommentConnectionFilterInput {
  nodes: WpCommentFilterListInput
}

input WpMediaDetailsFilterInput {
  file: StringQueryOperatorInput
  height: IntQueryOperatorInput
  meta: WpMediaItemMetaFilterInput
  sizes: WpMediaSizeFilterListInput
  width: IntQueryOperatorInput
}

input WpMediaItemMetaFilterInput {
  aperture: FloatQueryOperatorInput
  camera: StringQueryOperatorInput
  caption: StringQueryOperatorInput
  copyright: StringQueryOperatorInput
  createdTimestamp: IntQueryOperatorInput
  credit: StringQueryOperatorInput
  focalLength: FloatQueryOperatorInput
  iso: IntQueryOperatorInput
  keywords: StringQueryOperatorInput
  orientation: StringQueryOperatorInput
  shutterSpeed: FloatQueryOperatorInput
  title: StringQueryOperatorInput
}

input WpMediaSizeFilterListInput {
  elemMatch: WpMediaSizeFilterInput
}

input WpMediaSizeFilterInput {
  file: StringQueryOperatorInput
  fileSize: IntQueryOperatorInput
  height: StringQueryOperatorInput
  mimeType: StringQueryOperatorInput
  name: StringQueryOperatorInput
  sourceUrl: StringQueryOperatorInput
  width: StringQueryOperatorInput
}

input WpHierarchicalContentNodeToParentContentNodeConnectionEdgeFilterInput {
  node: WpContentNodeFilterInput
}

input WpContentTemplateFilterInput {
  templateName: StringQueryOperatorInput
}

input WpUserToPostConnectionFilterInput {
  nodes: WpPostFilterListInput
}

input WpPostFilterListInput {
  elemMatch: WpPostFilterInput
}

input WpPostFilterInput {
  author: WpNodeWithAuthorToUserConnectionEdgeFilterInput
  authorDatabaseId: IntQueryOperatorInput
  authorId: IDQueryOperatorInput
  categories: WpPostToCategoryConnectionFilterInput
  commentCount: IntQueryOperatorInput
  commentStatus: StringQueryOperatorInput
  comments: WpPostToCommentConnectionFilterInput
  content: StringQueryOperatorInput
  contentType: WpContentNodeToContentTypeConnectionEdgeFilterInput
  databaseId: IntQueryOperatorInput
  date: DateQueryOperatorInput
  dateGmt: DateQueryOperatorInput
  desiredSlug: StringQueryOperatorInput
  enclosure: StringQueryOperatorInput
  excerpt: StringQueryOperatorInput
  featuredImage: WpNodeWithFeaturedImageToMediaItemConnectionEdgeFilterInput
  featuredImageDatabaseId: IntQueryOperatorInput
  featuredImageId: IDQueryOperatorInput
  guid: StringQueryOperatorInput
  id: StringQueryOperatorInput
  isContentNode: BooleanQueryOperatorInput
  isRevision: BooleanQueryOperatorInput
  isSticky: BooleanQueryOperatorInput
  isTermNode: BooleanQueryOperatorInput
  lastEditedBy: WpContentNodeToEditLastConnectionEdgeFilterInput
  link: StringQueryOperatorInput
  modified: DateQueryOperatorInput
  modifiedGmt: DateQueryOperatorInput
  pingStatus: StringQueryOperatorInput
  pinged: StringQueryOperatorInput
  postFormats: WpPostToPostFormatConnectionFilterInput
  slug: StringQueryOperatorInput
  status: StringQueryOperatorInput
  tags: WpPostToTagConnectionFilterInput
  template: WpContentTemplateFilterInput
  terms: WpPostToTermNodeConnectionFilterInput
  title: StringQueryOperatorInput
  toPing: StringQueryOperatorInput
  uri: StringQueryOperatorInput
  nodeType: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
}

input WpPostToCategoryConnectionFilterInput {
  nodes: WpCategoryFilterListInput
}

input WpCategoryFilterListInput {
  elemMatch: WpCategoryFilterInput
}

input WpCategoryFilterInput {
  ancestors: WpCategoryToAncestorsCategoryConnectionFilterInput
  wpChildren: WpCategoryToCategoryConnectionFilterInput
  contentNodes: WpCategoryToContentNodeConnectionFilterInput
  count: IntQueryOperatorInput
  databaseId: IntQueryOperatorInput
  description: StringQueryOperatorInput
  id: StringQueryOperatorInput
  isContentNode: BooleanQueryOperatorInput
  isTermNode: BooleanQueryOperatorInput
  link: StringQueryOperatorInput
  name: StringQueryOperatorInput
  wpParent: WpCategoryToParentCategoryConnectionEdgeFilterInput
  parentDatabaseId: IntQueryOperatorInput
  parentId: IDQueryOperatorInput
  posts: WpCategoryToPostConnectionFilterInput
  slug: StringQueryOperatorInput
  taxonomy: WpCategoryToTaxonomyConnectionEdgeFilterInput
  termGroupId: IntQueryOperatorInput
  termTaxonomyId: IntQueryOperatorInput
  uri: StringQueryOperatorInput
  nodeType: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
}

input WpCategoryToAncestorsCategoryConnectionFilterInput {
  nodes: WpCategoryFilterListInput
}

input WpCategoryToCategoryConnectionFilterInput {
  nodes: WpCategoryFilterListInput
}

input WpCategoryToContentNodeConnectionFilterInput {
  nodes: WpContentNodeFilterListInput
}

input WpCategoryToParentCategoryConnectionEdgeFilterInput {
  node: WpCategoryFilterInput
}

input WpCategoryToPostConnectionFilterInput {
  nodes: WpPostFilterListInput
}

input WpCategoryToTaxonomyConnectionEdgeFilterInput {
  node: WpTaxonomyFilterInput
}

input WpPostToCommentConnectionFilterInput {
  nodes: WpCommentFilterListInput
}

input WpPostToPostFormatConnectionFilterInput {
  nodes: WpPostFormatFilterListInput
}

input WpPostFormatFilterListInput {
  elemMatch: WpPostFormatFilterInput
}

input WpPostFormatFilterInput {
  contentNodes: WpPostFormatToContentNodeConnectionFilterInput
  count: IntQueryOperatorInput
  databaseId: IntQueryOperatorInput
  description: StringQueryOperatorInput
  id: StringQueryOperatorInput
  isContentNode: BooleanQueryOperatorInput
  isTermNode: BooleanQueryOperatorInput
  link: StringQueryOperatorInput
  name: StringQueryOperatorInput
  posts: WpPostFormatToPostConnectionFilterInput
  slug: StringQueryOperatorInput
  taxonomy: WpPostFormatToTaxonomyConnectionEdgeFilterInput
  termGroupId: IntQueryOperatorInput
  termTaxonomyId: IntQueryOperatorInput
  uri: StringQueryOperatorInput
  nodeType: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
}

input WpPostFormatToContentNodeConnectionFilterInput {
  nodes: WpContentNodeFilterListInput
}

input WpPostFormatToPostConnectionFilterInput {
  nodes: WpPostFilterListInput
}

input WpPostFormatToTaxonomyConnectionEdgeFilterInput {
  node: WpTaxonomyFilterInput
}

input WpPostToTagConnectionFilterInput {
  nodes: WpTagFilterListInput
}

input WpTagFilterListInput {
  elemMatch: WpTagFilterInput
}

input WpTagFilterInput {
  contentNodes: WpTagToContentNodeConnectionFilterInput
  count: IntQueryOperatorInput
  databaseId: IntQueryOperatorInput
  description: StringQueryOperatorInput
  id: StringQueryOperatorInput
  isContentNode: BooleanQueryOperatorInput
  isTermNode: BooleanQueryOperatorInput
  link: StringQueryOperatorInput
  name: StringQueryOperatorInput
  posts: WpTagToPostConnectionFilterInput
  slug: StringQueryOperatorInput
  taxonomy: WpTagToTaxonomyConnectionEdgeFilterInput
  termGroupId: IntQueryOperatorInput
  termTaxonomyId: IntQueryOperatorInput
  uri: StringQueryOperatorInput
  nodeType: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
}

input WpTagToContentNodeConnectionFilterInput {
  nodes: WpContentNodeFilterListInput
}

input WpTagToPostConnectionFilterInput {
  nodes: WpPostFilterListInput
}

input WpTagToTaxonomyConnectionEdgeFilterInput {
  node: WpTaxonomyFilterInput
}

input WpPostToTermNodeConnectionFilterInput {
  nodes: WpTermNodeFilterListInput
}

input WpTermNodeFilterListInput {
  elemMatch: WpTermNodeFilterInput
}

input WpTermNodeFilterInput {
  count: IntQueryOperatorInput
  databaseId: IntQueryOperatorInput
  description: StringQueryOperatorInput
  id: StringQueryOperatorInput
  isContentNode: BooleanQueryOperatorInput
  isTermNode: BooleanQueryOperatorInput
  link: StringQueryOperatorInput
  name: StringQueryOperatorInput
  slug: StringQueryOperatorInput
  termGroupId: IntQueryOperatorInput
  termTaxonomyId: IntQueryOperatorInput
  uri: StringQueryOperatorInput
  nodeType: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
}

input WpUserToUserRoleConnectionFilterInput {
  nodes: WpUserRoleFilterListInput
}

input WpUserRoleFilterListInput {
  elemMatch: WpUserRoleFilterInput
}

input WpUserRoleFilterInput {
  capabilities: StringQueryOperatorInput
  displayName: StringQueryOperatorInput
  id: StringQueryOperatorInput
  name: StringQueryOperatorInput
  nodeType: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
}

input WpPostTypeLabelDetailsFilterInput {
  addNew: StringQueryOperatorInput
  addNewItem: StringQueryOperatorInput
  allItems: StringQueryOperatorInput
  archives: StringQueryOperatorInput
  attributes: StringQueryOperatorInput
  editItem: StringQueryOperatorInput
  featuredImage: StringQueryOperatorInput
  filterItemsList: StringQueryOperatorInput
  insertIntoItem: StringQueryOperatorInput
  itemsList: StringQueryOperatorInput
  itemsListNavigation: StringQueryOperatorInput
  menuName: StringQueryOperatorInput
  name: StringQueryOperatorInput
  newItem: StringQueryOperatorInput
  notFound: StringQueryOperatorInput
  notFoundInTrash: StringQueryOperatorInput
  parentItemColon: StringQueryOperatorInput
  removeFeaturedImage: StringQueryOperatorInput
  searchItems: StringQueryOperatorInput
  setFeaturedImage: StringQueryOperatorInput
  singularName: StringQueryOperatorInput
  uploadedToThisItem: StringQueryOperatorInput
  useFeaturedImage: StringQueryOperatorInput
  viewItem: StringQueryOperatorInput
  viewItems: StringQueryOperatorInput
}

type WpContentNodeConnection {
  totalCount: Int!
  edges: [WpContentNodeEdge!]!
  nodes: [WpContentNode!]!
  pageInfo: PageInfo!
  distinct(field: WpContentNodeFieldsEnum!): [String!]!
  max(field: WpContentNodeFieldsEnum!): Float
  min(field: WpContentNodeFieldsEnum!): Float
  sum(field: WpContentNodeFieldsEnum!): Float
  group(skip: Int, limit: Int, field: WpContentNodeFieldsEnum!): [WpContentNodeGroupConnection!]!
}

type WpContentNodeEdge {
  next: WpContentNode
  node: WpContentNode!
  previous: WpContentNode
}

enum WpContentNodeFieldsEnum {
  contentType___node___archivePath
  contentType___node___canExport
  contentType___node___connectedTaxonomies___nodes
  contentType___node___contentNodes___nodes
  contentType___node___deleteWithUser
  contentType___node___description
  contentType___node___excludeFromSearch
  contentType___node___graphqlPluralName
  contentType___node___graphqlSingleName
  contentType___node___hasArchive
  contentType___node___hierarchical
  contentType___node___id
  contentType___node___isContentNode
  contentType___node___isFrontPage
  contentType___node___isPostsPage
  contentType___node___isTermNode
  contentType___node___label
  contentType___node___labels___addNew
  contentType___node___labels___addNewItem
  contentType___node___labels___allItems
  contentType___node___labels___archives
  contentType___node___labels___attributes
  contentType___node___labels___editItem
  contentType___node___labels___featuredImage
  contentType___node___labels___filterItemsList
  contentType___node___labels___insertIntoItem
  contentType___node___labels___itemsList
  contentType___node___labels___itemsListNavigation
  contentType___node___labels___menuName
  contentType___node___labels___name
  contentType___node___labels___newItem
  contentType___node___labels___notFound
  contentType___node___labels___notFoundInTrash
  contentType___node___labels___parentItemColon
  contentType___node___labels___removeFeaturedImage
  contentType___node___labels___searchItems
  contentType___node___labels___setFeaturedImage
  contentType___node___labels___singularName
  contentType___node___labels___uploadedToThisItem
  contentType___node___labels___useFeaturedImage
  contentType___node___labels___viewItem
  contentType___node___labels___viewItems
  contentType___node___menuIcon
  contentType___node___menuPosition
  contentType___node___name
  contentType___node___public
  contentType___node___publiclyQueryable
  contentType___node___restBase
  contentType___node___restControllerClass
  contentType___node___showInAdminBar
  contentType___node___showInGraphql
  contentType___node___showInMenu
  contentType___node___showInNavMenus
  contentType___node___showInRest
  contentType___node___showUi
  contentType___node___uri
  contentType___node___nodeType
  contentType___node___parent___id
  contentType___node___parent___children
  contentType___node___children
  contentType___node___children___id
  contentType___node___children___children
  contentType___node___internal___content
  contentType___node___internal___contentDigest
  contentType___node___internal___description
  contentType___node___internal___fieldOwners
  contentType___node___internal___ignoreType
  contentType___node___internal___mediaType
  contentType___node___internal___owner
  contentType___node___internal___type
  databaseId
  date
  dateGmt
  desiredSlug
  enclosure
  guid
  id
  isContentNode
  isTermNode
  lastEditedBy___node___avatar___default
  lastEditedBy___node___avatar___extraAttr
  lastEditedBy___node___avatar___forceDefault
  lastEditedBy___node___avatar___foundAvatar
  lastEditedBy___node___avatar___height
  lastEditedBy___node___avatar___rating
  lastEditedBy___node___avatar___scheme
  lastEditedBy___node___avatar___size
  lastEditedBy___node___avatar___url
  lastEditedBy___node___avatar___width
  lastEditedBy___node___capKey
  lastEditedBy___node___capabilities
  lastEditedBy___node___comments___nodes
  lastEditedBy___node___databaseId
  lastEditedBy___node___description
  lastEditedBy___node___email
  lastEditedBy___node___extraCapabilities
  lastEditedBy___node___firstName
  lastEditedBy___node___id
  lastEditedBy___node___isContentNode
  lastEditedBy___node___isTermNode
  lastEditedBy___node___lastName
  lastEditedBy___node___locale
  lastEditedBy___node___name
  lastEditedBy___node___nicename
  lastEditedBy___node___nickname
  lastEditedBy___node___pages___nodes
  lastEditedBy___node___posts___nodes
  lastEditedBy___node___registeredDate
  lastEditedBy___node___roles___nodes
  lastEditedBy___node___slug
  lastEditedBy___node___uri
  lastEditedBy___node___url
  lastEditedBy___node___username
  lastEditedBy___node___nodeType
  lastEditedBy___node___parent___id
  lastEditedBy___node___parent___children
  lastEditedBy___node___children
  lastEditedBy___node___children___id
  lastEditedBy___node___children___children
  lastEditedBy___node___internal___content
  lastEditedBy___node___internal___contentDigest
  lastEditedBy___node___internal___description
  lastEditedBy___node___internal___fieldOwners
  lastEditedBy___node___internal___ignoreType
  lastEditedBy___node___internal___mediaType
  lastEditedBy___node___internal___owner
  lastEditedBy___node___internal___type
  link
  modified
  modifiedGmt
  slug
  status
  template___templateName
  uri
  nodeType
  parent___id
  parent___parent___id
  parent___parent___parent___id
  parent___parent___parent___children
  parent___parent___children
  parent___parent___children___id
  parent___parent___children___children
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___children
  parent___children___id
  parent___children___parent___id
  parent___children___parent___children
  parent___children___children
  parent___children___children___id
  parent___children___children___children
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  children
  children___id
  children___parent___id
  children___parent___parent___id
  children___parent___parent___children
  children___parent___children
  children___parent___children___id
  children___parent___children___children
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___children
  children___children___id
  children___children___parent___id
  children___children___parent___children
  children___children___children
  children___children___children___id
  children___children___children___children
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
}

type WpContentNodeGroupConnection {
  totalCount: Int!
  edges: [WpContentNodeEdge!]!
  nodes: [WpContentNode!]!
  pageInfo: PageInfo!
  field: String!
  fieldValue: String
}

input WpContentNodeSortInput {
  fields: [WpContentNodeFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

type WpContentTypeConnection {
  totalCount: Int!
  edges: [WpContentTypeEdge!]!
  nodes: [WpContentType!]!
  pageInfo: PageInfo!
  distinct(field: WpContentTypeFieldsEnum!): [String!]!
  max(field: WpContentTypeFieldsEnum!): Float
  min(field: WpContentTypeFieldsEnum!): Float
  sum(field: WpContentTypeFieldsEnum!): Float
  group(skip: Int, limit: Int, field: WpContentTypeFieldsEnum!): [WpContentTypeGroupConnection!]!
}

type WpContentTypeEdge {
  next: WpContentType
  node: WpContentType!
  previous: WpContentType
}

enum WpContentTypeFieldsEnum {
  archivePath
  canExport
  connectedTaxonomies___nodes
  connectedTaxonomies___nodes___archivePath
  connectedTaxonomies___nodes___connectedContentTypes___nodes
  connectedTaxonomies___nodes___description
  connectedTaxonomies___nodes___graphqlPluralName
  connectedTaxonomies___nodes___graphqlSingleName
  connectedTaxonomies___nodes___hierarchical
  connectedTaxonomies___nodes___id
  connectedTaxonomies___nodes___label
  connectedTaxonomies___nodes___name
  connectedTaxonomies___nodes___public
  connectedTaxonomies___nodes___restBase
  connectedTaxonomies___nodes___restControllerClass
  connectedTaxonomies___nodes___showCloud
  connectedTaxonomies___nodes___showInAdminColumn
  connectedTaxonomies___nodes___showInGraphql
  connectedTaxonomies___nodes___showInMenu
  connectedTaxonomies___nodes___showInNavMenus
  connectedTaxonomies___nodes___showInQuickEdit
  connectedTaxonomies___nodes___showInRest
  connectedTaxonomies___nodes___showUi
  connectedTaxonomies___nodes___nodeType
  connectedTaxonomies___nodes___parent___id
  connectedTaxonomies___nodes___parent___children
  connectedTaxonomies___nodes___children
  connectedTaxonomies___nodes___children___id
  connectedTaxonomies___nodes___children___children
  connectedTaxonomies___nodes___internal___content
  connectedTaxonomies___nodes___internal___contentDigest
  connectedTaxonomies___nodes___internal___description
  connectedTaxonomies___nodes___internal___fieldOwners
  connectedTaxonomies___nodes___internal___ignoreType
  connectedTaxonomies___nodes___internal___mediaType
  connectedTaxonomies___nodes___internal___owner
  connectedTaxonomies___nodes___internal___type
  contentNodes___nodes
  contentNodes___nodes___databaseId
  contentNodes___nodes___date
  contentNodes___nodes___dateGmt
  contentNodes___nodes___desiredSlug
  contentNodes___nodes___enclosure
  contentNodes___nodes___guid
  contentNodes___nodes___id
  contentNodes___nodes___isContentNode
  contentNodes___nodes___isTermNode
  contentNodes___nodes___link
  contentNodes___nodes___modified
  contentNodes___nodes___modifiedGmt
  contentNodes___nodes___slug
  contentNodes___nodes___status
  contentNodes___nodes___template___templateName
  contentNodes___nodes___uri
  contentNodes___nodes___nodeType
  contentNodes___nodes___parent___id
  contentNodes___nodes___parent___children
  contentNodes___nodes___children
  contentNodes___nodes___children___id
  contentNodes___nodes___children___children
  contentNodes___nodes___internal___content
  contentNodes___nodes___internal___contentDigest
  contentNodes___nodes___internal___description
  contentNodes___nodes___internal___fieldOwners
  contentNodes___nodes___internal___ignoreType
  contentNodes___nodes___internal___mediaType
  contentNodes___nodes___internal___owner
  contentNodes___nodes___internal___type
  deleteWithUser
  description
  excludeFromSearch
  graphqlPluralName
  graphqlSingleName
  hasArchive
  hierarchical
  id
  isContentNode
  isFrontPage
  isPostsPage
  isTermNode
  label
  labels___addNew
  labels___addNewItem
  labels___allItems
  labels___archives
  labels___attributes
  labels___editItem
  labels___featuredImage
  labels___filterItemsList
  labels___insertIntoItem
  labels___itemsList
  labels___itemsListNavigation
  labels___menuName
  labels___name
  labels___newItem
  labels___notFound
  labels___notFoundInTrash
  labels___parentItemColon
  labels___removeFeaturedImage
  labels___searchItems
  labels___setFeaturedImage
  labels___singularName
  labels___uploadedToThisItem
  labels___useFeaturedImage
  labels___viewItem
  labels___viewItems
  menuIcon
  menuPosition
  name
  public
  publiclyQueryable
  restBase
  restControllerClass
  showInAdminBar
  showInGraphql
  showInMenu
  showInNavMenus
  showInRest
  showUi
  uri
  nodeType
  parent___id
  parent___parent___id
  parent___parent___parent___id
  parent___parent___parent___children
  parent___parent___children
  parent___parent___children___id
  parent___parent___children___children
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___children
  parent___children___id
  parent___children___parent___id
  parent___children___parent___children
  parent___children___children
  parent___children___children___id
  parent___children___children___children
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  children
  children___id
  children___parent___id
  children___parent___parent___id
  children___parent___parent___children
  children___parent___children
  children___parent___children___id
  children___parent___children___children
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___children
  children___children___id
  children___children___parent___id
  children___children___parent___children
  children___children___children
  children___children___children___id
  children___children___children___children
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
}

type WpContentTypeGroupConnection {
  totalCount: Int!
  edges: [WpContentTypeEdge!]!
  nodes: [WpContentType!]!
  pageInfo: PageInfo!
  field: String!
  fieldValue: String
}

input WpContentTypeSortInput {
  fields: [WpContentTypeFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

type WpTaxonomyConnection {
  totalCount: Int!
  edges: [WpTaxonomyEdge!]!
  nodes: [WpTaxonomy!]!
  pageInfo: PageInfo!
  distinct(field: WpTaxonomyFieldsEnum!): [String!]!
  max(field: WpTaxonomyFieldsEnum!): Float
  min(field: WpTaxonomyFieldsEnum!): Float
  sum(field: WpTaxonomyFieldsEnum!): Float
  group(skip: Int, limit: Int, field: WpTaxonomyFieldsEnum!): [WpTaxonomyGroupConnection!]!
}

type WpTaxonomyEdge {
  next: WpTaxonomy
  node: WpTaxonomy!
  previous: WpTaxonomy
}

enum WpTaxonomyFieldsEnum {
  archivePath
  connectedContentTypes___nodes
  connectedContentTypes___nodes___archivePath
  connectedContentTypes___nodes___canExport
  connectedContentTypes___nodes___connectedTaxonomies___nodes
  connectedContentTypes___nodes___contentNodes___nodes
  connectedContentTypes___nodes___deleteWithUser
  connectedContentTypes___nodes___description
  connectedContentTypes___nodes___excludeFromSearch
  connectedContentTypes___nodes___graphqlPluralName
  connectedContentTypes___nodes___graphqlSingleName
  connectedContentTypes___nodes___hasArchive
  connectedContentTypes___nodes___hierarchical
  connectedContentTypes___nodes___id
  connectedContentTypes___nodes___isContentNode
  connectedContentTypes___nodes___isFrontPage
  connectedContentTypes___nodes___isPostsPage
  connectedContentTypes___nodes___isTermNode
  connectedContentTypes___nodes___label
  connectedContentTypes___nodes___labels___addNew
  connectedContentTypes___nodes___labels___addNewItem
  connectedContentTypes___nodes___labels___allItems
  connectedContentTypes___nodes___labels___archives
  connectedContentTypes___nodes___labels___attributes
  connectedContentTypes___nodes___labels___editItem
  connectedContentTypes___nodes___labels___featuredImage
  connectedContentTypes___nodes___labels___filterItemsList
  connectedContentTypes___nodes___labels___insertIntoItem
  connectedContentTypes___nodes___labels___itemsList
  connectedContentTypes___nodes___labels___itemsListNavigation
  connectedContentTypes___nodes___labels___menuName
  connectedContentTypes___nodes___labels___name
  connectedContentTypes___nodes___labels___newItem
  connectedContentTypes___nodes___labels___notFound
  connectedContentTypes___nodes___labels___notFoundInTrash
  connectedContentTypes___nodes___labels___parentItemColon
  connectedContentTypes___nodes___labels___removeFeaturedImage
  connectedContentTypes___nodes___labels___searchItems
  connectedContentTypes___nodes___labels___setFeaturedImage
  connectedContentTypes___nodes___labels___singularName
  connectedContentTypes___nodes___labels___uploadedToThisItem
  connectedContentTypes___nodes___labels___useFeaturedImage
  connectedContentTypes___nodes___labels___viewItem
  connectedContentTypes___nodes___labels___viewItems
  connectedContentTypes___nodes___menuIcon
  connectedContentTypes___nodes___menuPosition
  connectedContentTypes___nodes___name
  connectedContentTypes___nodes___public
  connectedContentTypes___nodes___publiclyQueryable
  connectedContentTypes___nodes___restBase
  connectedContentTypes___nodes___restControllerClass
  connectedContentTypes___nodes___showInAdminBar
  connectedContentTypes___nodes___showInGraphql
  connectedContentTypes___nodes___showInMenu
  connectedContentTypes___nodes___showInNavMenus
  connectedContentTypes___nodes___showInRest
  connectedContentTypes___nodes___showUi
  connectedContentTypes___nodes___uri
  connectedContentTypes___nodes___nodeType
  connectedContentTypes___nodes___parent___id
  connectedContentTypes___nodes___parent___children
  connectedContentTypes___nodes___children
  connectedContentTypes___nodes___children___id
  connectedContentTypes___nodes___children___children
  connectedContentTypes___nodes___internal___content
  connectedContentTypes___nodes___internal___contentDigest
  connectedContentTypes___nodes___internal___description
  connectedContentTypes___nodes___internal___fieldOwners
  connectedContentTypes___nodes___internal___ignoreType
  connectedContentTypes___nodes___internal___mediaType
  connectedContentTypes___nodes___internal___owner
  connectedContentTypes___nodes___internal___type
  description
  graphqlPluralName
  graphqlSingleName
  hierarchical
  id
  label
  name
  public
  restBase
  restControllerClass
  showCloud
  showInAdminColumn
  showInGraphql
  showInMenu
  showInNavMenus
  showInQuickEdit
  showInRest
  showUi
  nodeType
  parent___id
  parent___parent___id
  parent___parent___parent___id
  parent___parent___parent___children
  parent___parent___children
  parent___parent___children___id
  parent___parent___children___children
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___children
  parent___children___id
  parent___children___parent___id
  parent___children___parent___children
  parent___children___children
  parent___children___children___id
  parent___children___children___children
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  children
  children___id
  children___parent___id
  children___parent___parent___id
  children___parent___parent___children
  children___parent___children
  children___parent___children___id
  children___parent___children___children
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___children
  children___children___id
  children___children___parent___id
  children___children___parent___children
  children___children___children
  children___children___children___id
  children___children___children___children
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
}

type WpTaxonomyGroupConnection {
  totalCount: Int!
  edges: [WpTaxonomyEdge!]!
  nodes: [WpTaxonomy!]!
  pageInfo: PageInfo!
  field: String!
  fieldValue: String
}

input WpTaxonomySortInput {
  fields: [WpTaxonomyFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

type WpUserConnection {
  totalCount: Int!
  edges: [WpUserEdge!]!
  nodes: [WpUser!]!
  pageInfo: PageInfo!
  distinct(field: WpUserFieldsEnum!): [String!]!
  max(field: WpUserFieldsEnum!): Float
  min(field: WpUserFieldsEnum!): Float
  sum(field: WpUserFieldsEnum!): Float
  group(skip: Int, limit: Int, field: WpUserFieldsEnum!): [WpUserGroupConnection!]!
}

type WpUserEdge {
  next: WpUser
  node: WpUser!
  previous: WpUser
}

enum WpUserFieldsEnum {
  avatar___default
  avatar___extraAttr
  avatar___forceDefault
  avatar___foundAvatar
  avatar___height
  avatar___rating
  avatar___scheme
  avatar___size
  avatar___url
  avatar___width
  capKey
  capabilities
  comments___nodes
  comments___nodes___agent
  comments___nodes___approved
  comments___nodes___authorIp
  comments___nodes___content
  comments___nodes___databaseId
  comments___nodes___date
  comments___nodes___dateGmt
  comments___nodes___id
  comments___nodes___karma
  comments___nodes___parentDatabaseId
  comments___nodes___parentId
  comments___nodes___replies___nodes
  comments___nodes___type
  comments___nodes___nodeType
  comments___nodes___parent___id
  comments___nodes___parent___children
  comments___nodes___children
  comments___nodes___children___id
  comments___nodes___children___children
  comments___nodes___internal___content
  comments___nodes___internal___contentDigest
  comments___nodes___internal___description
  comments___nodes___internal___fieldOwners
  comments___nodes___internal___ignoreType
  comments___nodes___internal___mediaType
  comments___nodes___internal___owner
  comments___nodes___internal___type
  databaseId
  description
  email
  extraCapabilities
  firstName
  id
  isContentNode
  isTermNode
  lastName
  locale
  name
  nicename
  nickname
  pages___nodes
  pages___nodes___ancestors___nodes
  pages___nodes___authorDatabaseId
  pages___nodes___authorId
  pages___nodes___wpChildren___nodes
  pages___nodes___commentCount
  pages___nodes___commentStatus
  pages___nodes___comments___nodes
  pages___nodes___content
  pages___nodes___databaseId
  pages___nodes___date
  pages___nodes___dateGmt
  pages___nodes___desiredSlug
  pages___nodes___enclosure
  pages___nodes___featuredImageDatabaseId
  pages___nodes___featuredImageId
  pages___nodes___guid
  pages___nodes___id
  pages___nodes___isContentNode
  pages___nodes___isFrontPage
  pages___nodes___isPostsPage
  pages___nodes___isPrivacyPage
  pages___nodes___isRevision
  pages___nodes___isTermNode
  pages___nodes___link
  pages___nodes___menuOrder
  pages___nodes___modified
  pages___nodes___modifiedGmt
  pages___nodes___parentDatabaseId
  pages___nodes___parentId
  pages___nodes___slug
  pages___nodes___status
  pages___nodes___template___templateName
  pages___nodes___title
  pages___nodes___uri
  pages___nodes___nodeType
  pages___nodes___parent___id
  pages___nodes___parent___children
  pages___nodes___children
  pages___nodes___children___id
  pages___nodes___children___children
  pages___nodes___internal___content
  pages___nodes___internal___contentDigest
  pages___nodes___internal___description
  pages___nodes___internal___fieldOwners
  pages___nodes___internal___ignoreType
  pages___nodes___internal___mediaType
  pages___nodes___internal___owner
  pages___nodes___internal___type
  posts___nodes
  posts___nodes___authorDatabaseId
  posts___nodes___authorId
  posts___nodes___categories___nodes
  posts___nodes___commentCount
  posts___nodes___commentStatus
  posts___nodes___comments___nodes
  posts___nodes___content
  posts___nodes___databaseId
  posts___nodes___date
  posts___nodes___dateGmt
  posts___nodes___desiredSlug
  posts___nodes___enclosure
  posts___nodes___excerpt
  posts___nodes___featuredImageDatabaseId
  posts___nodes___featuredImageId
  posts___nodes___guid
  posts___nodes___id
  posts___nodes___isContentNode
  posts___nodes___isRevision
  posts___nodes___isSticky
  posts___nodes___isTermNode
  posts___nodes___link
  posts___nodes___modified
  posts___nodes___modifiedGmt
  posts___nodes___pingStatus
  posts___nodes___pinged
  posts___nodes___postFormats___nodes
  posts___nodes___slug
  posts___nodes___status
  posts___nodes___tags___nodes
  posts___nodes___template___templateName
  posts___nodes___terms___nodes
  posts___nodes___title
  posts___nodes___toPing
  posts___nodes___uri
  posts___nodes___nodeType
  posts___nodes___parent___id
  posts___nodes___parent___children
  posts___nodes___children
  posts___nodes___children___id
  posts___nodes___children___children
  posts___nodes___internal___content
  posts___nodes___internal___contentDigest
  posts___nodes___internal___description
  posts___nodes___internal___fieldOwners
  posts___nodes___internal___ignoreType
  posts___nodes___internal___mediaType
  posts___nodes___internal___owner
  posts___nodes___internal___type
  registeredDate
  roles___nodes
  roles___nodes___capabilities
  roles___nodes___displayName
  roles___nodes___id
  roles___nodes___name
  roles___nodes___nodeType
  roles___nodes___parent___id
  roles___nodes___parent___children
  roles___nodes___children
  roles___nodes___children___id
  roles___nodes___children___children
  roles___nodes___internal___content
  roles___nodes___internal___contentDigest
  roles___nodes___internal___description
  roles___nodes___internal___fieldOwners
  roles___nodes___internal___ignoreType
  roles___nodes___internal___mediaType
  roles___nodes___internal___owner
  roles___nodes___internal___type
  slug
  uri
  url
  username
  nodeType
  parent___id
  parent___parent___id
  parent___parent___parent___id
  parent___parent___parent___children
  parent___parent___children
  parent___parent___children___id
  parent___parent___children___children
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___children
  parent___children___id
  parent___children___parent___id
  parent___children___parent___children
  parent___children___children
  parent___children___children___id
  parent___children___children___children
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  children
  children___id
  children___parent___id
  children___parent___parent___id
  children___parent___parent___children
  children___parent___children
  children___parent___children___id
  children___parent___children___children
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___children
  children___children___id
  children___children___parent___id
  children___children___parent___children
  children___children___children
  children___children___children___id
  children___children___children___children
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
}

type WpUserGroupConnection {
  totalCount: Int!
  edges: [WpUserEdge!]!
  nodes: [WpUser!]!
  pageInfo: PageInfo!
  field: String!
  fieldValue: String
}

input WpUserSortInput {
  fields: [WpUserFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

type WpCommentConnection {
  totalCount: Int!
  edges: [WpCommentEdge!]!
  nodes: [WpComment!]!
  pageInfo: PageInfo!
  distinct(field: WpCommentFieldsEnum!): [String!]!
  max(field: WpCommentFieldsEnum!): Float
  min(field: WpCommentFieldsEnum!): Float
  sum(field: WpCommentFieldsEnum!): Float
  group(skip: Int, limit: Int, field: WpCommentFieldsEnum!): [WpCommentGroupConnection!]!
}

type WpCommentEdge {
  next: WpComment
  node: WpComment!
  previous: WpComment
}

enum WpCommentFieldsEnum {
  agent
  approved
  author___node___databaseId
  author___node___email
  author___node___id
  author___node___name
  author___node___url
  authorIp
  commentedOn___node___databaseId
  commentedOn___node___date
  commentedOn___node___dateGmt
  commentedOn___node___desiredSlug
  commentedOn___node___enclosure
  commentedOn___node___guid
  commentedOn___node___id
  commentedOn___node___isContentNode
  commentedOn___node___isTermNode
  commentedOn___node___link
  commentedOn___node___modified
  commentedOn___node___modifiedGmt
  commentedOn___node___slug
  commentedOn___node___status
  commentedOn___node___template___templateName
  commentedOn___node___uri
  commentedOn___node___nodeType
  commentedOn___node___parent___id
  commentedOn___node___parent___children
  commentedOn___node___children
  commentedOn___node___children___id
  commentedOn___node___children___children
  commentedOn___node___internal___content
  commentedOn___node___internal___contentDigest
  commentedOn___node___internal___description
  commentedOn___node___internal___fieldOwners
  commentedOn___node___internal___ignoreType
  commentedOn___node___internal___mediaType
  commentedOn___node___internal___owner
  commentedOn___node___internal___type
  content
  databaseId
  date
  dateGmt
  id
  karma
  wpParent___node___agent
  wpParent___node___approved
  wpParent___node___authorIp
  wpParent___node___content
  wpParent___node___databaseId
  wpParent___node___date
  wpParent___node___dateGmt
  wpParent___node___id
  wpParent___node___karma
  wpParent___node___parentDatabaseId
  wpParent___node___parentId
  wpParent___node___replies___nodes
  wpParent___node___type
  wpParent___node___nodeType
  wpParent___node___parent___id
  wpParent___node___parent___children
  wpParent___node___children
  wpParent___node___children___id
  wpParent___node___children___children
  wpParent___node___internal___content
  wpParent___node___internal___contentDigest
  wpParent___node___internal___description
  wpParent___node___internal___fieldOwners
  wpParent___node___internal___ignoreType
  wpParent___node___internal___mediaType
  wpParent___node___internal___owner
  wpParent___node___internal___type
  parentDatabaseId
  parentId
  replies___nodes
  replies___nodes___agent
  replies___nodes___approved
  replies___nodes___authorIp
  replies___nodes___content
  replies___nodes___databaseId
  replies___nodes___date
  replies___nodes___dateGmt
  replies___nodes___id
  replies___nodes___karma
  replies___nodes___parentDatabaseId
  replies___nodes___parentId
  replies___nodes___replies___nodes
  replies___nodes___type
  replies___nodes___nodeType
  replies___nodes___parent___id
  replies___nodes___parent___children
  replies___nodes___children
  replies___nodes___children___id
  replies___nodes___children___children
  replies___nodes___internal___content
  replies___nodes___internal___contentDigest
  replies___nodes___internal___description
  replies___nodes___internal___fieldOwners
  replies___nodes___internal___ignoreType
  replies___nodes___internal___mediaType
  replies___nodes___internal___owner
  replies___nodes___internal___type
  type
  nodeType
  parent___id
  parent___parent___id
  parent___parent___parent___id
  parent___parent___parent___children
  parent___parent___children
  parent___parent___children___id
  parent___parent___children___children
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___children
  parent___children___id
  parent___children___parent___id
  parent___children___parent___children
  parent___children___children
  parent___children___children___id
  parent___children___children___children
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  children
  children___id
  children___parent___id
  children___parent___parent___id
  children___parent___parent___children
  children___parent___children
  children___parent___children___id
  children___parent___children___children
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___children
  children___children___id
  children___children___parent___id
  children___children___parent___children
  children___children___children
  children___children___children___id
  children___children___children___children
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
}

type WpCommentGroupConnection {
  totalCount: Int!
  edges: [WpCommentEdge!]!
  nodes: [WpComment!]!
  pageInfo: PageInfo!
  field: String!
  fieldValue: String
}

input WpCommentSortInput {
  fields: [WpCommentFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

type WpMediaItemConnection {
  totalCount: Int!
  edges: [WpMediaItemEdge!]!
  nodes: [WpMediaItem!]!
  pageInfo: PageInfo!
  distinct(field: WpMediaItemFieldsEnum!): [String!]!
  max(field: WpMediaItemFieldsEnum!): Float
  min(field: WpMediaItemFieldsEnum!): Float
  sum(field: WpMediaItemFieldsEnum!): Float
  group(skip: Int, limit: Int, field: WpMediaItemFieldsEnum!): [WpMediaItemGroupConnection!]!
}

type WpMediaItemEdge {
  next: WpMediaItem
  node: WpMediaItem!
  previous: WpMediaItem
}

enum WpMediaItemFieldsEnum {
  altText
  ancestors___nodes
  ancestors___nodes___databaseId
  ancestors___nodes___date
  ancestors___nodes___dateGmt
  ancestors___nodes___desiredSlug
  ancestors___nodes___enclosure
  ancestors___nodes___guid
  ancestors___nodes___id
  ancestors___nodes___isContentNode
  ancestors___nodes___isTermNode
  ancestors___nodes___link
  ancestors___nodes___modified
  ancestors___nodes___modifiedGmt
  ancestors___nodes___slug
  ancestors___nodes___status
  ancestors___nodes___template___templateName
  ancestors___nodes___uri
  ancestors___nodes___nodeType
  ancestors___nodes___parent___id
  ancestors___nodes___parent___children
  ancestors___nodes___children
  ancestors___nodes___children___id
  ancestors___nodes___children___children
  ancestors___nodes___internal___content
  ancestors___nodes___internal___contentDigest
  ancestors___nodes___internal___description
  ancestors___nodes___internal___fieldOwners
  ancestors___nodes___internal___ignoreType
  ancestors___nodes___internal___mediaType
  ancestors___nodes___internal___owner
  ancestors___nodes___internal___type
  author___node___avatar___default
  author___node___avatar___extraAttr
  author___node___avatar___forceDefault
  author___node___avatar___foundAvatar
  author___node___avatar___height
  author___node___avatar___rating
  author___node___avatar___scheme
  author___node___avatar___size
  author___node___avatar___url
  author___node___avatar___width
  author___node___capKey
  author___node___capabilities
  author___node___comments___nodes
  author___node___databaseId
  author___node___description
  author___node___email
  author___node___extraCapabilities
  author___node___firstName
  author___node___id
  author___node___isContentNode
  author___node___isTermNode
  author___node___lastName
  author___node___locale
  author___node___name
  author___node___nicename
  author___node___nickname
  author___node___pages___nodes
  author___node___posts___nodes
  author___node___registeredDate
  author___node___roles___nodes
  author___node___slug
  author___node___uri
  author___node___url
  author___node___username
  author___node___nodeType
  author___node___parent___id
  author___node___parent___children
  author___node___children
  author___node___children___id
  author___node___children___children
  author___node___internal___content
  author___node___internal___contentDigest
  author___node___internal___description
  author___node___internal___fieldOwners
  author___node___internal___ignoreType
  author___node___internal___mediaType
  author___node___internal___owner
  author___node___internal___type
  authorDatabaseId
  authorId
  caption
  wpChildren___nodes
  wpChildren___nodes___databaseId
  wpChildren___nodes___date
  wpChildren___nodes___dateGmt
  wpChildren___nodes___desiredSlug
  wpChildren___nodes___enclosure
  wpChildren___nodes___guid
  wpChildren___nodes___id
  wpChildren___nodes___isContentNode
  wpChildren___nodes___isTermNode
  wpChildren___nodes___link
  wpChildren___nodes___modified
  wpChildren___nodes___modifiedGmt
  wpChildren___nodes___slug
  wpChildren___nodes___status
  wpChildren___nodes___template___templateName
  wpChildren___nodes___uri
  wpChildren___nodes___nodeType
  wpChildren___nodes___parent___id
  wpChildren___nodes___parent___children
  wpChildren___nodes___children
  wpChildren___nodes___children___id
  wpChildren___nodes___children___children
  wpChildren___nodes___internal___content
  wpChildren___nodes___internal___contentDigest
  wpChildren___nodes___internal___description
  wpChildren___nodes___internal___fieldOwners
  wpChildren___nodes___internal___ignoreType
  wpChildren___nodes___internal___mediaType
  wpChildren___nodes___internal___owner
  wpChildren___nodes___internal___type
  commentCount
  commentStatus
  comments___nodes
  comments___nodes___agent
  comments___nodes___approved
  comments___nodes___authorIp
  comments___nodes___content
  comments___nodes___databaseId
  comments___nodes___date
  comments___nodes___dateGmt
  comments___nodes___id
  comments___nodes___karma
  comments___nodes___parentDatabaseId
  comments___nodes___parentId
  comments___nodes___replies___nodes
  comments___nodes___type
  comments___nodes___nodeType
  comments___nodes___parent___id
  comments___nodes___parent___children
  comments___nodes___children
  comments___nodes___children___id
  comments___nodes___children___children
  comments___nodes___internal___content
  comments___nodes___internal___contentDigest
  comments___nodes___internal___description
  comments___nodes___internal___fieldOwners
  comments___nodes___internal___ignoreType
  comments___nodes___internal___mediaType
  comments___nodes___internal___owner
  comments___nodes___internal___type
  contentType___node___archivePath
  contentType___node___canExport
  contentType___node___connectedTaxonomies___nodes
  contentType___node___contentNodes___nodes
  contentType___node___deleteWithUser
  contentType___node___description
  contentType___node___excludeFromSearch
  contentType___node___graphqlPluralName
  contentType___node___graphqlSingleName
  contentType___node___hasArchive
  contentType___node___hierarchical
  contentType___node___id
  contentType___node___isContentNode
  contentType___node___isFrontPage
  contentType___node___isPostsPage
  contentType___node___isTermNode
  contentType___node___label
  contentType___node___labels___addNew
  contentType___node___labels___addNewItem
  contentType___node___labels___allItems
  contentType___node___labels___archives
  contentType___node___labels___attributes
  contentType___node___labels___editItem
  contentType___node___labels___featuredImage
  contentType___node___labels___filterItemsList
  contentType___node___labels___insertIntoItem
  contentType___node___labels___itemsList
  contentType___node___labels___itemsListNavigation
  contentType___node___labels___menuName
  contentType___node___labels___name
  contentType___node___labels___newItem
  contentType___node___labels___notFound
  contentType___node___labels___notFoundInTrash
  contentType___node___labels___parentItemColon
  contentType___node___labels___removeFeaturedImage
  contentType___node___labels___searchItems
  contentType___node___labels___setFeaturedImage
  contentType___node___labels___singularName
  contentType___node___labels___uploadedToThisItem
  contentType___node___labels___useFeaturedImage
  contentType___node___labels___viewItem
  contentType___node___labels___viewItems
  contentType___node___menuIcon
  contentType___node___menuPosition
  contentType___node___name
  contentType___node___public
  contentType___node___publiclyQueryable
  contentType___node___restBase
  contentType___node___restControllerClass
  contentType___node___showInAdminBar
  contentType___node___showInGraphql
  contentType___node___showInMenu
  contentType___node___showInNavMenus
  contentType___node___showInRest
  contentType___node___showUi
  contentType___node___uri
  contentType___node___nodeType
  contentType___node___parent___id
  contentType___node___parent___children
  contentType___node___children
  contentType___node___children___id
  contentType___node___children___children
  contentType___node___internal___content
  contentType___node___internal___contentDigest
  contentType___node___internal___description
  contentType___node___internal___fieldOwners
  contentType___node___internal___ignoreType
  contentType___node___internal___mediaType
  contentType___node___internal___owner
  contentType___node___internal___type
  databaseId
  date
  dateGmt
  description
  desiredSlug
  enclosure
  fileSize
  guid
  id
  isContentNode
  isTermNode
  lastEditedBy___node___avatar___default
  lastEditedBy___node___avatar___extraAttr
  lastEditedBy___node___avatar___forceDefault
  lastEditedBy___node___avatar___foundAvatar
  lastEditedBy___node___avatar___height
  lastEditedBy___node___avatar___rating
  lastEditedBy___node___avatar___scheme
  lastEditedBy___node___avatar___size
  lastEditedBy___node___avatar___url
  lastEditedBy___node___avatar___width
  lastEditedBy___node___capKey
  lastEditedBy___node___capabilities
  lastEditedBy___node___comments___nodes
  lastEditedBy___node___databaseId
  lastEditedBy___node___description
  lastEditedBy___node___email
  lastEditedBy___node___extraCapabilities
  lastEditedBy___node___firstName
  lastEditedBy___node___id
  lastEditedBy___node___isContentNode
  lastEditedBy___node___isTermNode
  lastEditedBy___node___lastName
  lastEditedBy___node___locale
  lastEditedBy___node___name
  lastEditedBy___node___nicename
  lastEditedBy___node___nickname
  lastEditedBy___node___pages___nodes
  lastEditedBy___node___posts___nodes
  lastEditedBy___node___registeredDate
  lastEditedBy___node___roles___nodes
  lastEditedBy___node___slug
  lastEditedBy___node___uri
  lastEditedBy___node___url
  lastEditedBy___node___username
  lastEditedBy___node___nodeType
  lastEditedBy___node___parent___id
  lastEditedBy___node___parent___children
  lastEditedBy___node___children
  lastEditedBy___node___children___id
  lastEditedBy___node___children___children
  lastEditedBy___node___internal___content
  lastEditedBy___node___internal___contentDigest
  lastEditedBy___node___internal___description
  lastEditedBy___node___internal___fieldOwners
  lastEditedBy___node___internal___ignoreType
  lastEditedBy___node___internal___mediaType
  lastEditedBy___node___internal___owner
  lastEditedBy___node___internal___type
  link
  mediaDetails___file
  mediaDetails___height
  mediaDetails___meta___aperture
  mediaDetails___meta___camera
  mediaDetails___meta___caption
  mediaDetails___meta___copyright
  mediaDetails___meta___createdTimestamp
  mediaDetails___meta___credit
  mediaDetails___meta___focalLength
  mediaDetails___meta___iso
  mediaDetails___meta___keywords
  mediaDetails___meta___orientation
  mediaDetails___meta___shutterSpeed
  mediaDetails___meta___title
  mediaDetails___sizes
  mediaDetails___sizes___file
  mediaDetails___sizes___fileSize
  mediaDetails___sizes___height
  mediaDetails___sizes___mimeType
  mediaDetails___sizes___name
  mediaDetails___sizes___sourceUrl
  mediaDetails___sizes___width
  mediaDetails___width
  mediaItemUrl
  mediaType
  mimeType
  modified
  modifiedGmt
  wpParent___node___databaseId
  wpParent___node___date
  wpParent___node___dateGmt
  wpParent___node___desiredSlug
  wpParent___node___enclosure
  wpParent___node___guid
  wpParent___node___id
  wpParent___node___isContentNode
  wpParent___node___isTermNode
  wpParent___node___link
  wpParent___node___modified
  wpParent___node___modifiedGmt
  wpParent___node___slug
  wpParent___node___status
  wpParent___node___template___templateName
  wpParent___node___uri
  wpParent___node___nodeType
  wpParent___node___parent___id
  wpParent___node___parent___children
  wpParent___node___children
  wpParent___node___children___id
  wpParent___node___children___children
  wpParent___node___internal___content
  wpParent___node___internal___contentDigest
  wpParent___node___internal___description
  wpParent___node___internal___fieldOwners
  wpParent___node___internal___ignoreType
  wpParent___node___internal___mediaType
  wpParent___node___internal___owner
  wpParent___node___internal___type
  parentDatabaseId
  parentId
  sizes
  slug
  sourceUrl
  srcSet
  status
  template___templateName
  title
  uri
  nodeType
  remoteFile___sourceInstanceName
  remoteFile___absolutePath
  remoteFile___relativePath
  remoteFile___extension
  remoteFile___size
  remoteFile___prettySize
  remoteFile___modifiedTime
  remoteFile___accessTime
  remoteFile___changeTime
  remoteFile___birthTime
  remoteFile___root
  remoteFile___dir
  remoteFile___base
  remoteFile___ext
  remoteFile___name
  remoteFile___relativeDirectory
  remoteFile___dev
  remoteFile___mode
  remoteFile___nlink
  remoteFile___uid
  remoteFile___gid
  remoteFile___rdev
  remoteFile___ino
  remoteFile___atimeMs
  remoteFile___mtimeMs
  remoteFile___ctimeMs
  remoteFile___atime
  remoteFile___mtime
  remoteFile___ctime
  remoteFile___birthtime
  remoteFile___birthtimeMs
  remoteFile___blksize
  remoteFile___blocks
  remoteFile___url
  remoteFile___childrenImageSharp
  remoteFile___childrenImageSharp___fixed___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childrenImageSharp___fixed___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childrenImageSharp___fixed___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childrenImageSharp___fixed___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childrenImageSharp___fixed___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childrenImageSharp___fixed___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childrenImageSharp___fixed___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childrenImageSharp___fixed___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childrenImageSharp___fixed___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childrenImageSharp___fixed___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childrenImageSharp___fluid___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childrenImageSharp___fluid___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childrenImageSharp___fluid___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childrenImageSharp___fluid___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childrenImageSharp___fluid___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childrenImageSharp___fluid___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childrenImageSharp___fluid___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childrenImageSharp___fluid___sizes @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childrenImageSharp___fluid___originalImg @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childrenImageSharp___fluid___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childrenImageSharp___fluid___presentationWidth @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childrenImageSharp___fluid___presentationHeight @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childrenImageSharp___gatsbyImageData @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childrenImageSharp___original___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childrenImageSharp___original___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childrenImageSharp___original___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childrenImageSharp___resize___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childrenImageSharp___resize___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childrenImageSharp___resize___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childrenImageSharp___resize___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childrenImageSharp___resize___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childrenImageSharp___resize___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childrenImageSharp___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childrenImageSharp___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childrenImageSharp___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childrenImageSharp___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childrenImageSharp___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childrenImageSharp___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childrenImageSharp___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childrenImageSharp___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childrenImageSharp___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childrenImageSharp___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childrenImageSharp___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childrenImageSharp___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childrenImageSharp___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childrenImageSharp___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childImageSharp___fixed___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childImageSharp___fixed___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childImageSharp___fixed___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childImageSharp___fixed___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childImageSharp___fixed___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childImageSharp___fixed___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childImageSharp___fixed___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childImageSharp___fixed___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childImageSharp___fixed___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childImageSharp___fixed___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childImageSharp___fluid___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childImageSharp___fluid___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childImageSharp___fluid___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childImageSharp___fluid___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childImageSharp___fluid___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childImageSharp___fluid___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childImageSharp___fluid___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childImageSharp___fluid___sizes @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childImageSharp___fluid___originalImg @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childImageSharp___fluid___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childImageSharp___fluid___presentationWidth @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childImageSharp___fluid___presentationHeight @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childImageSharp___gatsbyImageData @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childImageSharp___original___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childImageSharp___original___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childImageSharp___original___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childImageSharp___resize___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childImageSharp___resize___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childImageSharp___resize___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childImageSharp___resize___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childImageSharp___resize___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childImageSharp___resize___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childImageSharp___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childImageSharp___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childImageSharp___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childImageSharp___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childImageSharp___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childImageSharp___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childImageSharp___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childImageSharp___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childImageSharp___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childImageSharp___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childImageSharp___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childImageSharp___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childImageSharp___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childImageSharp___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___id
  remoteFile___parent___id
  remoteFile___parent___parent___id
  remoteFile___parent___parent___children
  remoteFile___parent___children
  remoteFile___parent___children___id
  remoteFile___parent___children___children
  remoteFile___parent___internal___content
  remoteFile___parent___internal___contentDigest
  remoteFile___parent___internal___description
  remoteFile___parent___internal___fieldOwners
  remoteFile___parent___internal___ignoreType
  remoteFile___parent___internal___mediaType
  remoteFile___parent___internal___owner
  remoteFile___parent___internal___type
  remoteFile___children
  remoteFile___children___id
  remoteFile___children___parent___id
  remoteFile___children___parent___children
  remoteFile___children___children
  remoteFile___children___children___id
  remoteFile___children___children___children
  remoteFile___children___internal___content
  remoteFile___children___internal___contentDigest
  remoteFile___children___internal___description
  remoteFile___children___internal___fieldOwners
  remoteFile___children___internal___ignoreType
  remoteFile___children___internal___mediaType
  remoteFile___children___internal___owner
  remoteFile___children___internal___type
  remoteFile___internal___content
  remoteFile___internal___contentDigest
  remoteFile___internal___description
  remoteFile___internal___fieldOwners
  remoteFile___internal___ignoreType
  remoteFile___internal___mediaType
  remoteFile___internal___owner
  remoteFile___internal___type
  localFile___sourceInstanceName
  localFile___absolutePath
  localFile___relativePath
  localFile___extension
  localFile___size
  localFile___prettySize
  localFile___modifiedTime
  localFile___accessTime
  localFile___changeTime
  localFile___birthTime
  localFile___root
  localFile___dir
  localFile___base
  localFile___ext
  localFile___name
  localFile___relativeDirectory
  localFile___dev
  localFile___mode
  localFile___nlink
  localFile___uid
  localFile___gid
  localFile___rdev
  localFile___ino
  localFile___atimeMs
  localFile___mtimeMs
  localFile___ctimeMs
  localFile___atime
  localFile___mtime
  localFile___ctime
  localFile___birthtime
  localFile___birthtimeMs
  localFile___blksize
  localFile___blocks
  localFile___url
  localFile___childrenImageSharp
  localFile___childrenImageSharp___fixed___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childrenImageSharp___fixed___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childrenImageSharp___fixed___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childrenImageSharp___fixed___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childrenImageSharp___fixed___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childrenImageSharp___fixed___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childrenImageSharp___fixed___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childrenImageSharp___fixed___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childrenImageSharp___fixed___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childrenImageSharp___fixed___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childrenImageSharp___fluid___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childrenImageSharp___fluid___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childrenImageSharp___fluid___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childrenImageSharp___fluid___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childrenImageSharp___fluid___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childrenImageSharp___fluid___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childrenImageSharp___fluid___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childrenImageSharp___fluid___sizes @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childrenImageSharp___fluid___originalImg @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childrenImageSharp___fluid___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childrenImageSharp___fluid___presentationWidth @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childrenImageSharp___fluid___presentationHeight @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childrenImageSharp___gatsbyImageData @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childrenImageSharp___original___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childrenImageSharp___original___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childrenImageSharp___original___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childrenImageSharp___resize___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childrenImageSharp___resize___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childrenImageSharp___resize___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childrenImageSharp___resize___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childrenImageSharp___resize___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childrenImageSharp___resize___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childrenImageSharp___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childrenImageSharp___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childrenImageSharp___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childrenImageSharp___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childrenImageSharp___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childrenImageSharp___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childrenImageSharp___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childrenImageSharp___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childrenImageSharp___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childrenImageSharp___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childrenImageSharp___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childrenImageSharp___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childrenImageSharp___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childrenImageSharp___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___fixed___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___fixed___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___fixed___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___fixed___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___fixed___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___fixed___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___fixed___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___fixed___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___fixed___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___fixed___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___fluid___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___fluid___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___fluid___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___fluid___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___fluid___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___fluid___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___fluid___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___fluid___sizes @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___fluid___originalImg @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___fluid___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___fluid___presentationWidth @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___fluid___presentationHeight @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___gatsbyImageData @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___original___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___original___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___original___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___resize___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___resize___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___resize___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___resize___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___resize___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___resize___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___id
  localFile___parent___id
  localFile___parent___parent___id
  localFile___parent___parent___children
  localFile___parent___children
  localFile___parent___children___id
  localFile___parent___children___children
  localFile___parent___internal___content
  localFile___parent___internal___contentDigest
  localFile___parent___internal___description
  localFile___parent___internal___fieldOwners
  localFile___parent___internal___ignoreType
  localFile___parent___internal___mediaType
  localFile___parent___internal___owner
  localFile___parent___internal___type
  localFile___children
  localFile___children___id
  localFile___children___parent___id
  localFile___children___parent___children
  localFile___children___children
  localFile___children___children___id
  localFile___children___children___children
  localFile___children___internal___content
  localFile___children___internal___contentDigest
  localFile___children___internal___description
  localFile___children___internal___fieldOwners
  localFile___children___internal___ignoreType
  localFile___children___internal___mediaType
  localFile___children___internal___owner
  localFile___children___internal___type
  localFile___internal___content
  localFile___internal___contentDigest
  localFile___internal___description
  localFile___internal___fieldOwners
  localFile___internal___ignoreType
  localFile___internal___mediaType
  localFile___internal___owner
  localFile___internal___type
  parent___id
  parent___parent___id
  parent___parent___parent___id
  parent___parent___parent___children
  parent___parent___children
  parent___parent___children___id
  parent___parent___children___children
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___children
  parent___children___id
  parent___children___parent___id
  parent___children___parent___children
  parent___children___children
  parent___children___children___id
  parent___children___children___children
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  children
  children___id
  children___parent___id
  children___parent___parent___id
  children___parent___parent___children
  children___parent___children
  children___parent___children___id
  children___parent___children___children
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___children
  children___children___id
  children___children___parent___id
  children___children___parent___children
  children___children___children
  children___children___children___id
  children___children___children___children
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
}

type WpMediaItemGroupConnection {
  totalCount: Int!
  edges: [WpMediaItemEdge!]!
  nodes: [WpMediaItem!]!
  pageInfo: PageInfo!
  field: String!
  fieldValue: String
}

input WpMediaItemSortInput {
  fields: [WpMediaItemFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

type WpPageConnection {
  totalCount: Int!
  edges: [WpPageEdge!]!
  nodes: [WpPage!]!
  pageInfo: PageInfo!
  distinct(field: WpPageFieldsEnum!): [String!]!
  max(field: WpPageFieldsEnum!): Float
  min(field: WpPageFieldsEnum!): Float
  sum(field: WpPageFieldsEnum!): Float
  group(skip: Int, limit: Int, field: WpPageFieldsEnum!): [WpPageGroupConnection!]!
}

type WpPageEdge {
  next: WpPage
  node: WpPage!
  previous: WpPage
}

enum WpPageFieldsEnum {
  ancestors___nodes
  ancestors___nodes___databaseId
  ancestors___nodes___date
  ancestors___nodes___dateGmt
  ancestors___nodes___desiredSlug
  ancestors___nodes___enclosure
  ancestors___nodes___guid
  ancestors___nodes___id
  ancestors___nodes___isContentNode
  ancestors___nodes___isTermNode
  ancestors___nodes___link
  ancestors___nodes___modified
  ancestors___nodes___modifiedGmt
  ancestors___nodes___slug
  ancestors___nodes___status
  ancestors___nodes___template___templateName
  ancestors___nodes___uri
  ancestors___nodes___nodeType
  ancestors___nodes___parent___id
  ancestors___nodes___parent___children
  ancestors___nodes___children
  ancestors___nodes___children___id
  ancestors___nodes___children___children
  ancestors___nodes___internal___content
  ancestors___nodes___internal___contentDigest
  ancestors___nodes___internal___description
  ancestors___nodes___internal___fieldOwners
  ancestors___nodes___internal___ignoreType
  ancestors___nodes___internal___mediaType
  ancestors___nodes___internal___owner
  ancestors___nodes___internal___type
  author___node___avatar___default
  author___node___avatar___extraAttr
  author___node___avatar___forceDefault
  author___node___avatar___foundAvatar
  author___node___avatar___height
  author___node___avatar___rating
  author___node___avatar___scheme
  author___node___avatar___size
  author___node___avatar___url
  author___node___avatar___width
  author___node___capKey
  author___node___capabilities
  author___node___comments___nodes
  author___node___databaseId
  author___node___description
  author___node___email
  author___node___extraCapabilities
  author___node___firstName
  author___node___id
  author___node___isContentNode
  author___node___isTermNode
  author___node___lastName
  author___node___locale
  author___node___name
  author___node___nicename
  author___node___nickname
  author___node___pages___nodes
  author___node___posts___nodes
  author___node___registeredDate
  author___node___roles___nodes
  author___node___slug
  author___node___uri
  author___node___url
  author___node___username
  author___node___nodeType
  author___node___parent___id
  author___node___parent___children
  author___node___children
  author___node___children___id
  author___node___children___children
  author___node___internal___content
  author___node___internal___contentDigest
  author___node___internal___description
  author___node___internal___fieldOwners
  author___node___internal___ignoreType
  author___node___internal___mediaType
  author___node___internal___owner
  author___node___internal___type
  authorDatabaseId
  authorId
  wpChildren___nodes
  wpChildren___nodes___databaseId
  wpChildren___nodes___date
  wpChildren___nodes___dateGmt
  wpChildren___nodes___desiredSlug
  wpChildren___nodes___enclosure
  wpChildren___nodes___guid
  wpChildren___nodes___id
  wpChildren___nodes___isContentNode
  wpChildren___nodes___isTermNode
  wpChildren___nodes___link
  wpChildren___nodes___modified
  wpChildren___nodes___modifiedGmt
  wpChildren___nodes___slug
  wpChildren___nodes___status
  wpChildren___nodes___template___templateName
  wpChildren___nodes___uri
  wpChildren___nodes___nodeType
  wpChildren___nodes___parent___id
  wpChildren___nodes___parent___children
  wpChildren___nodes___children
  wpChildren___nodes___children___id
  wpChildren___nodes___children___children
  wpChildren___nodes___internal___content
  wpChildren___nodes___internal___contentDigest
  wpChildren___nodes___internal___description
  wpChildren___nodes___internal___fieldOwners
  wpChildren___nodes___internal___ignoreType
  wpChildren___nodes___internal___mediaType
  wpChildren___nodes___internal___owner
  wpChildren___nodes___internal___type
  commentCount
  commentStatus
  comments___nodes
  comments___nodes___agent
  comments___nodes___approved
  comments___nodes___authorIp
  comments___nodes___content
  comments___nodes___databaseId
  comments___nodes___date
  comments___nodes___dateGmt
  comments___nodes___id
  comments___nodes___karma
  comments___nodes___parentDatabaseId
  comments___nodes___parentId
  comments___nodes___replies___nodes
  comments___nodes___type
  comments___nodes___nodeType
  comments___nodes___parent___id
  comments___nodes___parent___children
  comments___nodes___children
  comments___nodes___children___id
  comments___nodes___children___children
  comments___nodes___internal___content
  comments___nodes___internal___contentDigest
  comments___nodes___internal___description
  comments___nodes___internal___fieldOwners
  comments___nodes___internal___ignoreType
  comments___nodes___internal___mediaType
  comments___nodes___internal___owner
  comments___nodes___internal___type
  content
  contentType___node___archivePath
  contentType___node___canExport
  contentType___node___connectedTaxonomies___nodes
  contentType___node___contentNodes___nodes
  contentType___node___deleteWithUser
  contentType___node___description
  contentType___node___excludeFromSearch
  contentType___node___graphqlPluralName
  contentType___node___graphqlSingleName
  contentType___node___hasArchive
  contentType___node___hierarchical
  contentType___node___id
  contentType___node___isContentNode
  contentType___node___isFrontPage
  contentType___node___isPostsPage
  contentType___node___isTermNode
  contentType___node___label
  contentType___node___labels___addNew
  contentType___node___labels___addNewItem
  contentType___node___labels___allItems
  contentType___node___labels___archives
  contentType___node___labels___attributes
  contentType___node___labels___editItem
  contentType___node___labels___featuredImage
  contentType___node___labels___filterItemsList
  contentType___node___labels___insertIntoItem
  contentType___node___labels___itemsList
  contentType___node___labels___itemsListNavigation
  contentType___node___labels___menuName
  contentType___node___labels___name
  contentType___node___labels___newItem
  contentType___node___labels___notFound
  contentType___node___labels___notFoundInTrash
  contentType___node___labels___parentItemColon
  contentType___node___labels___removeFeaturedImage
  contentType___node___labels___searchItems
  contentType___node___labels___setFeaturedImage
  contentType___node___labels___singularName
  contentType___node___labels___uploadedToThisItem
  contentType___node___labels___useFeaturedImage
  contentType___node___labels___viewItem
  contentType___node___labels___viewItems
  contentType___node___menuIcon
  contentType___node___menuPosition
  contentType___node___name
  contentType___node___public
  contentType___node___publiclyQueryable
  contentType___node___restBase
  contentType___node___restControllerClass
  contentType___node___showInAdminBar
  contentType___node___showInGraphql
  contentType___node___showInMenu
  contentType___node___showInNavMenus
  contentType___node___showInRest
  contentType___node___showUi
  contentType___node___uri
  contentType___node___nodeType
  contentType___node___parent___id
  contentType___node___parent___children
  contentType___node___children
  contentType___node___children___id
  contentType___node___children___children
  contentType___node___internal___content
  contentType___node___internal___contentDigest
  contentType___node___internal___description
  contentType___node___internal___fieldOwners
  contentType___node___internal___ignoreType
  contentType___node___internal___mediaType
  contentType___node___internal___owner
  contentType___node___internal___type
  databaseId
  date
  dateGmt
  desiredSlug
  enclosure
  featuredImage___node___altText
  featuredImage___node___ancestors___nodes
  featuredImage___node___authorDatabaseId
  featuredImage___node___authorId
  featuredImage___node___caption
  featuredImage___node___wpChildren___nodes
  featuredImage___node___commentCount
  featuredImage___node___commentStatus
  featuredImage___node___comments___nodes
  featuredImage___node___databaseId
  featuredImage___node___date
  featuredImage___node___dateGmt
  featuredImage___node___description
  featuredImage___node___desiredSlug
  featuredImage___node___enclosure
  featuredImage___node___fileSize
  featuredImage___node___guid
  featuredImage___node___id
  featuredImage___node___isContentNode
  featuredImage___node___isTermNode
  featuredImage___node___link
  featuredImage___node___mediaDetails___file
  featuredImage___node___mediaDetails___height
  featuredImage___node___mediaDetails___sizes
  featuredImage___node___mediaDetails___width
  featuredImage___node___mediaItemUrl
  featuredImage___node___mediaType
  featuredImage___node___mimeType
  featuredImage___node___modified
  featuredImage___node___modifiedGmt
  featuredImage___node___parentDatabaseId
  featuredImage___node___parentId
  featuredImage___node___sizes
  featuredImage___node___slug
  featuredImage___node___sourceUrl
  featuredImage___node___srcSet
  featuredImage___node___status
  featuredImage___node___template___templateName
  featuredImage___node___title
  featuredImage___node___uri
  featuredImage___node___nodeType
  featuredImage___node___remoteFile___sourceInstanceName
  featuredImage___node___remoteFile___absolutePath
  featuredImage___node___remoteFile___relativePath
  featuredImage___node___remoteFile___extension
  featuredImage___node___remoteFile___size
  featuredImage___node___remoteFile___prettySize
  featuredImage___node___remoteFile___modifiedTime
  featuredImage___node___remoteFile___accessTime
  featuredImage___node___remoteFile___changeTime
  featuredImage___node___remoteFile___birthTime
  featuredImage___node___remoteFile___root
  featuredImage___node___remoteFile___dir
  featuredImage___node___remoteFile___base
  featuredImage___node___remoteFile___ext
  featuredImage___node___remoteFile___name
  featuredImage___node___remoteFile___relativeDirectory
  featuredImage___node___remoteFile___dev
  featuredImage___node___remoteFile___mode
  featuredImage___node___remoteFile___nlink
  featuredImage___node___remoteFile___uid
  featuredImage___node___remoteFile___gid
  featuredImage___node___remoteFile___rdev
  featuredImage___node___remoteFile___ino
  featuredImage___node___remoteFile___atimeMs
  featuredImage___node___remoteFile___mtimeMs
  featuredImage___node___remoteFile___ctimeMs
  featuredImage___node___remoteFile___atime
  featuredImage___node___remoteFile___mtime
  featuredImage___node___remoteFile___ctime
  featuredImage___node___remoteFile___birthtime
  featuredImage___node___remoteFile___birthtimeMs
  featuredImage___node___remoteFile___blksize
  featuredImage___node___remoteFile___blocks
  featuredImage___node___remoteFile___url
  featuredImage___node___remoteFile___childrenImageSharp
  featuredImage___node___remoteFile___id
  featuredImage___node___remoteFile___children
  featuredImage___node___localFile___sourceInstanceName
  featuredImage___node___localFile___absolutePath
  featuredImage___node___localFile___relativePath
  featuredImage___node___localFile___extension
  featuredImage___node___localFile___size
  featuredImage___node___localFile___prettySize
  featuredImage___node___localFile___modifiedTime
  featuredImage___node___localFile___accessTime
  featuredImage___node___localFile___changeTime
  featuredImage___node___localFile___birthTime
  featuredImage___node___localFile___root
  featuredImage___node___localFile___dir
  featuredImage___node___localFile___base
  featuredImage___node___localFile___ext
  featuredImage___node___localFile___name
  featuredImage___node___localFile___relativeDirectory
  featuredImage___node___localFile___dev
  featuredImage___node___localFile___mode
  featuredImage___node___localFile___nlink
  featuredImage___node___localFile___uid
  featuredImage___node___localFile___gid
  featuredImage___node___localFile___rdev
  featuredImage___node___localFile___ino
  featuredImage___node___localFile___atimeMs
  featuredImage___node___localFile___mtimeMs
  featuredImage___node___localFile___ctimeMs
  featuredImage___node___localFile___atime
  featuredImage___node___localFile___mtime
  featuredImage___node___localFile___ctime
  featuredImage___node___localFile___birthtime
  featuredImage___node___localFile___birthtimeMs
  featuredImage___node___localFile___blksize
  featuredImage___node___localFile___blocks
  featuredImage___node___localFile___url
  featuredImage___node___localFile___childrenImageSharp
  featuredImage___node___localFile___id
  featuredImage___node___localFile___children
  featuredImage___node___parent___id
  featuredImage___node___parent___children
  featuredImage___node___children
  featuredImage___node___children___id
  featuredImage___node___children___children
  featuredImage___node___internal___content
  featuredImage___node___internal___contentDigest
  featuredImage___node___internal___description
  featuredImage___node___internal___fieldOwners
  featuredImage___node___internal___ignoreType
  featuredImage___node___internal___mediaType
  featuredImage___node___internal___owner
  featuredImage___node___internal___type
  featuredImageDatabaseId
  featuredImageId
  guid
  id
  isContentNode
  isFrontPage
  isPostsPage
  isPrivacyPage
  isRevision
  isTermNode
  lastEditedBy___node___avatar___default
  lastEditedBy___node___avatar___extraAttr
  lastEditedBy___node___avatar___forceDefault
  lastEditedBy___node___avatar___foundAvatar
  lastEditedBy___node___avatar___height
  lastEditedBy___node___avatar___rating
  lastEditedBy___node___avatar___scheme
  lastEditedBy___node___avatar___size
  lastEditedBy___node___avatar___url
  lastEditedBy___node___avatar___width
  lastEditedBy___node___capKey
  lastEditedBy___node___capabilities
  lastEditedBy___node___comments___nodes
  lastEditedBy___node___databaseId
  lastEditedBy___node___description
  lastEditedBy___node___email
  lastEditedBy___node___extraCapabilities
  lastEditedBy___node___firstName
  lastEditedBy___node___id
  lastEditedBy___node___isContentNode
  lastEditedBy___node___isTermNode
  lastEditedBy___node___lastName
  lastEditedBy___node___locale
  lastEditedBy___node___name
  lastEditedBy___node___nicename
  lastEditedBy___node___nickname
  lastEditedBy___node___pages___nodes
  lastEditedBy___node___posts___nodes
  lastEditedBy___node___registeredDate
  lastEditedBy___node___roles___nodes
  lastEditedBy___node___slug
  lastEditedBy___node___uri
  lastEditedBy___node___url
  lastEditedBy___node___username
  lastEditedBy___node___nodeType
  lastEditedBy___node___parent___id
  lastEditedBy___node___parent___children
  lastEditedBy___node___children
  lastEditedBy___node___children___id
  lastEditedBy___node___children___children
  lastEditedBy___node___internal___content
  lastEditedBy___node___internal___contentDigest
  lastEditedBy___node___internal___description
  lastEditedBy___node___internal___fieldOwners
  lastEditedBy___node___internal___ignoreType
  lastEditedBy___node___internal___mediaType
  lastEditedBy___node___internal___owner
  lastEditedBy___node___internal___type
  link
  menuOrder
  modified
  modifiedGmt
  wpParent___node___databaseId
  wpParent___node___date
  wpParent___node___dateGmt
  wpParent___node___desiredSlug
  wpParent___node___enclosure
  wpParent___node___guid
  wpParent___node___id
  wpParent___node___isContentNode
  wpParent___node___isTermNode
  wpParent___node___link
  wpParent___node___modified
  wpParent___node___modifiedGmt
  wpParent___node___slug
  wpParent___node___status
  wpParent___node___template___templateName
  wpParent___node___uri
  wpParent___node___nodeType
  wpParent___node___parent___id
  wpParent___node___parent___children
  wpParent___node___children
  wpParent___node___children___id
  wpParent___node___children___children
  wpParent___node___internal___content
  wpParent___node___internal___contentDigest
  wpParent___node___internal___description
  wpParent___node___internal___fieldOwners
  wpParent___node___internal___ignoreType
  wpParent___node___internal___mediaType
  wpParent___node___internal___owner
  wpParent___node___internal___type
  parentDatabaseId
  parentId
  slug
  status
  template___templateName
  title
  uri
  nodeType
  parent___id
  parent___parent___id
  parent___parent___parent___id
  parent___parent___parent___children
  parent___parent___children
  parent___parent___children___id
  parent___parent___children___children
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___children
  parent___children___id
  parent___children___parent___id
  parent___children___parent___children
  parent___children___children
  parent___children___children___id
  parent___children___children___children
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  children
  children___id
  children___parent___id
  children___parent___parent___id
  children___parent___parent___children
  children___parent___children
  children___parent___children___id
  children___parent___children___children
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___children
  children___children___id
  children___children___parent___id
  children___children___parent___children
  children___children___children
  children___children___children___id
  children___children___children___children
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
}

type WpPageGroupConnection {
  totalCount: Int!
  edges: [WpPageEdge!]!
  nodes: [WpPage!]!
  pageInfo: PageInfo!
  field: String!
  fieldValue: String
}

input WpPageSortInput {
  fields: [WpPageFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

type WpPostConnection {
  totalCount: Int!
  edges: [WpPostEdge!]!
  nodes: [WpPost!]!
  pageInfo: PageInfo!
  distinct(field: WpPostFieldsEnum!): [String!]!
  max(field: WpPostFieldsEnum!): Float
  min(field: WpPostFieldsEnum!): Float
  sum(field: WpPostFieldsEnum!): Float
  group(skip: Int, limit: Int, field: WpPostFieldsEnum!): [WpPostGroupConnection!]!
}

type WpPostEdge {
  next: WpPost
  node: WpPost!
  previous: WpPost
}

enum WpPostFieldsEnum {
  author___node___avatar___default
  author___node___avatar___extraAttr
  author___node___avatar___forceDefault
  author___node___avatar___foundAvatar
  author___node___avatar___height
  author___node___avatar___rating
  author___node___avatar___scheme
  author___node___avatar___size
  author___node___avatar___url
  author___node___avatar___width
  author___node___capKey
  author___node___capabilities
  author___node___comments___nodes
  author___node___databaseId
  author___node___description
  author___node___email
  author___node___extraCapabilities
  author___node___firstName
  author___node___id
  author___node___isContentNode
  author___node___isTermNode
  author___node___lastName
  author___node___locale
  author___node___name
  author___node___nicename
  author___node___nickname
  author___node___pages___nodes
  author___node___posts___nodes
  author___node___registeredDate
  author___node___roles___nodes
  author___node___slug
  author___node___uri
  author___node___url
  author___node___username
  author___node___nodeType
  author___node___parent___id
  author___node___parent___children
  author___node___children
  author___node___children___id
  author___node___children___children
  author___node___internal___content
  author___node___internal___contentDigest
  author___node___internal___description
  author___node___internal___fieldOwners
  author___node___internal___ignoreType
  author___node___internal___mediaType
  author___node___internal___owner
  author___node___internal___type
  authorDatabaseId
  authorId
  categories___nodes
  categories___nodes___ancestors___nodes
  categories___nodes___wpChildren___nodes
  categories___nodes___contentNodes___nodes
  categories___nodes___count
  categories___nodes___databaseId
  categories___nodes___description
  categories___nodes___id
  categories___nodes___isContentNode
  categories___nodes___isTermNode
  categories___nodes___link
  categories___nodes___name
  categories___nodes___parentDatabaseId
  categories___nodes___parentId
  categories___nodes___posts___nodes
  categories___nodes___slug
  categories___nodes___termGroupId
  categories___nodes___termTaxonomyId
  categories___nodes___uri
  categories___nodes___nodeType
  categories___nodes___parent___id
  categories___nodes___parent___children
  categories___nodes___children
  categories___nodes___children___id
  categories___nodes___children___children
  categories___nodes___internal___content
  categories___nodes___internal___contentDigest
  categories___nodes___internal___description
  categories___nodes___internal___fieldOwners
  categories___nodes___internal___ignoreType
  categories___nodes___internal___mediaType
  categories___nodes___internal___owner
  categories___nodes___internal___type
  commentCount
  commentStatus
  comments___nodes
  comments___nodes___agent
  comments___nodes___approved
  comments___nodes___authorIp
  comments___nodes___content
  comments___nodes___databaseId
  comments___nodes___date
  comments___nodes___dateGmt
  comments___nodes___id
  comments___nodes___karma
  comments___nodes___parentDatabaseId
  comments___nodes___parentId
  comments___nodes___replies___nodes
  comments___nodes___type
  comments___nodes___nodeType
  comments___nodes___parent___id
  comments___nodes___parent___children
  comments___nodes___children
  comments___nodes___children___id
  comments___nodes___children___children
  comments___nodes___internal___content
  comments___nodes___internal___contentDigest
  comments___nodes___internal___description
  comments___nodes___internal___fieldOwners
  comments___nodes___internal___ignoreType
  comments___nodes___internal___mediaType
  comments___nodes___internal___owner
  comments___nodes___internal___type
  content
  contentType___node___archivePath
  contentType___node___canExport
  contentType___node___connectedTaxonomies___nodes
  contentType___node___contentNodes___nodes
  contentType___node___deleteWithUser
  contentType___node___description
  contentType___node___excludeFromSearch
  contentType___node___graphqlPluralName
  contentType___node___graphqlSingleName
  contentType___node___hasArchive
  contentType___node___hierarchical
  contentType___node___id
  contentType___node___isContentNode
  contentType___node___isFrontPage
  contentType___node___isPostsPage
  contentType___node___isTermNode
  contentType___node___label
  contentType___node___labels___addNew
  contentType___node___labels___addNewItem
  contentType___node___labels___allItems
  contentType___node___labels___archives
  contentType___node___labels___attributes
  contentType___node___labels___editItem
  contentType___node___labels___featuredImage
  contentType___node___labels___filterItemsList
  contentType___node___labels___insertIntoItem
  contentType___node___labels___itemsList
  contentType___node___labels___itemsListNavigation
  contentType___node___labels___menuName
  contentType___node___labels___name
  contentType___node___labels___newItem
  contentType___node___labels___notFound
  contentType___node___labels___notFoundInTrash
  contentType___node___labels___parentItemColon
  contentType___node___labels___removeFeaturedImage
  contentType___node___labels___searchItems
  contentType___node___labels___setFeaturedImage
  contentType___node___labels___singularName
  contentType___node___labels___uploadedToThisItem
  contentType___node___labels___useFeaturedImage
  contentType___node___labels___viewItem
  contentType___node___labels___viewItems
  contentType___node___menuIcon
  contentType___node___menuPosition
  contentType___node___name
  contentType___node___public
  contentType___node___publiclyQueryable
  contentType___node___restBase
  contentType___node___restControllerClass
  contentType___node___showInAdminBar
  contentType___node___showInGraphql
  contentType___node___showInMenu
  contentType___node___showInNavMenus
  contentType___node___showInRest
  contentType___node___showUi
  contentType___node___uri
  contentType___node___nodeType
  contentType___node___parent___id
  contentType___node___parent___children
  contentType___node___children
  contentType___node___children___id
  contentType___node___children___children
  contentType___node___internal___content
  contentType___node___internal___contentDigest
  contentType___node___internal___description
  contentType___node___internal___fieldOwners
  contentType___node___internal___ignoreType
  contentType___node___internal___mediaType
  contentType___node___internal___owner
  contentType___node___internal___type
  databaseId
  date
  dateGmt
  desiredSlug
  enclosure
  excerpt
  featuredImage___node___altText
  featuredImage___node___ancestors___nodes
  featuredImage___node___authorDatabaseId
  featuredImage___node___authorId
  featuredImage___node___caption
  featuredImage___node___wpChildren___nodes
  featuredImage___node___commentCount
  featuredImage___node___commentStatus
  featuredImage___node___comments___nodes
  featuredImage___node___databaseId
  featuredImage___node___date
  featuredImage___node___dateGmt
  featuredImage___node___description
  featuredImage___node___desiredSlug
  featuredImage___node___enclosure
  featuredImage___node___fileSize
  featuredImage___node___guid
  featuredImage___node___id
  featuredImage___node___isContentNode
  featuredImage___node___isTermNode
  featuredImage___node___link
  featuredImage___node___mediaDetails___file
  featuredImage___node___mediaDetails___height
  featuredImage___node___mediaDetails___sizes
  featuredImage___node___mediaDetails___width
  featuredImage___node___mediaItemUrl
  featuredImage___node___mediaType
  featuredImage___node___mimeType
  featuredImage___node___modified
  featuredImage___node___modifiedGmt
  featuredImage___node___parentDatabaseId
  featuredImage___node___parentId
  featuredImage___node___sizes
  featuredImage___node___slug
  featuredImage___node___sourceUrl
  featuredImage___node___srcSet
  featuredImage___node___status
  featuredImage___node___template___templateName
  featuredImage___node___title
  featuredImage___node___uri
  featuredImage___node___nodeType
  featuredImage___node___remoteFile___sourceInstanceName
  featuredImage___node___remoteFile___absolutePath
  featuredImage___node___remoteFile___relativePath
  featuredImage___node___remoteFile___extension
  featuredImage___node___remoteFile___size
  featuredImage___node___remoteFile___prettySize
  featuredImage___node___remoteFile___modifiedTime
  featuredImage___node___remoteFile___accessTime
  featuredImage___node___remoteFile___changeTime
  featuredImage___node___remoteFile___birthTime
  featuredImage___node___remoteFile___root
  featuredImage___node___remoteFile___dir
  featuredImage___node___remoteFile___base
  featuredImage___node___remoteFile___ext
  featuredImage___node___remoteFile___name
  featuredImage___node___remoteFile___relativeDirectory
  featuredImage___node___remoteFile___dev
  featuredImage___node___remoteFile___mode
  featuredImage___node___remoteFile___nlink
  featuredImage___node___remoteFile___uid
  featuredImage___node___remoteFile___gid
  featuredImage___node___remoteFile___rdev
  featuredImage___node___remoteFile___ino
  featuredImage___node___remoteFile___atimeMs
  featuredImage___node___remoteFile___mtimeMs
  featuredImage___node___remoteFile___ctimeMs
  featuredImage___node___remoteFile___atime
  featuredImage___node___remoteFile___mtime
  featuredImage___node___remoteFile___ctime
  featuredImage___node___remoteFile___birthtime
  featuredImage___node___remoteFile___birthtimeMs
  featuredImage___node___remoteFile___blksize
  featuredImage___node___remoteFile___blocks
  featuredImage___node___remoteFile___url
  featuredImage___node___remoteFile___childrenImageSharp
  featuredImage___node___remoteFile___id
  featuredImage___node___remoteFile___children
  featuredImage___node___localFile___sourceInstanceName
  featuredImage___node___localFile___absolutePath
  featuredImage___node___localFile___relativePath
  featuredImage___node___localFile___extension
  featuredImage___node___localFile___size
  featuredImage___node___localFile___prettySize
  featuredImage___node___localFile___modifiedTime
  featuredImage___node___localFile___accessTime
  featuredImage___node___localFile___changeTime
  featuredImage___node___localFile___birthTime
  featuredImage___node___localFile___root
  featuredImage___node___localFile___dir
  featuredImage___node___localFile___base
  featuredImage___node___localFile___ext
  featuredImage___node___localFile___name
  featuredImage___node___localFile___relativeDirectory
  featuredImage___node___localFile___dev
  featuredImage___node___localFile___mode
  featuredImage___node___localFile___nlink
  featuredImage___node___localFile___uid
  featuredImage___node___localFile___gid
  featuredImage___node___localFile___rdev
  featuredImage___node___localFile___ino
  featuredImage___node___localFile___atimeMs
  featuredImage___node___localFile___mtimeMs
  featuredImage___node___localFile___ctimeMs
  featuredImage___node___localFile___atime
  featuredImage___node___localFile___mtime
  featuredImage___node___localFile___ctime
  featuredImage___node___localFile___birthtime
  featuredImage___node___localFile___birthtimeMs
  featuredImage___node___localFile___blksize
  featuredImage___node___localFile___blocks
  featuredImage___node___localFile___url
  featuredImage___node___localFile___childrenImageSharp
  featuredImage___node___localFile___id
  featuredImage___node___localFile___children
  featuredImage___node___parent___id
  featuredImage___node___parent___children
  featuredImage___node___children
  featuredImage___node___children___id
  featuredImage___node___children___children
  featuredImage___node___internal___content
  featuredImage___node___internal___contentDigest
  featuredImage___node___internal___description
  featuredImage___node___internal___fieldOwners
  featuredImage___node___internal___ignoreType
  featuredImage___node___internal___mediaType
  featuredImage___node___internal___owner
  featuredImage___node___internal___type
  featuredImageDatabaseId
  featuredImageId
  guid
  id
  isContentNode
  isRevision
  isSticky
  isTermNode
  lastEditedBy___node___avatar___default
  lastEditedBy___node___avatar___extraAttr
  lastEditedBy___node___avatar___forceDefault
  lastEditedBy___node___avatar___foundAvatar
  lastEditedBy___node___avatar___height
  lastEditedBy___node___avatar___rating
  lastEditedBy___node___avatar___scheme
  lastEditedBy___node___avatar___size
  lastEditedBy___node___avatar___url
  lastEditedBy___node___avatar___width
  lastEditedBy___node___capKey
  lastEditedBy___node___capabilities
  lastEditedBy___node___comments___nodes
  lastEditedBy___node___databaseId
  lastEditedBy___node___description
  lastEditedBy___node___email
  lastEditedBy___node___extraCapabilities
  lastEditedBy___node___firstName
  lastEditedBy___node___id
  lastEditedBy___node___isContentNode
  lastEditedBy___node___isTermNode
  lastEditedBy___node___lastName
  lastEditedBy___node___locale
  lastEditedBy___node___name
  lastEditedBy___node___nicename
  lastEditedBy___node___nickname
  lastEditedBy___node___pages___nodes
  lastEditedBy___node___posts___nodes
  lastEditedBy___node___registeredDate
  lastEditedBy___node___roles___nodes
  lastEditedBy___node___slug
  lastEditedBy___node___uri
  lastEditedBy___node___url
  lastEditedBy___node___username
  lastEditedBy___node___nodeType
  lastEditedBy___node___parent___id
  lastEditedBy___node___parent___children
  lastEditedBy___node___children
  lastEditedBy___node___children___id
  lastEditedBy___node___children___children
  lastEditedBy___node___internal___content
  lastEditedBy___node___internal___contentDigest
  lastEditedBy___node___internal___description
  lastEditedBy___node___internal___fieldOwners
  lastEditedBy___node___internal___ignoreType
  lastEditedBy___node___internal___mediaType
  lastEditedBy___node___internal___owner
  lastEditedBy___node___internal___type
  link
  modified
  modifiedGmt
  pingStatus
  pinged
  postFormats___nodes
  postFormats___nodes___contentNodes___nodes
  postFormats___nodes___count
  postFormats___nodes___databaseId
  postFormats___nodes___description
  postFormats___nodes___id
  postFormats___nodes___isContentNode
  postFormats___nodes___isTermNode
  postFormats___nodes___link
  postFormats___nodes___name
  postFormats___nodes___posts___nodes
  postFormats___nodes___slug
  postFormats___nodes___termGroupId
  postFormats___nodes___termTaxonomyId
  postFormats___nodes___uri
  postFormats___nodes___nodeType
  postFormats___nodes___parent___id
  postFormats___nodes___parent___children
  postFormats___nodes___children
  postFormats___nodes___children___id
  postFormats___nodes___children___children
  postFormats___nodes___internal___content
  postFormats___nodes___internal___contentDigest
  postFormats___nodes___internal___description
  postFormats___nodes___internal___fieldOwners
  postFormats___nodes___internal___ignoreType
  postFormats___nodes___internal___mediaType
  postFormats___nodes___internal___owner
  postFormats___nodes___internal___type
  slug
  status
  tags___nodes
  tags___nodes___contentNodes___nodes
  tags___nodes___count
  tags___nodes___databaseId
  tags___nodes___description
  tags___nodes___id
  tags___nodes___isContentNode
  tags___nodes___isTermNode
  tags___nodes___link
  tags___nodes___name
  tags___nodes___posts___nodes
  tags___nodes___slug
  tags___nodes___termGroupId
  tags___nodes___termTaxonomyId
  tags___nodes___uri
  tags___nodes___nodeType
  tags___nodes___parent___id
  tags___nodes___parent___children
  tags___nodes___children
  tags___nodes___children___id
  tags___nodes___children___children
  tags___nodes___internal___content
  tags___nodes___internal___contentDigest
  tags___nodes___internal___description
  tags___nodes___internal___fieldOwners
  tags___nodes___internal___ignoreType
  tags___nodes___internal___mediaType
  tags___nodes___internal___owner
  tags___nodes___internal___type
  template___templateName
  terms___nodes
  terms___nodes___count
  terms___nodes___databaseId
  terms___nodes___description
  terms___nodes___id
  terms___nodes___isContentNode
  terms___nodes___isTermNode
  terms___nodes___link
  terms___nodes___name
  terms___nodes___slug
  terms___nodes___termGroupId
  terms___nodes___termTaxonomyId
  terms___nodes___uri
  terms___nodes___nodeType
  terms___nodes___parent___id
  terms___nodes___parent___children
  terms___nodes___children
  terms___nodes___children___id
  terms___nodes___children___children
  terms___nodes___internal___content
  terms___nodes___internal___contentDigest
  terms___nodes___internal___description
  terms___nodes___internal___fieldOwners
  terms___nodes___internal___ignoreType
  terms___nodes___internal___mediaType
  terms___nodes___internal___owner
  terms___nodes___internal___type
  title
  toPing
  uri
  nodeType
  parent___id
  parent___parent___id
  parent___parent___parent___id
  parent___parent___parent___children
  parent___parent___children
  parent___parent___children___id
  parent___parent___children___children
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___children
  parent___children___id
  parent___children___parent___id
  parent___children___parent___children
  parent___children___children
  parent___children___children___id
  parent___children___children___children
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  children
  children___id
  children___parent___id
  children___parent___parent___id
  children___parent___parent___children
  children___parent___children
  children___parent___children___id
  children___parent___children___children
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___children
  children___children___id
  children___children___parent___id
  children___children___parent___children
  children___children___children
  children___children___children___id
  children___children___children___children
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
}

type WpPostGroupConnection {
  totalCount: Int!
  edges: [WpPostEdge!]!
  nodes: [WpPost!]!
  pageInfo: PageInfo!
  field: String!
  fieldValue: String
}

input WpPostSortInput {
  fields: [WpPostFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

type WpTermNodeConnection {
  totalCount: Int!
  edges: [WpTermNodeEdge!]!
  nodes: [WpTermNode!]!
  pageInfo: PageInfo!
  distinct(field: WpTermNodeFieldsEnum!): [String!]!
  max(field: WpTermNodeFieldsEnum!): Float
  min(field: WpTermNodeFieldsEnum!): Float
  sum(field: WpTermNodeFieldsEnum!): Float
  group(skip: Int, limit: Int, field: WpTermNodeFieldsEnum!): [WpTermNodeGroupConnection!]!
}

type WpTermNodeEdge {
  next: WpTermNode
  node: WpTermNode!
  previous: WpTermNode
}

enum WpTermNodeFieldsEnum {
  count
  databaseId
  description
  id
  isContentNode
  isTermNode
  link
  name
  slug
  termGroupId
  termTaxonomyId
  uri
  nodeType
  parent___id
  parent___parent___id
  parent___parent___parent___id
  parent___parent___parent___children
  parent___parent___children
  parent___parent___children___id
  parent___parent___children___children
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___children
  parent___children___id
  parent___children___parent___id
  parent___children___parent___children
  parent___children___children
  parent___children___children___id
  parent___children___children___children
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  children
  children___id
  children___parent___id
  children___parent___parent___id
  children___parent___parent___children
  children___parent___children
  children___parent___children___id
  children___parent___children___children
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___children
  children___children___id
  children___children___parent___id
  children___children___parent___children
  children___children___children
  children___children___children___id
  children___children___children___children
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
}

type WpTermNodeGroupConnection {
  totalCount: Int!
  edges: [WpTermNodeEdge!]!
  nodes: [WpTermNode!]!
  pageInfo: PageInfo!
  field: String!
  fieldValue: String
}

input WpTermNodeSortInput {
  fields: [WpTermNodeFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

type WpCategoryConnection {
  totalCount: Int!
  edges: [WpCategoryEdge!]!
  nodes: [WpCategory!]!
  pageInfo: PageInfo!
  distinct(field: WpCategoryFieldsEnum!): [String!]!
  max(field: WpCategoryFieldsEnum!): Float
  min(field: WpCategoryFieldsEnum!): Float
  sum(field: WpCategoryFieldsEnum!): Float
  group(skip: Int, limit: Int, field: WpCategoryFieldsEnum!): [WpCategoryGroupConnection!]!
}

type WpCategoryEdge {
  next: WpCategory
  node: WpCategory!
  previous: WpCategory
}

enum WpCategoryFieldsEnum {
  ancestors___nodes
  ancestors___nodes___ancestors___nodes
  ancestors___nodes___wpChildren___nodes
  ancestors___nodes___contentNodes___nodes
  ancestors___nodes___count
  ancestors___nodes___databaseId
  ancestors___nodes___description
  ancestors___nodes___id
  ancestors___nodes___isContentNode
  ancestors___nodes___isTermNode
  ancestors___nodes___link
  ancestors___nodes___name
  ancestors___nodes___parentDatabaseId
  ancestors___nodes___parentId
  ancestors___nodes___posts___nodes
  ancestors___nodes___slug
  ancestors___nodes___termGroupId
  ancestors___nodes___termTaxonomyId
  ancestors___nodes___uri
  ancestors___nodes___nodeType
  ancestors___nodes___parent___id
  ancestors___nodes___parent___children
  ancestors___nodes___children
  ancestors___nodes___children___id
  ancestors___nodes___children___children
  ancestors___nodes___internal___content
  ancestors___nodes___internal___contentDigest
  ancestors___nodes___internal___description
  ancestors___nodes___internal___fieldOwners
  ancestors___nodes___internal___ignoreType
  ancestors___nodes___internal___mediaType
  ancestors___nodes___internal___owner
  ancestors___nodes___internal___type
  wpChildren___nodes
  wpChildren___nodes___ancestors___nodes
  wpChildren___nodes___wpChildren___nodes
  wpChildren___nodes___contentNodes___nodes
  wpChildren___nodes___count
  wpChildren___nodes___databaseId
  wpChildren___nodes___description
  wpChildren___nodes___id
  wpChildren___nodes___isContentNode
  wpChildren___nodes___isTermNode
  wpChildren___nodes___link
  wpChildren___nodes___name
  wpChildren___nodes___parentDatabaseId
  wpChildren___nodes___parentId
  wpChildren___nodes___posts___nodes
  wpChildren___nodes___slug
  wpChildren___nodes___termGroupId
  wpChildren___nodes___termTaxonomyId
  wpChildren___nodes___uri
  wpChildren___nodes___nodeType
  wpChildren___nodes___parent___id
  wpChildren___nodes___parent___children
  wpChildren___nodes___children
  wpChildren___nodes___children___id
  wpChildren___nodes___children___children
  wpChildren___nodes___internal___content
  wpChildren___nodes___internal___contentDigest
  wpChildren___nodes___internal___description
  wpChildren___nodes___internal___fieldOwners
  wpChildren___nodes___internal___ignoreType
  wpChildren___nodes___internal___mediaType
  wpChildren___nodes___internal___owner
  wpChildren___nodes___internal___type
  contentNodes___nodes
  contentNodes___nodes___databaseId
  contentNodes___nodes___date
  contentNodes___nodes___dateGmt
  contentNodes___nodes___desiredSlug
  contentNodes___nodes___enclosure
  contentNodes___nodes___guid
  contentNodes___nodes___id
  contentNodes___nodes___isContentNode
  contentNodes___nodes___isTermNode
  contentNodes___nodes___link
  contentNodes___nodes___modified
  contentNodes___nodes___modifiedGmt
  contentNodes___nodes___slug
  contentNodes___nodes___status
  contentNodes___nodes___template___templateName
  contentNodes___nodes___uri
  contentNodes___nodes___nodeType
  contentNodes___nodes___parent___id
  contentNodes___nodes___parent___children
  contentNodes___nodes___children
  contentNodes___nodes___children___id
  contentNodes___nodes___children___children
  contentNodes___nodes___internal___content
  contentNodes___nodes___internal___contentDigest
  contentNodes___nodes___internal___description
  contentNodes___nodes___internal___fieldOwners
  contentNodes___nodes___internal___ignoreType
  contentNodes___nodes___internal___mediaType
  contentNodes___nodes___internal___owner
  contentNodes___nodes___internal___type
  count
  databaseId
  description
  id
  isContentNode
  isTermNode
  link
  name
  wpParent___node___ancestors___nodes
  wpParent___node___wpChildren___nodes
  wpParent___node___contentNodes___nodes
  wpParent___node___count
  wpParent___node___databaseId
  wpParent___node___description
  wpParent___node___id
  wpParent___node___isContentNode
  wpParent___node___isTermNode
  wpParent___node___link
  wpParent___node___name
  wpParent___node___parentDatabaseId
  wpParent___node___parentId
  wpParent___node___posts___nodes
  wpParent___node___slug
  wpParent___node___termGroupId
  wpParent___node___termTaxonomyId
  wpParent___node___uri
  wpParent___node___nodeType
  wpParent___node___parent___id
  wpParent___node___parent___children
  wpParent___node___children
  wpParent___node___children___id
  wpParent___node___children___children
  wpParent___node___internal___content
  wpParent___node___internal___contentDigest
  wpParent___node___internal___description
  wpParent___node___internal___fieldOwners
  wpParent___node___internal___ignoreType
  wpParent___node___internal___mediaType
  wpParent___node___internal___owner
  wpParent___node___internal___type
  parentDatabaseId
  parentId
  posts___nodes
  posts___nodes___authorDatabaseId
  posts___nodes___authorId
  posts___nodes___categories___nodes
  posts___nodes___commentCount
  posts___nodes___commentStatus
  posts___nodes___comments___nodes
  posts___nodes___content
  posts___nodes___databaseId
  posts___nodes___date
  posts___nodes___dateGmt
  posts___nodes___desiredSlug
  posts___nodes___enclosure
  posts___nodes___excerpt
  posts___nodes___featuredImageDatabaseId
  posts___nodes___featuredImageId
  posts___nodes___guid
  posts___nodes___id
  posts___nodes___isContentNode
  posts___nodes___isRevision
  posts___nodes___isSticky
  posts___nodes___isTermNode
  posts___nodes___link
  posts___nodes___modified
  posts___nodes___modifiedGmt
  posts___nodes___pingStatus
  posts___nodes___pinged
  posts___nodes___postFormats___nodes
  posts___nodes___slug
  posts___nodes___status
  posts___nodes___tags___nodes
  posts___nodes___template___templateName
  posts___nodes___terms___nodes
  posts___nodes___title
  posts___nodes___toPing
  posts___nodes___uri
  posts___nodes___nodeType
  posts___nodes___parent___id
  posts___nodes___parent___children
  posts___nodes___children
  posts___nodes___children___id
  posts___nodes___children___children
  posts___nodes___internal___content
  posts___nodes___internal___contentDigest
  posts___nodes___internal___description
  posts___nodes___internal___fieldOwners
  posts___nodes___internal___ignoreType
  posts___nodes___internal___mediaType
  posts___nodes___internal___owner
  posts___nodes___internal___type
  slug
  taxonomy___node___archivePath
  taxonomy___node___connectedContentTypes___nodes
  taxonomy___node___description
  taxonomy___node___graphqlPluralName
  taxonomy___node___graphqlSingleName
  taxonomy___node___hierarchical
  taxonomy___node___id
  taxonomy___node___label
  taxonomy___node___name
  taxonomy___node___public
  taxonomy___node___restBase
  taxonomy___node___restControllerClass
  taxonomy___node___showCloud
  taxonomy___node___showInAdminColumn
  taxonomy___node___showInGraphql
  taxonomy___node___showInMenu
  taxonomy___node___showInNavMenus
  taxonomy___node___showInQuickEdit
  taxonomy___node___showInRest
  taxonomy___node___showUi
  taxonomy___node___nodeType
  taxonomy___node___parent___id
  taxonomy___node___parent___children
  taxonomy___node___children
  taxonomy___node___children___id
  taxonomy___node___children___children
  taxonomy___node___internal___content
  taxonomy___node___internal___contentDigest
  taxonomy___node___internal___description
  taxonomy___node___internal___fieldOwners
  taxonomy___node___internal___ignoreType
  taxonomy___node___internal___mediaType
  taxonomy___node___internal___owner
  taxonomy___node___internal___type
  termGroupId
  termTaxonomyId
  uri
  nodeType
  parent___id
  parent___parent___id
  parent___parent___parent___id
  parent___parent___parent___children
  parent___parent___children
  parent___parent___children___id
  parent___parent___children___children
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___children
  parent___children___id
  parent___children___parent___id
  parent___children___parent___children
  parent___children___children
  parent___children___children___id
  parent___children___children___children
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  children
  children___id
  children___parent___id
  children___parent___parent___id
  children___parent___parent___children
  children___parent___children
  children___parent___children___id
  children___parent___children___children
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___children
  children___children___id
  children___children___parent___id
  children___children___parent___children
  children___children___children
  children___children___children___id
  children___children___children___children
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
}

type WpCategoryGroupConnection {
  totalCount: Int!
  edges: [WpCategoryEdge!]!
  nodes: [WpCategory!]!
  pageInfo: PageInfo!
  field: String!
  fieldValue: String
}

input WpCategorySortInput {
  fields: [WpCategoryFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

type WpPostFormatConnection {
  totalCount: Int!
  edges: [WpPostFormatEdge!]!
  nodes: [WpPostFormat!]!
  pageInfo: PageInfo!
  distinct(field: WpPostFormatFieldsEnum!): [String!]!
  max(field: WpPostFormatFieldsEnum!): Float
  min(field: WpPostFormatFieldsEnum!): Float
  sum(field: WpPostFormatFieldsEnum!): Float
  group(skip: Int, limit: Int, field: WpPostFormatFieldsEnum!): [WpPostFormatGroupConnection!]!
}

type WpPostFormatEdge {
  next: WpPostFormat
  node: WpPostFormat!
  previous: WpPostFormat
}

enum WpPostFormatFieldsEnum {
  contentNodes___nodes
  contentNodes___nodes___databaseId
  contentNodes___nodes___date
  contentNodes___nodes___dateGmt
  contentNodes___nodes___desiredSlug
  contentNodes___nodes___enclosure
  contentNodes___nodes___guid
  contentNodes___nodes___id
  contentNodes___nodes___isContentNode
  contentNodes___nodes___isTermNode
  contentNodes___nodes___link
  contentNodes___nodes___modified
  contentNodes___nodes___modifiedGmt
  contentNodes___nodes___slug
  contentNodes___nodes___status
  contentNodes___nodes___template___templateName
  contentNodes___nodes___uri
  contentNodes___nodes___nodeType
  contentNodes___nodes___parent___id
  contentNodes___nodes___parent___children
  contentNodes___nodes___children
  contentNodes___nodes___children___id
  contentNodes___nodes___children___children
  contentNodes___nodes___internal___content
  contentNodes___nodes___internal___contentDigest
  contentNodes___nodes___internal___description
  contentNodes___nodes___internal___fieldOwners
  contentNodes___nodes___internal___ignoreType
  contentNodes___nodes___internal___mediaType
  contentNodes___nodes___internal___owner
  contentNodes___nodes___internal___type
  count
  databaseId
  description
  id
  isContentNode
  isTermNode
  link
  name
  posts___nodes
  posts___nodes___authorDatabaseId
  posts___nodes___authorId
  posts___nodes___categories___nodes
  posts___nodes___commentCount
  posts___nodes___commentStatus
  posts___nodes___comments___nodes
  posts___nodes___content
  posts___nodes___databaseId
  posts___nodes___date
  posts___nodes___dateGmt
  posts___nodes___desiredSlug
  posts___nodes___enclosure
  posts___nodes___excerpt
  posts___nodes___featuredImageDatabaseId
  posts___nodes___featuredImageId
  posts___nodes___guid
  posts___nodes___id
  posts___nodes___isContentNode
  posts___nodes___isRevision
  posts___nodes___isSticky
  posts___nodes___isTermNode
  posts___nodes___link
  posts___nodes___modified
  posts___nodes___modifiedGmt
  posts___nodes___pingStatus
  posts___nodes___pinged
  posts___nodes___postFormats___nodes
  posts___nodes___slug
  posts___nodes___status
  posts___nodes___tags___nodes
  posts___nodes___template___templateName
  posts___nodes___terms___nodes
  posts___nodes___title
  posts___nodes___toPing
  posts___nodes___uri
  posts___nodes___nodeType
  posts___nodes___parent___id
  posts___nodes___parent___children
  posts___nodes___children
  posts___nodes___children___id
  posts___nodes___children___children
  posts___nodes___internal___content
  posts___nodes___internal___contentDigest
  posts___nodes___internal___description
  posts___nodes___internal___fieldOwners
  posts___nodes___internal___ignoreType
  posts___nodes___internal___mediaType
  posts___nodes___internal___owner
  posts___nodes___internal___type
  slug
  taxonomy___node___archivePath
  taxonomy___node___connectedContentTypes___nodes
  taxonomy___node___description
  taxonomy___node___graphqlPluralName
  taxonomy___node___graphqlSingleName
  taxonomy___node___hierarchical
  taxonomy___node___id
  taxonomy___node___label
  taxonomy___node___name
  taxonomy___node___public
  taxonomy___node___restBase
  taxonomy___node___restControllerClass
  taxonomy___node___showCloud
  taxonomy___node___showInAdminColumn
  taxonomy___node___showInGraphql
  taxonomy___node___showInMenu
  taxonomy___node___showInNavMenus
  taxonomy___node___showInQuickEdit
  taxonomy___node___showInRest
  taxonomy___node___showUi
  taxonomy___node___nodeType
  taxonomy___node___parent___id
  taxonomy___node___parent___children
  taxonomy___node___children
  taxonomy___node___children___id
  taxonomy___node___children___children
  taxonomy___node___internal___content
  taxonomy___node___internal___contentDigest
  taxonomy___node___internal___description
  taxonomy___node___internal___fieldOwners
  taxonomy___node___internal___ignoreType
  taxonomy___node___internal___mediaType
  taxonomy___node___internal___owner
  taxonomy___node___internal___type
  termGroupId
  termTaxonomyId
  uri
  nodeType
  parent___id
  parent___parent___id
  parent___parent___parent___id
  parent___parent___parent___children
  parent___parent___children
  parent___parent___children___id
  parent___parent___children___children
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___children
  parent___children___id
  parent___children___parent___id
  parent___children___parent___children
  parent___children___children
  parent___children___children___id
  parent___children___children___children
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  children
  children___id
  children___parent___id
  children___parent___parent___id
  children___parent___parent___children
  children___parent___children
  children___parent___children___id
  children___parent___children___children
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___children
  children___children___id
  children___children___parent___id
  children___children___parent___children
  children___children___children
  children___children___children___id
  children___children___children___children
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
}

type WpPostFormatGroupConnection {
  totalCount: Int!
  edges: [WpPostFormatEdge!]!
  nodes: [WpPostFormat!]!
  pageInfo: PageInfo!
  field: String!
  fieldValue: String
}

input WpPostFormatSortInput {
  fields: [WpPostFormatFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

type WpTagConnection {
  totalCount: Int!
  edges: [WpTagEdge!]!
  nodes: [WpTag!]!
  pageInfo: PageInfo!
  distinct(field: WpTagFieldsEnum!): [String!]!
  max(field: WpTagFieldsEnum!): Float
  min(field: WpTagFieldsEnum!): Float
  sum(field: WpTagFieldsEnum!): Float
  group(skip: Int, limit: Int, field: WpTagFieldsEnum!): [WpTagGroupConnection!]!
}

type WpTagEdge {
  next: WpTag
  node: WpTag!
  previous: WpTag
}

enum WpTagFieldsEnum {
  contentNodes___nodes
  contentNodes___nodes___databaseId
  contentNodes___nodes___date
  contentNodes___nodes___dateGmt
  contentNodes___nodes___desiredSlug
  contentNodes___nodes___enclosure
  contentNodes___nodes___guid
  contentNodes___nodes___id
  contentNodes___nodes___isContentNode
  contentNodes___nodes___isTermNode
  contentNodes___nodes___link
  contentNodes___nodes___modified
  contentNodes___nodes___modifiedGmt
  contentNodes___nodes___slug
  contentNodes___nodes___status
  contentNodes___nodes___template___templateName
  contentNodes___nodes___uri
  contentNodes___nodes___nodeType
  contentNodes___nodes___parent___id
  contentNodes___nodes___parent___children
  contentNodes___nodes___children
  contentNodes___nodes___children___id
  contentNodes___nodes___children___children
  contentNodes___nodes___internal___content
  contentNodes___nodes___internal___contentDigest
  contentNodes___nodes___internal___description
  contentNodes___nodes___internal___fieldOwners
  contentNodes___nodes___internal___ignoreType
  contentNodes___nodes___internal___mediaType
  contentNodes___nodes___internal___owner
  contentNodes___nodes___internal___type
  count
  databaseId
  description
  id
  isContentNode
  isTermNode
  link
  name
  posts___nodes
  posts___nodes___authorDatabaseId
  posts___nodes___authorId
  posts___nodes___categories___nodes
  posts___nodes___commentCount
  posts___nodes___commentStatus
  posts___nodes___comments___nodes
  posts___nodes___content
  posts___nodes___databaseId
  posts___nodes___date
  posts___nodes___dateGmt
  posts___nodes___desiredSlug
  posts___nodes___enclosure
  posts___nodes___excerpt
  posts___nodes___featuredImageDatabaseId
  posts___nodes___featuredImageId
  posts___nodes___guid
  posts___nodes___id
  posts___nodes___isContentNode
  posts___nodes___isRevision
  posts___nodes___isSticky
  posts___nodes___isTermNode
  posts___nodes___link
  posts___nodes___modified
  posts___nodes___modifiedGmt
  posts___nodes___pingStatus
  posts___nodes___pinged
  posts___nodes___postFormats___nodes
  posts___nodes___slug
  posts___nodes___status
  posts___nodes___tags___nodes
  posts___nodes___template___templateName
  posts___nodes___terms___nodes
  posts___nodes___title
  posts___nodes___toPing
  posts___nodes___uri
  posts___nodes___nodeType
  posts___nodes___parent___id
  posts___nodes___parent___children
  posts___nodes___children
  posts___nodes___children___id
  posts___nodes___children___children
  posts___nodes___internal___content
  posts___nodes___internal___contentDigest
  posts___nodes___internal___description
  posts___nodes___internal___fieldOwners
  posts___nodes___internal___ignoreType
  posts___nodes___internal___mediaType
  posts___nodes___internal___owner
  posts___nodes___internal___type
  slug
  taxonomy___node___archivePath
  taxonomy___node___connectedContentTypes___nodes
  taxonomy___node___description
  taxonomy___node___graphqlPluralName
  taxonomy___node___graphqlSingleName
  taxonomy___node___hierarchical
  taxonomy___node___id
  taxonomy___node___label
  taxonomy___node___name
  taxonomy___node___public
  taxonomy___node___restBase
  taxonomy___node___restControllerClass
  taxonomy___node___showCloud
  taxonomy___node___showInAdminColumn
  taxonomy___node___showInGraphql
  taxonomy___node___showInMenu
  taxonomy___node___showInNavMenus
  taxonomy___node___showInQuickEdit
  taxonomy___node___showInRest
  taxonomy___node___showUi
  taxonomy___node___nodeType
  taxonomy___node___parent___id
  taxonomy___node___parent___children
  taxonomy___node___children
  taxonomy___node___children___id
  taxonomy___node___children___children
  taxonomy___node___internal___content
  taxonomy___node___internal___contentDigest
  taxonomy___node___internal___description
  taxonomy___node___internal___fieldOwners
  taxonomy___node___internal___ignoreType
  taxonomy___node___internal___mediaType
  taxonomy___node___internal___owner
  taxonomy___node___internal___type
  termGroupId
  termTaxonomyId
  uri
  nodeType
  parent___id
  parent___parent___id
  parent___parent___parent___id
  parent___parent___parent___children
  parent___parent___children
  parent___parent___children___id
  parent___parent___children___children
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___children
  parent___children___id
  parent___children___parent___id
  parent___children___parent___children
  parent___children___children
  parent___children___children___id
  parent___children___children___children
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  children
  children___id
  children___parent___id
  children___parent___parent___id
  children___parent___parent___children
  children___parent___children
  children___parent___children___id
  children___parent___children___children
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___children
  children___children___id
  children___children___parent___id
  children___children___parent___children
  children___children___children
  children___children___children___id
  children___children___children___children
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
}

type WpTagGroupConnection {
  totalCount: Int!
  edges: [WpTagEdge!]!
  nodes: [WpTag!]!
  pageInfo: PageInfo!
  field: String!
  fieldValue: String
}

input WpTagSortInput {
  fields: [WpTagFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

type WpUserRoleConnection {
  totalCount: Int!
  edges: [WpUserRoleEdge!]!
  nodes: [WpUserRole!]!
  pageInfo: PageInfo!
  distinct(field: WpUserRoleFieldsEnum!): [String!]!
  max(field: WpUserRoleFieldsEnum!): Float
  min(field: WpUserRoleFieldsEnum!): Float
  sum(field: WpUserRoleFieldsEnum!): Float
  group(skip: Int, limit: Int, field: WpUserRoleFieldsEnum!): [WpUserRoleGroupConnection!]!
}

type WpUserRoleEdge {
  next: WpUserRole
  node: WpUserRole!
  previous: WpUserRole
}

enum WpUserRoleFieldsEnum {
  capabilities
  displayName
  id
  name
  nodeType
  parent___id
  parent___parent___id
  parent___parent___parent___id
  parent___parent___parent___children
  parent___parent___children
  parent___parent___children___id
  parent___parent___children___children
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___children
  parent___children___id
  parent___children___parent___id
  parent___children___parent___children
  parent___children___children
  parent___children___children___id
  parent___children___children___children
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  children
  children___id
  children___parent___id
  children___parent___parent___id
  children___parent___parent___children
  children___parent___children
  children___parent___children___id
  children___parent___children___children
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___children
  children___children___id
  children___children___parent___id
  children___children___parent___children
  children___children___children
  children___children___children___id
  children___children___children___children
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
}

type WpUserRoleGroupConnection {
  totalCount: Int!
  edges: [WpUserRoleEdge!]!
  nodes: [WpUserRole!]!
  pageInfo: PageInfo!
  field: String!
  fieldValue: String
}

input WpUserRoleSortInput {
  fields: [WpUserRoleFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input WpMenuLocationEnumQueryOperatorInput {
  eq: WpMenuLocationEnum
  ne: WpMenuLocationEnum
  in: [WpMenuLocationEnum]
  nin: [WpMenuLocationEnum]
}

input WpMenuToMenuItemConnectionFilterInput {
  nodes: WpMenuItemFilterListInput
}

input WpMenuItemFilterListInput {
  elemMatch: WpMenuItemFilterInput
}

input WpMenuItemFilterInput {
  childItems: WpMenuItemToMenuItemConnectionFilterInput
  connectedNode: WpMenuItemToMenuItemLinkableConnectionEdgeFilterInput
  cssClasses: StringQueryOperatorInput
  databaseId: IntQueryOperatorInput
  description: StringQueryOperatorInput
  id: StringQueryOperatorInput
  label: StringQueryOperatorInput
  linkRelationship: StringQueryOperatorInput
  locations: WpMenuLocationEnumQueryOperatorInput
  menu: WpMenuItemToMenuConnectionEdgeFilterInput
  order: IntQueryOperatorInput
  parentDatabaseId: IntQueryOperatorInput
  parentId: IDQueryOperatorInput
  path: StringQueryOperatorInput
  target: StringQueryOperatorInput
  title: StringQueryOperatorInput
  url: StringQueryOperatorInput
  nodeType: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
}

input WpMenuItemToMenuItemConnectionFilterInput {
  nodes: WpMenuItemFilterListInput
}

input WpMenuItemToMenuItemLinkableConnectionEdgeFilterInput {
  node: WpMenuItemLinkableFilterInput
}

input WpMenuItemLinkableFilterInput {
  databaseId: IntQueryOperatorInput
  id: IDQueryOperatorInput
  uri: StringQueryOperatorInput
}

input WpMenuItemToMenuConnectionEdgeFilterInput {
  node: WpMenuFilterInput
}

input WpMenuFilterInput {
  count: IntQueryOperatorInput
  databaseId: IntQueryOperatorInput
  id: StringQueryOperatorInput
  locations: WpMenuLocationEnumQueryOperatorInput
  menuItems: WpMenuToMenuItemConnectionFilterInput
  name: StringQueryOperatorInput
  slug: StringQueryOperatorInput
  nodeType: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
}

type WpMenuConnection {
  totalCount: Int!
  edges: [WpMenuEdge!]!
  nodes: [WpMenu!]!
  pageInfo: PageInfo!
  distinct(field: WpMenuFieldsEnum!): [String!]!
  max(field: WpMenuFieldsEnum!): Float
  min(field: WpMenuFieldsEnum!): Float
  sum(field: WpMenuFieldsEnum!): Float
  group(skip: Int, limit: Int, field: WpMenuFieldsEnum!): [WpMenuGroupConnection!]!
}

type WpMenuEdge {
  next: WpMenu
  node: WpMenu!
  previous: WpMenu
}

enum WpMenuFieldsEnum {
  count
  databaseId
  id
  locations
  menuItems___nodes
  menuItems___nodes___childItems___nodes
  menuItems___nodes___cssClasses
  menuItems___nodes___databaseId
  menuItems___nodes___description
  menuItems___nodes___id
  menuItems___nodes___label
  menuItems___nodes___linkRelationship
  menuItems___nodes___locations
  menuItems___nodes___order
  menuItems___nodes___parentDatabaseId
  menuItems___nodes___parentId
  menuItems___nodes___path
  menuItems___nodes___target
  menuItems___nodes___title
  menuItems___nodes___url
  menuItems___nodes___nodeType
  menuItems___nodes___parent___id
  menuItems___nodes___parent___children
  menuItems___nodes___children
  menuItems___nodes___children___id
  menuItems___nodes___children___children
  menuItems___nodes___internal___content
  menuItems___nodes___internal___contentDigest
  menuItems___nodes___internal___description
  menuItems___nodes___internal___fieldOwners
  menuItems___nodes___internal___ignoreType
  menuItems___nodes___internal___mediaType
  menuItems___nodes___internal___owner
  menuItems___nodes___internal___type
  name
  slug
  nodeType
  parent___id
  parent___parent___id
  parent___parent___parent___id
  parent___parent___parent___children
  parent___parent___children
  parent___parent___children___id
  parent___parent___children___children
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___children
  parent___children___id
  parent___children___parent___id
  parent___children___parent___children
  parent___children___children
  parent___children___children___id
  parent___children___children___children
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  children
  children___id
  children___parent___id
  children___parent___parent___id
  children___parent___parent___children
  children___parent___children
  children___parent___children___id
  children___parent___children___children
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___children
  children___children___id
  children___children___parent___id
  children___children___parent___children
  children___children___children
  children___children___children___id
  children___children___children___children
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
}

type WpMenuGroupConnection {
  totalCount: Int!
  edges: [WpMenuEdge!]!
  nodes: [WpMenu!]!
  pageInfo: PageInfo!
  field: String!
  fieldValue: String
}

input WpMenuSortInput {
  fields: [WpMenuFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

type WpMenuItemConnection {
  totalCount: Int!
  edges: [WpMenuItemEdge!]!
  nodes: [WpMenuItem!]!
  pageInfo: PageInfo!
  distinct(field: WpMenuItemFieldsEnum!): [String!]!
  max(field: WpMenuItemFieldsEnum!): Float
  min(field: WpMenuItemFieldsEnum!): Float
  sum(field: WpMenuItemFieldsEnum!): Float
  group(skip: Int, limit: Int, field: WpMenuItemFieldsEnum!): [WpMenuItemGroupConnection!]!
}

type WpMenuItemEdge {
  next: WpMenuItem
  node: WpMenuItem!
  previous: WpMenuItem
}

enum WpMenuItemFieldsEnum {
  childItems___nodes
  childItems___nodes___childItems___nodes
  childItems___nodes___cssClasses
  childItems___nodes___databaseId
  childItems___nodes___description
  childItems___nodes___id
  childItems___nodes___label
  childItems___nodes___linkRelationship
  childItems___nodes___locations
  childItems___nodes___order
  childItems___nodes___parentDatabaseId
  childItems___nodes___parentId
  childItems___nodes___path
  childItems___nodes___target
  childItems___nodes___title
  childItems___nodes___url
  childItems___nodes___nodeType
  childItems___nodes___parent___id
  childItems___nodes___parent___children
  childItems___nodes___children
  childItems___nodes___children___id
  childItems___nodes___children___children
  childItems___nodes___internal___content
  childItems___nodes___internal___contentDigest
  childItems___nodes___internal___description
  childItems___nodes___internal___fieldOwners
  childItems___nodes___internal___ignoreType
  childItems___nodes___internal___mediaType
  childItems___nodes___internal___owner
  childItems___nodes___internal___type
  connectedNode___node___databaseId
  connectedNode___node___id
  connectedNode___node___uri
  cssClasses
  databaseId
  description
  id
  label
  linkRelationship
  locations
  menu___node___count
  menu___node___databaseId
  menu___node___id
  menu___node___locations
  menu___node___menuItems___nodes
  menu___node___name
  menu___node___slug
  menu___node___nodeType
  menu___node___parent___id
  menu___node___parent___children
  menu___node___children
  menu___node___children___id
  menu___node___children___children
  menu___node___internal___content
  menu___node___internal___contentDigest
  menu___node___internal___description
  menu___node___internal___fieldOwners
  menu___node___internal___ignoreType
  menu___node___internal___mediaType
  menu___node___internal___owner
  menu___node___internal___type
  order
  parentDatabaseId
  parentId
  path
  target
  title
  url
  nodeType
  parent___id
  parent___parent___id
  parent___parent___parent___id
  parent___parent___parent___children
  parent___parent___children
  parent___parent___children___id
  parent___parent___children___children
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___children
  parent___children___id
  parent___children___parent___id
  parent___children___parent___children
  parent___children___children
  parent___children___children___id
  parent___children___children___children
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  children
  children___id
  children___parent___id
  children___parent___parent___id
  children___parent___parent___children
  children___parent___children
  children___parent___children___id
  children___parent___children___children
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___children
  children___children___id
  children___children___parent___id
  children___children___parent___children
  children___children___children
  children___children___children___id
  children___children___children___children
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
}

type WpMenuItemGroupConnection {
  totalCount: Int!
  edges: [WpMenuItemEdge!]!
  nodes: [WpMenuItem!]!
  pageInfo: PageInfo!
  field: String!
  fieldValue: String
}

input WpMenuItemSortInput {
  fields: [WpMenuItemFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

type WpCommentAuthorConnection {
  totalCount: Int!
  edges: [WpCommentAuthorEdge!]!
  nodes: [WpCommentAuthor!]!
  pageInfo: PageInfo!
  distinct(field: WpCommentAuthorFieldsEnum!): [String!]!
  max(field: WpCommentAuthorFieldsEnum!): Float
  min(field: WpCommentAuthorFieldsEnum!): Float
  sum(field: WpCommentAuthorFieldsEnum!): Float
  group(skip: Int, limit: Int, field: WpCommentAuthorFieldsEnum!): [WpCommentAuthorGroupConnection!]!
}

type WpCommentAuthorEdge {
  next: WpCommentAuthor
  node: WpCommentAuthor!
  previous: WpCommentAuthor
}

enum WpCommentAuthorFieldsEnum {
  databaseId
  email
  id
  name
  url
  nodeType
  parent___id
  parent___parent___id
  parent___parent___parent___id
  parent___parent___parent___children
  parent___parent___children
  parent___parent___children___id
  parent___parent___children___children
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___children
  parent___children___id
  parent___children___parent___id
  parent___children___parent___children
  parent___children___children
  parent___children___children___id
  parent___children___children___children
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  children
  children___id
  children___parent___id
  children___parent___parent___id
  children___parent___parent___children
  children___parent___children
  children___parent___children___id
  children___parent___children___children
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___children
  children___children___id
  children___children___parent___id
  children___children___parent___children
  children___children___children
  children___children___children___id
  children___children___children___children
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
}

type WpCommentAuthorGroupConnection {
  totalCount: Int!
  edges: [WpCommentAuthorEdge!]!
  nodes: [WpCommentAuthor!]!
  pageInfo: PageInfo!
  field: String!
  fieldValue: String
}

input WpCommentAuthorFilterInput {
  databaseId: IntQueryOperatorInput
  email: StringQueryOperatorInput
  id: StringQueryOperatorInput
  name: StringQueryOperatorInput
  url: StringQueryOperatorInput
  nodeType: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
}

input WpCommentAuthorSortInput {
  fields: [WpCommentAuthorFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input WpSettingsFilterInput {
  discussionSettingsDefaultCommentStatus: StringQueryOperatorInput
  discussionSettingsDefaultPingStatus: StringQueryOperatorInput
  generalSettingsDateFormat: StringQueryOperatorInput
  generalSettingsDescription: StringQueryOperatorInput
  generalSettingsEmail: StringQueryOperatorInput
  generalSettingsLanguage: StringQueryOperatorInput
  generalSettingsStartOfWeek: IntQueryOperatorInput
  generalSettingsTimeFormat: StringQueryOperatorInput
  generalSettingsTimezone: StringQueryOperatorInput
  generalSettingsTitle: StringQueryOperatorInput
  generalSettingsUrl: StringQueryOperatorInput
  readingSettingsPostsPerPage: IntQueryOperatorInput
  writingSettingsDefaultCategory: IntQueryOperatorInput
  writingSettingsDefaultPostFormat: StringQueryOperatorInput
  writingSettingsUseSmilies: BooleanQueryOperatorInput
}

input WpDiscussionSettingsFilterInput {
  defaultCommentStatus: StringQueryOperatorInput
  defaultPingStatus: StringQueryOperatorInput
}

input WpGeneralSettingsFilterInput {
  dateFormat: StringQueryOperatorInput
  description: StringQueryOperatorInput
  email: StringQueryOperatorInput
  language: StringQueryOperatorInput
  startOfWeek: IntQueryOperatorInput
  timeFormat: StringQueryOperatorInput
  timezone: StringQueryOperatorInput
  title: StringQueryOperatorInput
  url: StringQueryOperatorInput
}

input WpReadingSettingsFilterInput {
  postsPerPage: IntQueryOperatorInput
}

input WpWPGatsbyFilterInput {
  arePrettyPermalinksEnabled: BooleanQueryOperatorInput
}

input WpWritingSettingsFilterInput {
  defaultCategory: IntQueryOperatorInput
  defaultPostFormat: StringQueryOperatorInput
  useSmilies: BooleanQueryOperatorInput
}

type WpConnection {
  totalCount: Int!
  edges: [WpEdge!]!
  nodes: [Wp!]!
  pageInfo: PageInfo!
  distinct(field: WpFieldsEnum!): [String!]!
  max(field: WpFieldsEnum!): Float
  min(field: WpFieldsEnum!): Float
  sum(field: WpFieldsEnum!): Float
  group(skip: Int, limit: Int, field: WpFieldsEnum!): [WpGroupConnection!]!
}

type WpEdge {
  next: Wp
  node: Wp!
  previous: Wp
}

enum WpFieldsEnum {
  allSettings___discussionSettingsDefaultCommentStatus
  allSettings___discussionSettingsDefaultPingStatus
  allSettings___generalSettingsDateFormat
  allSettings___generalSettingsDescription
  allSettings___generalSettingsEmail
  allSettings___generalSettingsLanguage
  allSettings___generalSettingsStartOfWeek
  allSettings___generalSettingsTimeFormat
  allSettings___generalSettingsTimezone
  allSettings___generalSettingsTitle
  allSettings___generalSettingsUrl
  allSettings___readingSettingsPostsPerPage
  allSettings___writingSettingsDefaultCategory
  allSettings___writingSettingsDefaultPostFormat
  allSettings___writingSettingsUseSmilies
  discussionSettings___defaultCommentStatus
  discussionSettings___defaultPingStatus
  generalSettings___dateFormat
  generalSettings___description
  generalSettings___email
  generalSettings___language
  generalSettings___startOfWeek
  generalSettings___timeFormat
  generalSettings___timezone
  generalSettings___title
  generalSettings___url
  readingSettings___postsPerPage
  wpGatsby___arePrettyPermalinksEnabled
  writingSettings___defaultCategory
  writingSettings___defaultPostFormat
  writingSettings___useSmilies
  nodeType
  id
  parent___id
  parent___parent___id
  parent___parent___parent___id
  parent___parent___parent___children
  parent___parent___children
  parent___parent___children___id
  parent___parent___children___children
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___children
  parent___children___id
  parent___children___parent___id
  parent___children___parent___children
  parent___children___children
  parent___children___children___id
  parent___children___children___children
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  children
  children___id
  children___parent___id
  children___parent___parent___id
  children___parent___parent___children
  children___parent___children
  children___parent___children___id
  children___parent___children___children
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___children
  children___children___id
  children___children___parent___id
  children___children___parent___children
  children___children___children
  children___children___children___id
  children___children___children___children
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
}

type WpGroupConnection {
  totalCount: Int!
  edges: [WpEdge!]!
  nodes: [Wp!]!
  pageInfo: PageInfo!
  field: String!
  fieldValue: String
}

input WpFilterInput {
  allSettings: WpSettingsFilterInput
  discussionSettings: WpDiscussionSettingsFilterInput
  generalSettings: WpGeneralSettingsFilterInput
  readingSettings: WpReadingSettingsFilterInput
  wpGatsby: WpWPGatsbyFilterInput
  writingSettings: WpWritingSettingsFilterInput
  nodeType: StringQueryOperatorInput
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
}

input WpSortInput {
  fields: [WpFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

type ImageSharpConnection {
  totalCount: Int!
  edges: [ImageSharpEdge!]!
  nodes: [ImageSharp!]!
  pageInfo: PageInfo!
  distinct(field: ImageSharpFieldsEnum!): [String!]!
  max(field: ImageSharpFieldsEnum!): Float
  min(field: ImageSharpFieldsEnum!): Float
  sum(field: ImageSharpFieldsEnum!): Float
  group(skip: Int, limit: Int, field: ImageSharpFieldsEnum!): [ImageSharpGroupConnection!]!
}

type ImageSharpEdge {
  next: ImageSharp
  node: ImageSharp!
  previous: ImageSharp
}

enum ImageSharpFieldsEnum {
  fixed___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fixed___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fixed___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fixed___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fixed___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fixed___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fixed___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fixed___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fixed___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fixed___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___sizes @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___originalImg @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___presentationWidth @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___presentationHeight @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  gatsbyImageData @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  original___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  original___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  original___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  resize___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  resize___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  resize___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  resize___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  resize___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  resize___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
}

type ImageSharpGroupConnection {
  totalCount: Int!
  edges: [ImageSharpEdge!]!
  nodes: [ImageSharp!]!
  pageInfo: PageInfo!
  field: String!
  fieldValue: String
}

input ImageSharpSortInput {
  fields: [ImageSharpFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

type SitePluginConnection {
  totalCount: Int!
  edges: [SitePluginEdge!]!
  nodes: [SitePlugin!]!
  pageInfo: PageInfo!
  distinct(field: SitePluginFieldsEnum!): [String!]!
  max(field: SitePluginFieldsEnum!): Float
  min(field: SitePluginFieldsEnum!): Float
  sum(field: SitePluginFieldsEnum!): Float
  group(skip: Int, limit: Int, field: SitePluginFieldsEnum!): [SitePluginGroupConnection!]!
}

type SitePluginEdge {
  next: SitePlugin
  node: SitePlugin!
  previous: SitePlugin
}

enum SitePluginFieldsEnum {
  id
  parent___id
  parent___parent___id
  parent___parent___parent___id
  parent___parent___parent___children
  parent___parent___children
  parent___parent___children___id
  parent___parent___children___children
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___children
  parent___children___id
  parent___children___parent___id
  parent___children___parent___children
  parent___children___children
  parent___children___children___id
  parent___children___children___children
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  children
  children___id
  children___parent___id
  children___parent___parent___id
  children___parent___parent___children
  children___parent___children
  children___parent___children___id
  children___parent___children___children
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___children
  children___children___id
  children___children___parent___id
  children___children___parent___children
  children___children___children
  children___children___children___id
  children___children___children___children
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  resolve
  name
  version
  pluginOptions___url
  pluginOptions___verbose
  pluginOptions___base64Width
  pluginOptions___stripMetadata
  pluginOptions___defaultQuality
  pluginOptions___failOnError
  pluginOptions___name
  pluginOptions___short_name
  pluginOptions___start_url
  pluginOptions___background_color
  pluginOptions___theme_color
  pluginOptions___display
  pluginOptions___icon
  pluginOptions___legacy
  pluginOptions___theme_color_in_head
  pluginOptions___cache_busting_mode
  pluginOptions___crossOrigin
  pluginOptions___include_favicon
  pluginOptions___cacheDigest
  pluginOptions___emitSchema___src___generated___gatsby_schema_graphql
  pluginOptions___emitSchema___src___generated___gatsby_introspection_json
  pluginOptions___emitPluginDocuments___src___generated___gatsby_plugin_documents_graphql
  pluginOptions___path
  pluginOptions___pathCheck
  pluginOptions___allExtensions
  pluginOptions___isTSX
  pluginOptions___jsxPragma
  nodeAPIs
  browserAPIs
  ssrAPIs
  pluginFilepath
  packageJson___name
  packageJson___description
  packageJson___version
  packageJson___main
  packageJson___license
  packageJson___dependencies
  packageJson___dependencies___name
  packageJson___dependencies___version
  packageJson___devDependencies
  packageJson___devDependencies___name
  packageJson___devDependencies___version
  packageJson___peerDependencies
  packageJson___peerDependencies___name
  packageJson___peerDependencies___version
  packageJson___keywords
}

type SitePluginGroupConnection {
  totalCount: Int!
  edges: [SitePluginEdge!]!
  nodes: [SitePlugin!]!
  pageInfo: PageInfo!
  field: String!
  fieldValue: String
}

input SitePluginSortInput {
  fields: [SitePluginFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

type SiteBuildMetadataConnection {
  totalCount: Int!
  edges: [SiteBuildMetadataEdge!]!
  nodes: [SiteBuildMetadata!]!
  pageInfo: PageInfo!
  distinct(field: SiteBuildMetadataFieldsEnum!): [String!]!
  max(field: SiteBuildMetadataFieldsEnum!): Float
  min(field: SiteBuildMetadataFieldsEnum!): Float
  sum(field: SiteBuildMetadataFieldsEnum!): Float
  group(skip: Int, limit: Int, field: SiteBuildMetadataFieldsEnum!): [SiteBuildMetadataGroupConnection!]!
}

type SiteBuildMetadataEdge {
  next: SiteBuildMetadata
  node: SiteBuildMetadata!
  previous: SiteBuildMetadata
}

enum SiteBuildMetadataFieldsEnum {
  id
  parent___id
  parent___parent___id
  parent___parent___parent___id
  parent___parent___parent___children
  parent___parent___children
  parent___parent___children___id
  parent___parent___children___children
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___children
  parent___children___id
  parent___children___parent___id
  parent___children___parent___children
  parent___children___children
  parent___children___children___id
  parent___children___children___children
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  children
  children___id
  children___parent___id
  children___parent___parent___id
  children___parent___parent___children
  children___parent___children
  children___parent___children___id
  children___parent___children___children
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___children
  children___children___id
  children___children___parent___id
  children___children___parent___children
  children___children___children
  children___children___children___id
  children___children___children___children
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  buildTime
}

type SiteBuildMetadataGroupConnection {
  totalCount: Int!
  edges: [SiteBuildMetadataEdge!]!
  nodes: [SiteBuildMetadata!]!
  pageInfo: PageInfo!
  field: String!
  fieldValue: String
}

input SiteBuildMetadataFilterInput {
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
  buildTime: DateQueryOperatorInput
}

input SiteBuildMetadataSortInput {
  fields: [SiteBuildMetadataFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}
